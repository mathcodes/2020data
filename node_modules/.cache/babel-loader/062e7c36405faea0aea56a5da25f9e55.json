{"ast":null,"code":"var _jsxFileName = \"/Users/jonchristie/Downloads/covid19-master/src/utils/plot_types.js\";\nimport React from 'react';\nimport format from 'date-fns/format';\nimport i18n from '../data/i18n.yml';\nimport { parseDate, formatDate } from './utils';\n\nconst integerFormat = e => parseInt(e, 10) !== e ? '' : Math.abs(e) < 1000 ? e : Math.abs(e) < 10 ** 6 ? `${e / 1000}K` : Math.abs(e) < 10 ** 9 ? `${e / 10 ** 6}M` : `${e / 10 ** 9}B`;\n\nconst absIntegerFormat = e => parseInt(e, 10) !== e ? '' : Math.abs(e) < 1000 ? Math.abs(e) : `${Math.abs(e) / 1000}K`;\n\nconst streamTimeFormat = (idx, interval, dates) => idx % interval === 0 ? format(parseDate(dates[idx]), 'M/d') : '';\n\nconst fatalityTooltip = (yLabel, xLabel) => ({\n  point\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"plot-tooltip plot-tooltip-line\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: point.data.name || point.data.regionName ? 'plot-tooltip-bold' : '',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }\n}, point.data.name ? `${point.data.name} ${point.data.years ? '(' + point.data.years + ')' : ''}` : point.data.regionName ? point.data.regionName : formatDate(point.data.date, point.data.lang)), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }\n}, yLabel[point.data.lang]), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"plot-tooltip-bold\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }\n}, ` ${point.data.yFormatted}`)), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }\n}, xLabel[point.data.lang]), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"plot-tooltip-bold\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }\n}, ` ${point.data.xFormatted}`)));\n\nconst regionLegends = {\n  anchor: 'right',\n  direction: 'column',\n  translateX: 100,\n  itemWidth: 90,\n  itemHeight: 20,\n  itemTextColor: '#000',\n  symbolSize: 12,\n  symbolShape: 'circle'\n};\nexport const getSpecificPlotType = (plotType, plotDetails) => {\n  let specificType = '';\n\n  if (plotType === 'plot_basic') {\n    specificType = plotDetails.stats === 'cumulative' ? 'total' : 'new';\n  } else if (plotType === 'plot_fatality_recovery') {\n    specificType = 'fatality_recovery';\n  } else if (plotType === 'plot_growth') {\n    specificType = plotDetails.stats === 'cumulative' ? 'growth_total' : 'growth_new';\n  } else if (plotType === 'plot_one_vs_rest') {\n    specificType = plotDetails.stats === 'cumulative' ? 'one_vs_rest' : 'one_vs_rest_new';\n  } else if (plotType === 'plot_fatality_line') {\n    if (plotDetails.diseaseComparison === 'show') specificType = plotDetails.fatalityLine === 'rate' ? 'fatality_line' : 'fatality_line2';\n    if (plotDetails.diseaseComparison === 'hide') specificType = plotDetails.fatalityLine === 'rate' ? 'fatality_line_only' : 'fatality_line2_only';\n  } else if (plotType === 'plot_ranking') {\n    specificType = plotDetails.stats === 'cumulative' ? 'most_affected_subregions' : 'most_affected_subregions_new';\n  } else if (plotType === 'plot_subregion_basic') {\n    specificType = plotDetails.stats === 'cumulative' ? 'subregion_total' : 'subregion_new';\n  } else if (plotType === 'plot_subregion_stream') {\n    specificType = plotDetails.stats === 'cumulative' ? 'subregion_total_stream' : 'subregion_new_stream';\n  } else if (plotType === 'plot_subregion_active_stream') {\n    specificType = 'subregion_active_stream';\n  } else if (plotType === 'plot_subregion_fatality') {\n    if (plotDetails.diseaseComparison === 'show') specificType = plotDetails.fatalityLine === 'rate' ? 'subregion_fatality' : 'subregion_fatality2';\n    if (plotDetails.diseaseComparison === 'hide') specificType = plotDetails.fatalityLine === 'rate' ? 'subregion_fatality_only' : 'subregion_fatality2_only';\n  } else if (plotType === 'plot_subregion_shifted') {\n    if (plotDetails.shifted === '100') specificType = plotDetails.stats === 'cumulative' ? 'subregion_total_shifted_100' : 'subregion_new_shifted_100';\n    if (plotDetails.shifted === '10') specificType = plotDetails.stats === 'cumulative' ? 'subregion_total_shifted_10' : 'subregion_new_shifted_10';\n  } else if (plotType === 'plot_doubling_time') {\n    specificType = 'doubling_time';\n  } else if (plotType === 'plot_r0') {\n    specificType = 'r0';\n  }\n\n  return specificType;\n};\nexport const plotTypes = {\n  plot_basic: {\n    subregions: false,\n    metricChange: false,\n    statsChange: true,\n    scaleChange: true,\n    movingAverage: true,\n    text: i18n.CASES\n  },\n  plot_fatality_recovery: {\n    subregions: false,\n    metricChange: false,\n    statsChange: false,\n    scaleChange: false,\n    movingAverage: true,\n    text: i18n.FATALITY_RECOVERY_RATE\n  },\n  plot_growth: {\n    subregions: false,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: false,\n    movingAverage: true,\n    text: i18n.GROWTH_RATE\n  },\n  plot_one_vs_rest: {\n    subregions: false,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: true,\n    movingAverage: true,\n    text: i18n.ONE_VS_REST\n  },\n  plot_fatality_line: {\n    subregions: false,\n    metricChange: false,\n    statsChange: false,\n    scaleChange: false,\n    text: i18n.FATALITY_LINE\n  },\n  plot_doubling_time: {\n    subregions: false,\n    metricChange: true,\n    statsChange: false,\n    scaleChange: false,\n    movingAverage: true,\n    text: i18n.CASE_DOUBLING_TIME\n  },\n  plot_r0: {\n    subregions: false,\n    metricChange: false,\n    statsChange: false,\n    scaleChange: false,\n    movingAverage: true,\n    text: i18n.ESTIMATED_RO\n  },\n  plot_ranking: {\n    subregions: true,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: false,\n    text: i18n.MOST_AFFECTED_SUBREGIONS\n  },\n  plot_subregion_basic: {\n    subregions: true,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: true,\n    movingAverage: true,\n    text: i18n.SUBREGION\n  },\n  plot_subregion_shifted: {\n    subregions: true,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: true,\n    movingAverage: true,\n    text: i18n.SUBREGION_SHIFTED\n  },\n  plot_subregion_stream: {\n    subregions: true,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: false,\n    text: i18n.SUBREGION_STREAM\n  },\n  plot_subregion_active_stream: {\n    subregions: false,\n    metricChange: false,\n    statsChange: false,\n    scaleChange: false,\n    text: i18n.SUBREGION_ACTIVE_STREAM\n  },\n  plot_subregion_fatality: {\n    subregions: true,\n    metricChange: false,\n    statsChange: false,\n    scaleChange: false,\n    text: i18n.SUBREGION_FATALITY\n  }\n};\nexport const plotSpecificTypes = {\n  total: {\n    type: 'line',\n    yAxisFormat: integerFormat,\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    yFormat: ',d',\n    log: true,\n    legendItemWidth: 100\n  },\n  new: {\n    type: 'line',\n    yAxisFormat: integerFormat,\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    yFormat: ',d',\n    log: false,\n    legendItemWidth: 100\n  },\n  fatality_recovery: {\n    type: 'line',\n    yAxisFormat: '.2%',\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    yFormat: '.2%',\n    log: false,\n    legendItemWidth: 150\n  },\n  growth_total: {\n    type: 'line',\n    yAxisFormat: '.0%',\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    yFormat: '.2%',\n    log: false,\n    legendItemWidth: 50,\n    yScale: {\n      type: 'linear',\n      min: 0,\n      max: 1\n    }\n  },\n  growth_new: {\n    type: 'line',\n    yAxisFormat: '.0%',\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    yFormat: '.2%',\n    log: false,\n    legendItemWidth: 50,\n    yScale: {\n      type: 'linear',\n      min: -2,\n      max: 2\n    }\n  },\n  one_vs_rest: {\n    type: 'line',\n    yAxisFormat: integerFormat,\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    log: true,\n    legendItemWidth: 150\n  },\n  one_vs_rest_new: {\n    type: 'line',\n    yAxisFormat: integerFormat,\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    log: false,\n    legendItemWidth: 150\n  },\n  fatality_line: {\n    type: 'line',\n    xFormat: ',d',\n    yFormat: '.2%',\n    xScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 9\n    },\n    yScale: {\n      type: 'linear',\n      min: 0,\n      max: 0.4\n    },\n    xAxisFormat: integerFormat,\n    yAxisFormat: '.0%',\n    legends: [],\n    hideMarkers: true,\n    pointSize: 4,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [0, 0.1, 0.2, 0.3, 0.4],\n    xTickRotation: 0,\n    xLegend: i18n.INFECTION_NUMBER,\n    yLegend: i18n.FATALITY_RATE,\n    enablePointLabel: true,\n    enableSlices: false,\n    pointLabel: x => x.name,\n    tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.INFECTION_NUMBER)\n  },\n  fatality_line2: {\n    type: 'line',\n    xFormat: ',d',\n    yFormat: ',d',\n    xScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 9\n    },\n    yScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 8\n    },\n    xAxisFormat: integerFormat,\n    yAxisFormat: integerFormat,\n    legends: [],\n    hideMarkers: true,\n    pointSize: 4,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [...Array(9).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.INFECTION_NUMBER,\n    yLegend: i18n.DEATH_NUMBER,\n    enablePointLabel: true,\n    enableSlices: false,\n    pointLabel: x => x.name === '中东呼吸综合征' ? `${x.name}${'　'.repeat(8)}` : x.name === 'MERS' ? `${x.name}${'　'.repeat(3)}` : x.name,\n    tooltip: fatalityTooltip(i18n.DEATH_NUMBER, i18n.INFECTION_NUMBER)\n  },\n  fatality_line_only: {\n    type: 'line',\n    xFormat: ',d',\n    yFormat: '.2%',\n    xScale: {\n      type: 'log',\n      min: 'auto',\n      max: 'auto'\n    },\n    yScale: {\n      type: 'linear',\n      min: 'auto',\n      max: 'auto'\n    },\n    xAxisFormat: integerFormat,\n    yAxisFormat: '.2%',\n    legends: [],\n    hideMarkers: true,\n    pointSize: 4,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.INFECTION_NUMBER,\n    yLegend: i18n.FATALITY_RATE,\n    enablePointLabel: false,\n    enableSlices: false,\n    tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.INFECTION_NUMBER)\n  },\n  fatality_line2_only: {\n    type: 'line',\n    xFormat: ',d',\n    yFormat: ',d',\n    xScale: {\n      type: 'log',\n      min: 'auto',\n      max: 'auto'\n    },\n    yScale: {\n      type: 'log',\n      min: 'auto',\n      max: 'auto'\n    },\n    xAxisFormat: integerFormat,\n    yAxisFormat: integerFormat,\n    legends: [],\n    hideMarkers: true,\n    pointSize: 4,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [...Array(9).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.INFECTION_NUMBER,\n    yLegend: i18n.DEATH_NUMBER,\n    enablePointLabel: false,\n    enableSlices: false,\n    tooltip: fatalityTooltip(i18n.DEATH_NUMBER, i18n.INFECTION_NUMBER)\n  },\n  doubling_time: {\n    type: 'line',\n    yAxisFormat: integerFormat,\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    yFormat: 'd',\n    log: false,\n    legendItemWidth: 50,\n    yLegend: i18n.CASE_DOUBLING_TIME_IN_DAYS,\n    enableSlices: false,\n    tooltip: ({\n      point\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip plot-tooltip-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    }, formatDate(point.data.xFormatted, point.data.lang)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 17\n      }\n    }, ` ${point.data.yFormatted} ${i18n.DAYS[point.data.lang]}`))\n  },\n  r0: {\n    type: 'line',\n    yAxisFormat: 'd',\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    yFormat: '.2f',\n    log: false,\n    legends: [],\n    yLegend: i18n.ESTIMATED_RO_SEIR,\n    enableSlices: false,\n    tooltip: ({\n      point\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip plot-tooltip-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    }, formatDate(point.data.xFormatted, point.data.lang)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }, \"R\\u2080 \\u2248 \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }\n    }, point.data.yFormatted)))\n  },\n  most_affected_subregions: {\n    type: 'bump',\n    log: false,\n    tooltip: ({\n      serie\n    }) => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip plot-tooltip-bump\",\n      style: {\n        color: serie.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }\n    }, serie.fullId, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }\n    }, ` ${serie.count}`))\n  },\n  most_affected_subregions_new: {\n    type: 'bump',\n    log: false,\n    tooltip: ({\n      serie\n    }) => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip plot-tooltip-bump\",\n      style: {\n        color: serie.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 13\n      }\n    }, serie.fullId, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }\n    }, ` ${serie.count}`))\n  },\n  subregion_total: {\n    type: 'line',\n    margin: {\n      right: 115,\n      bottom: 30\n    },\n    yAxisFormat: integerFormat,\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    yFormat: ',d',\n    log: true,\n    pointSize: 0,\n    enableSlices: false,\n    legends: [regionLegends],\n    tooltip: ({\n      point\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip plot-tooltip-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip-bold\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 12,\n        width: 12,\n        backgroundColor: point.color,\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 21\n      }\n    }, point.serieId)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 21\n      }\n    }, formatDate(point.data.xFormatted, point.data.lang)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }\n    }, ` ${point.data.yFormatted}`)))\n  },\n  subregion_new: {\n    type: 'line',\n    margin: {\n      right: 115,\n      bottom: 30\n    },\n    yAxisFormat: integerFormat,\n    xAxisFormat: i18n.PLOT_DATE_FORMAT,\n    yFormat: ',d',\n    log: false,\n    pointSize: 0,\n    enableSlices: false,\n    legends: [regionLegends],\n    tooltip: ({\n      point\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip plot-tooltip-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip-bold\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 12,\n        width: 12,\n        backgroundColor: point.color,\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 21\n      }\n    }, point.serieId)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 21\n      }\n    }, formatDate(point.data.xFormatted, point.data.lang)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 21\n      }\n    }, ` ${point.data.yFormatted}`)))\n  },\n  subregion_total_stream: {\n    type: 'stream',\n    yAxisFormat: absIntegerFormat,\n    xAxisFormat: streamTimeFormat,\n    log: false,\n    legends: [regionLegends]\n  },\n  subregion_new_stream: {\n    type: 'stream',\n    yAxisFormat: absIntegerFormat,\n    xAxisFormat: streamTimeFormat,\n    log: false,\n    legends: [regionLegends]\n  },\n  subregion_active_stream: {\n    type: 'stream',\n    yAxisFormat: absIntegerFormat,\n    xAxisFormat: streamTimeFormat,\n    log: false,\n    legends: [regionLegends]\n  },\n  subregion_fatality: {\n    type: 'line',\n    subregions: true,\n    log: false,\n    xLog: true,\n    margin: {\n      left: 60\n    },\n    xFormat: ',d',\n    yFormat: '.2%',\n    xScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 9\n    },\n    yScale: {\n      type: 'linear',\n      min: 0,\n      max: 0.4\n    },\n    xAxisFormat: integerFormat,\n    yAxisFormat: '.1%',\n    legends: [],\n    hideMarkers: true,\n    pointSize: 10,\n    pointBorderWidth: 2,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [0, 0.1, 0.2, 0.3, 0.4],\n    xTickRotation: 0,\n    xLegend: i18n.CONFIRMED,\n    yLegend: i18n.FATALITY_RATE,\n    yLegendOffset: -50,\n    enablePointLabel: true,\n    enableSlices: false,\n    pointLabelYOffset: -10,\n    pointLabel: x => x.name,\n    tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.CONFIRMED)\n  },\n  subregion_fatality2: {\n    type: 'line',\n    subregions: true,\n    log: false,\n    xLog: true,\n    xScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 9\n    },\n    yScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 8\n    },\n    margin: {\n      left: 60\n    },\n    xFormat: ',d',\n    yFormat: ',d',\n    xAxisFormat: integerFormat,\n    yAxisFormat: integerFormat,\n    legends: [],\n    hideMarkers: true,\n    pointSize: 10,\n    pointBorderWidth: 2,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [...Array(9).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.CONFIRMED,\n    yLegend: i18n.DEATHS,\n    yLegendOffset: -50,\n    enablePointLabel: true,\n    enableSlices: false,\n    pointLabelYOffset: -10,\n    pointLabel: x => x.name === '中东呼吸综合征' ? `${x.name}${'　'.repeat(8)}` : x.name === 'MERS' ? `${x.name}${'　'.repeat(3)}` : x.name,\n    tooltip: fatalityTooltip(i18n.DEATHS, i18n.CONFIRMED)\n  },\n  subregion_fatality_only: {\n    type: 'line',\n    subregions: true,\n    log: false,\n    xLog: true,\n    margin: {\n      left: 60\n    },\n    xFormat: ',d',\n    yFormat: '.2%',\n    xAxisFormat: integerFormat,\n    yAxisFormat: '.1%',\n    legends: [],\n    hideMarkers: true,\n    pointSize: 10,\n    pointBorderWidth: 2,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.CONFIRMED,\n    yLegend: i18n.FATALITY_RATE,\n    yLegendOffset: -50,\n    enablePointLabel: false,\n    enableSlices: false,\n    tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.CONFIRMED)\n  },\n  subregion_fatality2_only: {\n    type: 'line',\n    subregions: true,\n    log: false,\n    xLog: true,\n    yScale: {\n      type: 'log',\n      min: 'auto',\n      max: 'auto'\n    },\n    margin: {\n      left: 60\n    },\n    xFormat: ',d',\n    yFormat: ',d',\n    xAxisFormat: integerFormat,\n    yAxisFormat: integerFormat,\n    legends: [],\n    hideMarkers: true,\n    pointSize: 10,\n    pointBorderWidth: 2,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [...Array(9).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.CONFIRMED,\n    yLegend: i18n.DEATHS,\n    yLegendOffset: -50,\n    enablePointLabel: false,\n    enableSlices: false,\n    tooltip: fatalityTooltip(i18n.DEATHS, i18n.CONFIRMED)\n  },\n  subregion_total_shifted_100: {\n    type: 'line',\n    margin: {\n      right: 115\n    },\n    yAxisFormat: integerFormat,\n    xAxisFormat: 'd',\n    xFormat: 'd',\n    yFormat: ',d',\n    xScale: {\n      type: 'linear',\n      min: 'auto',\n      max: 'auto'\n    },\n    log: true,\n    pointSize: 0,\n    enableSlices: false,\n    legends: [regionLegends],\n    xLegend: i18n.DAYS_AFTER_100_CASES,\n    tooltip: ({\n      point\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip plot-tooltip-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip-bold\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 12,\n        width: 12,\n        backgroundColor: point.color,\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 21\n      }\n    }, point.serieId)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 21\n      }\n    }, `${i18n.DAY_0[point.data.lang].replace(0, point.data.x)} (${formatDate(point.data.date, point.data.lang)})`), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 21\n      }\n    }, ` ${point.data.yFormatted}`)))\n  },\n  subregion_new_shifted_100: {\n    type: 'line',\n    margin: {\n      right: 115\n    },\n    yAxisFormat: integerFormat,\n    xAxisFormat: 'd',\n    xFormat: 'd',\n    yFormat: ',d',\n    xScale: {\n      type: 'linear',\n      min: 'auto',\n      max: 'auto'\n    },\n    log: false,\n    pointSize: 0,\n    enableSlices: false,\n    legends: [regionLegends],\n    xLegend: i18n.DAYS_AFTER_100_CASES,\n    tooltip: ({\n      point\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip plot-tooltip-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip-bold\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 12,\n        width: 12,\n        backgroundColor: point.color,\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 21\n      }\n    }, point.serieId)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 21\n      }\n    }, `${i18n.DAY_0[point.data.lang].replace(0, point.data.x)} (${formatDate(point.data.date, point.data.lang)})`), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 21\n      }\n    }, ` ${point.data.yFormatted}`)))\n  },\n  subregion_total_shifted_10: {\n    type: 'line',\n    margin: {\n      right: 115\n    },\n    yAxisFormat: integerFormat,\n    xAxisFormat: 'd',\n    xFormat: 'd',\n    yFormat: ',d',\n    xScale: {\n      type: 'linear',\n      min: 'auto',\n      max: 'auto'\n    },\n    log: true,\n    pointSize: 0,\n    enableSlices: false,\n    legends: [regionLegends],\n    xLegend: i18n.DAYS_AFTER_10_CASES,\n    tooltip: ({\n      point\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip plot-tooltip-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip-bold\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 12,\n        width: 12,\n        backgroundColor: point.color,\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 21\n      }\n    }, point.serieId)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 21\n      }\n    }, `${i18n.DAY_0[point.data.lang].replace(0, point.data.x)} (${formatDate(point.data.date, point.data.lang)})`), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 21\n      }\n    }, ` ${point.data.yFormatted}`)))\n  },\n  subregion_new_shifted_10: {\n    type: 'line',\n    margin: {\n      right: 115\n    },\n    yAxisFormat: integerFormat,\n    xAxisFormat: 'd',\n    xFormat: 'd',\n    yFormat: ',d',\n    xScale: {\n      type: 'linear',\n      min: 'auto',\n      max: 'auto'\n    },\n    log: false,\n    pointSize: 0,\n    enableSlices: false,\n    legends: [regionLegends],\n    xLegend: i18n.DAYS_AFTER_10_CASES,\n    tooltip: ({\n      point\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip plot-tooltip-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip-bold\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 12,\n        width: 12,\n        backgroundColor: point.color,\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 21\n      }\n    }, point.serieId)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 21\n      }\n    }, `${i18n.DAY_0[point.data.lang].replace(0, point.data.x)} (${formatDate(point.data.date, point.data.lang)})`), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 21\n      }\n    }, ` ${point.data.yFormatted}`)))\n  }\n};","map":{"version":3,"sources":["/Users/jonchristie/Downloads/covid19-master/src/utils/plot_types.js"],"names":["React","format","i18n","parseDate","formatDate","integerFormat","e","parseInt","Math","abs","absIntegerFormat","streamTimeFormat","idx","interval","dates","fatalityTooltip","yLabel","xLabel","point","data","name","regionName","years","date","lang","yFormatted","xFormatted","regionLegends","anchor","direction","translateX","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","getSpecificPlotType","plotType","plotDetails","specificType","stats","diseaseComparison","fatalityLine","shifted","plotTypes","plot_basic","subregions","metricChange","statsChange","scaleChange","movingAverage","text","CASES","plot_fatality_recovery","FATALITY_RECOVERY_RATE","plot_growth","GROWTH_RATE","plot_one_vs_rest","ONE_VS_REST","plot_fatality_line","FATALITY_LINE","plot_doubling_time","CASE_DOUBLING_TIME","plot_r0","ESTIMATED_RO","plot_ranking","MOST_AFFECTED_SUBREGIONS","plot_subregion_basic","SUBREGION","plot_subregion_shifted","SUBREGION_SHIFTED","plot_subregion_stream","SUBREGION_STREAM","plot_subregion_active_stream","SUBREGION_ACTIVE_STREAM","plot_subregion_fatality","SUBREGION_FATALITY","plotSpecificTypes","total","type","yAxisFormat","xAxisFormat","PLOT_DATE_FORMAT","yFormat","log","legendItemWidth","new","fatality_recovery","growth_total","yScale","min","max","growth_new","one_vs_rest","one_vs_rest_new","fatality_line","xFormat","xScale","legends","hideMarkers","pointSize","xTickValues","Array","keys","map","x","yTickValues","xTickRotation","xLegend","INFECTION_NUMBER","yLegend","FATALITY_RATE","enablePointLabel","enableSlices","pointLabel","tooltip","fatality_line2","DEATH_NUMBER","repeat","fatality_line_only","fatality_line2_only","doubling_time","CASE_DOUBLING_TIME_IN_DAYS","DAYS","r0","ESTIMATED_RO_SEIR","most_affected_subregions","serie","color","fullId","count","most_affected_subregions_new","subregion_total","margin","right","bottom","display","justifyContent","alignItems","height","width","backgroundColor","marginRight","serieId","subregion_new","subregion_total_stream","subregion_new_stream","subregion_active_stream","subregion_fatality","xLog","left","pointBorderWidth","CONFIRMED","yLegendOffset","pointLabelYOffset","subregion_fatality2","DEATHS","subregion_fatality_only","subregion_fatality2_only","subregion_total_shifted_100","DAYS_AFTER_100_CASES","DAY_0","replace","subregion_new_shifted_100","subregion_total_shifted_10","DAYS_AFTER_10_CASES","subregion_new_shifted_10"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,SAAtC;;AAEA,MAAMC,aAAa,GAAIC,CAAD,IAClBC,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAR,KAAoBA,CAApB,GACM,EADN,GAEME,IAAI,CAACC,GAAL,CAASH,CAAT,IAAc,IAAd,GACEA,CADF,GAEEE,IAAI,CAACC,GAAL,CAASH,CAAT,IAAc,MAAM,CAApB,GAAyB,GAAEA,CAAC,GAAG,IAAK,GAApC,GAAyCE,IAAI,CAACC,GAAL,CAASH,CAAT,IAAc,MAAM,CAApB,GAAyB,GAAEA,CAAC,GAAG,MAAM,CAAE,GAAvC,GAA6C,GAAEA,CAAC,GAAG,MAAM,CAAE,GALhH;;AAOA,MAAMI,gBAAgB,GAAIJ,CAAD,IACrBC,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAR,KAAoBA,CAApB,GAAwB,EAAxB,GAA6BE,IAAI,CAACC,GAAL,CAASH,CAAT,IAAc,IAAd,GAAqBE,IAAI,CAACC,GAAL,CAASH,CAAT,CAArB,GAAoC,GAAEE,IAAI,CAACC,GAAL,CAASH,CAAT,IAAc,IAAK,GAD1F;;AAGA,MAAMK,gBAAgB,GAAG,CAACC,GAAD,EAAMC,QAAN,EAAgBC,KAAhB,KAA2BF,GAAG,GAAGC,QAAN,KAAmB,CAAnB,GAAuBZ,MAAM,CAACE,SAAS,CAACW,KAAK,CAACF,GAAD,CAAN,CAAV,EAAwB,KAAxB,CAA7B,GAA8D,EAAlH;;AAEA,MAAMG,eAAe,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACxC;AAAK,EAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAEA,KAAK,CAACC,IAAN,CAAWC,IAAX,IAAmBF,KAAK,CAACC,IAAN,CAAWE,UAA9B,GAA2C,mBAA3C,GAAiE,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKH,KAAK,CAACC,IAAN,CAAWC,IAAX,GACI,GAAEF,KAAK,CAACC,IAAN,CAAWC,IAAK,IAAGF,KAAK,CAACC,IAAN,CAAWG,KAAX,GAAmB,MAAMJ,KAAK,CAACC,IAAN,CAAWG,KAAjB,GAAyB,GAA5C,GAAkD,EAAG,EAD9E,GAEGJ,KAAK,CAACC,IAAN,CAAWE,UAAX,GACAH,KAAK,CAACC,IAAN,CAAWE,UADX,GAGAjB,UAAU,CAACc,KAAK,CAACC,IAAN,CAAWI,IAAZ,EAAkBL,KAAK,CAACC,IAAN,CAAWK,IAA7B,CANlB,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOR,MAAM,CAACE,KAAK,CAACC,IAAN,CAAWK,IAAZ,CAAb,CADJ,eAEI;AAAM,EAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsC,IAAGN,KAAK,CAACC,IAAN,CAAWM,UAAW,EAA/D,CAFJ,CAVJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOR,MAAM,CAACC,KAAK,CAACC,IAAN,CAAWK,IAAZ,CAAb,CADJ,eAEI;AAAM,EAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsC,IAAGN,KAAK,CAACC,IAAN,CAAWO,UAAW,EAA/D,CAFJ,CAdJ,CADJ;;AAsBA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,OADU;AAElBC,EAAAA,SAAS,EAAE,QAFO;AAGlBC,EAAAA,UAAU,EAAE,GAHM;AAIlBC,EAAAA,SAAS,EAAE,EAJO;AAKlBC,EAAAA,UAAU,EAAE,EALM;AAMlBC,EAAAA,aAAa,EAAE,MANG;AAOlBC,EAAAA,UAAU,EAAE,EAPM;AAQlBC,EAAAA,WAAW,EAAE;AARK,CAAtB;AAWA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAWC,WAAX,KAA2B;AAC1D,MAAIC,YAAY,GAAG,EAAnB;;AACA,MAAIF,QAAQ,KAAK,YAAjB,EAA+B;AAC3BE,IAAAA,YAAY,GAAGD,WAAW,CAACE,KAAZ,KAAsB,YAAtB,GAAqC,OAArC,GAA+C,KAA9D;AACH,GAFD,MAEO,IAAIH,QAAQ,KAAK,wBAAjB,EAA2C;AAC9CE,IAAAA,YAAY,GAAG,mBAAf;AACH,GAFM,MAEA,IAAIF,QAAQ,KAAK,aAAjB,EAAgC;AACnCE,IAAAA,YAAY,GAAGD,WAAW,CAACE,KAAZ,KAAsB,YAAtB,GAAqC,cAArC,GAAsD,YAArE;AACH,GAFM,MAEA,IAAIH,QAAQ,KAAK,kBAAjB,EAAqC;AACxCE,IAAAA,YAAY,GAAGD,WAAW,CAACE,KAAZ,KAAsB,YAAtB,GAAqC,aAArC,GAAqD,iBAApE;AACH,GAFM,MAEA,IAAIH,QAAQ,KAAK,oBAAjB,EAAuC;AAC1C,QAAIC,WAAW,CAACG,iBAAZ,KAAkC,MAAtC,EACIF,YAAY,GAAGD,WAAW,CAACI,YAAZ,KAA6B,MAA7B,GAAsC,eAAtC,GAAwD,gBAAvE;AACJ,QAAIJ,WAAW,CAACG,iBAAZ,KAAkC,MAAtC,EACIF,YAAY,GAAGD,WAAW,CAACI,YAAZ,KAA6B,MAA7B,GAAsC,oBAAtC,GAA6D,qBAA5E;AACP,GALM,MAKA,IAAIL,QAAQ,KAAK,cAAjB,EAAiC;AACpCE,IAAAA,YAAY,GAAGD,WAAW,CAACE,KAAZ,KAAsB,YAAtB,GAAqC,0BAArC,GAAkE,8BAAjF;AACH,GAFM,MAEA,IAAIH,QAAQ,KAAK,sBAAjB,EAAyC;AAC5CE,IAAAA,YAAY,GAAGD,WAAW,CAACE,KAAZ,KAAsB,YAAtB,GAAqC,iBAArC,GAAyD,eAAxE;AACH,GAFM,MAEA,IAAIH,QAAQ,KAAK,uBAAjB,EAA0C;AAC7CE,IAAAA,YAAY,GAAGD,WAAW,CAACE,KAAZ,KAAsB,YAAtB,GAAqC,wBAArC,GAAgE,sBAA/E;AACH,GAFM,MAEA,IAAIH,QAAQ,KAAK,8BAAjB,EAAiD;AACpDE,IAAAA,YAAY,GAAG,yBAAf;AACH,GAFM,MAEA,IAAIF,QAAQ,KAAK,yBAAjB,EAA4C;AAC/C,QAAIC,WAAW,CAACG,iBAAZ,KAAkC,MAAtC,EACIF,YAAY,GAAGD,WAAW,CAACI,YAAZ,KAA6B,MAA7B,GAAsC,oBAAtC,GAA6D,qBAA5E;AACJ,QAAIJ,WAAW,CAACG,iBAAZ,KAAkC,MAAtC,EACIF,YAAY,GAAGD,WAAW,CAACI,YAAZ,KAA6B,MAA7B,GAAsC,yBAAtC,GAAkE,0BAAjF;AACP,GALM,MAKA,IAAIL,QAAQ,KAAK,wBAAjB,EAA2C;AAC9C,QAAIC,WAAW,CAACK,OAAZ,KAAwB,KAA5B,EACIJ,YAAY,GACRD,WAAW,CAACE,KAAZ,KAAsB,YAAtB,GAAqC,6BAArC,GAAqE,2BADzE;AAEJ,QAAIF,WAAW,CAACK,OAAZ,KAAwB,IAA5B,EACIJ,YAAY,GACRD,WAAW,CAACE,KAAZ,KAAsB,YAAtB,GAAqC,4BAArC,GAAoE,0BADxE;AAEP,GAPM,MAOA,IAAIH,QAAQ,KAAK,oBAAjB,EAAuC;AAC1CE,IAAAA,YAAY,GAAG,eAAf;AACH,GAFM,MAEA,IAAIF,QAAQ,KAAK,SAAjB,EAA4B;AAC/BE,IAAAA,YAAY,GAAG,IAAf;AACH;;AAED,SAAOA,YAAP;AACH,CA1CM;AA4CP,OAAO,MAAMK,SAAS,GAAG;AACrBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE,KADJ;AAERC,IAAAA,YAAY,EAAE,KAFN;AAGRC,IAAAA,WAAW,EAAE,IAHL;AAIRC,IAAAA,WAAW,EAAE,IAJL;AAKRC,IAAAA,aAAa,EAAE,IALP;AAMRC,IAAAA,IAAI,EAAEjD,IAAI,CAACkD;AANH,GADS;AASrBC,EAAAA,sBAAsB,EAAE;AACpBP,IAAAA,UAAU,EAAE,KADQ;AAEpBC,IAAAA,YAAY,EAAE,KAFM;AAGpBC,IAAAA,WAAW,EAAE,KAHO;AAIpBC,IAAAA,WAAW,EAAE,KAJO;AAKpBC,IAAAA,aAAa,EAAE,IALK;AAMpBC,IAAAA,IAAI,EAAEjD,IAAI,CAACoD;AANS,GATH;AAiBrBC,EAAAA,WAAW,EAAE;AACTT,IAAAA,UAAU,EAAE,KADH;AAETC,IAAAA,YAAY,EAAE,IAFL;AAGTC,IAAAA,WAAW,EAAE,IAHJ;AAITC,IAAAA,WAAW,EAAE,KAJJ;AAKTC,IAAAA,aAAa,EAAE,IALN;AAMTC,IAAAA,IAAI,EAAEjD,IAAI,CAACsD;AANF,GAjBQ;AAyBrBC,EAAAA,gBAAgB,EAAE;AACdX,IAAAA,UAAU,EAAE,KADE;AAEdC,IAAAA,YAAY,EAAE,IAFA;AAGdC,IAAAA,WAAW,EAAE,IAHC;AAIdC,IAAAA,WAAW,EAAE,IAJC;AAKdC,IAAAA,aAAa,EAAE,IALD;AAMdC,IAAAA,IAAI,EAAEjD,IAAI,CAACwD;AANG,GAzBG;AAiCrBC,EAAAA,kBAAkB,EAAE;AAChBb,IAAAA,UAAU,EAAE,KADI;AAEhBC,IAAAA,YAAY,EAAE,KAFE;AAGhBC,IAAAA,WAAW,EAAE,KAHG;AAIhBC,IAAAA,WAAW,EAAE,KAJG;AAKhBE,IAAAA,IAAI,EAAEjD,IAAI,CAAC0D;AALK,GAjCC;AAwCrBC,EAAAA,kBAAkB,EAAE;AAChBf,IAAAA,UAAU,EAAE,KADI;AAEhBC,IAAAA,YAAY,EAAE,IAFE;AAGhBC,IAAAA,WAAW,EAAE,KAHG;AAIhBC,IAAAA,WAAW,EAAE,KAJG;AAKhBC,IAAAA,aAAa,EAAE,IALC;AAMhBC,IAAAA,IAAI,EAAEjD,IAAI,CAAC4D;AANK,GAxCC;AAgDrBC,EAAAA,OAAO,EAAE;AACLjB,IAAAA,UAAU,EAAE,KADP;AAELC,IAAAA,YAAY,EAAE,KAFT;AAGLC,IAAAA,WAAW,EAAE,KAHR;AAILC,IAAAA,WAAW,EAAE,KAJR;AAKLC,IAAAA,aAAa,EAAE,IALV;AAMLC,IAAAA,IAAI,EAAEjD,IAAI,CAAC8D;AANN,GAhDY;AAwDrBC,EAAAA,YAAY,EAAE;AACVnB,IAAAA,UAAU,EAAE,IADF;AAEVC,IAAAA,YAAY,EAAE,IAFJ;AAGVC,IAAAA,WAAW,EAAE,IAHH;AAIVC,IAAAA,WAAW,EAAE,KAJH;AAKVE,IAAAA,IAAI,EAAEjD,IAAI,CAACgE;AALD,GAxDO;AA+DrBC,EAAAA,oBAAoB,EAAE;AAClBrB,IAAAA,UAAU,EAAE,IADM;AAElBC,IAAAA,YAAY,EAAE,IAFI;AAGlBC,IAAAA,WAAW,EAAE,IAHK;AAIlBC,IAAAA,WAAW,EAAE,IAJK;AAKlBC,IAAAA,aAAa,EAAE,IALG;AAMlBC,IAAAA,IAAI,EAAEjD,IAAI,CAACkE;AANO,GA/DD;AAuErBC,EAAAA,sBAAsB,EAAE;AACpBvB,IAAAA,UAAU,EAAE,IADQ;AAEpBC,IAAAA,YAAY,EAAE,IAFM;AAGpBC,IAAAA,WAAW,EAAE,IAHO;AAIpBC,IAAAA,WAAW,EAAE,IAJO;AAKpBC,IAAAA,aAAa,EAAE,IALK;AAMpBC,IAAAA,IAAI,EAAEjD,IAAI,CAACoE;AANS,GAvEH;AA+ErBC,EAAAA,qBAAqB,EAAE;AACnBzB,IAAAA,UAAU,EAAE,IADO;AAEnBC,IAAAA,YAAY,EAAE,IAFK;AAGnBC,IAAAA,WAAW,EAAE,IAHM;AAInBC,IAAAA,WAAW,EAAE,KAJM;AAKnBE,IAAAA,IAAI,EAAEjD,IAAI,CAACsE;AALQ,GA/EF;AAsFrBC,EAAAA,4BAA4B,EAAE;AAC1B3B,IAAAA,UAAU,EAAE,KADc;AAE1BC,IAAAA,YAAY,EAAE,KAFY;AAG1BC,IAAAA,WAAW,EAAE,KAHa;AAI1BC,IAAAA,WAAW,EAAE,KAJa;AAK1BE,IAAAA,IAAI,EAAEjD,IAAI,CAACwE;AALe,GAtFT;AA6FrBC,EAAAA,uBAAuB,EAAE;AACrB7B,IAAAA,UAAU,EAAE,IADS;AAErBC,IAAAA,YAAY,EAAE,KAFO;AAGrBC,IAAAA,WAAW,EAAE,KAHQ;AAIrBC,IAAAA,WAAW,EAAE,KAJQ;AAKrBE,IAAAA,IAAI,EAAEjD,IAAI,CAAC0E;AALU;AA7FJ,CAAlB;AAsGP,OAAO,MAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE,MADH;AAEHC,IAAAA,WAAW,EAAE3E,aAFV;AAGH4E,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAHf;AAIHC,IAAAA,OAAO,EAAE,IAJN;AAKHC,IAAAA,GAAG,EAAE,IALF;AAMHC,IAAAA,eAAe,EAAE;AANd,GADsB;AAS7BC,EAAAA,GAAG,EAAE;AACDP,IAAAA,IAAI,EAAE,MADL;AAEDC,IAAAA,WAAW,EAAE3E,aAFZ;AAGD4E,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAHjB;AAIDC,IAAAA,OAAO,EAAE,IAJR;AAKDC,IAAAA,GAAG,EAAE,KALJ;AAMDC,IAAAA,eAAe,EAAE;AANhB,GATwB;AAiB7BE,EAAAA,iBAAiB,EAAE;AACfR,IAAAA,IAAI,EAAE,MADS;AAEfC,IAAAA,WAAW,EAAE,KAFE;AAGfC,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAHH;AAIfC,IAAAA,OAAO,EAAE,KAJM;AAKfC,IAAAA,GAAG,EAAE,KALU;AAMfC,IAAAA,eAAe,EAAE;AANF,GAjBU;AAyB7BG,EAAAA,YAAY,EAAE;AACVT,IAAAA,IAAI,EAAE,MADI;AAEVC,IAAAA,WAAW,EAAE,KAFH;AAGVC,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAHR;AAIVC,IAAAA,OAAO,EAAE,KAJC;AAKVC,IAAAA,GAAG,EAAE,KALK;AAMVC,IAAAA,eAAe,EAAE,EANP;AAOVI,IAAAA,MAAM,EAAE;AACJV,MAAAA,IAAI,EAAE,QADF;AAEJW,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD;AAPE,GAzBe;AAsC7BC,EAAAA,UAAU,EAAE;AACRb,IAAAA,IAAI,EAAE,MADE;AAERC,IAAAA,WAAW,EAAE,KAFL;AAGRC,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAHV;AAIRC,IAAAA,OAAO,EAAE,KAJD;AAKRC,IAAAA,GAAG,EAAE,KALG;AAMRC,IAAAA,eAAe,EAAE,EANT;AAORI,IAAAA,MAAM,EAAE;AACJV,MAAAA,IAAI,EAAE,QADF;AAEJW,MAAAA,GAAG,EAAE,CAAC,CAFF;AAGJC,MAAAA,GAAG,EAAE;AAHD;AAPA,GAtCiB;AAmD7BE,EAAAA,WAAW,EAAE;AACTd,IAAAA,IAAI,EAAE,MADG;AAETC,IAAAA,WAAW,EAAE3E,aAFJ;AAGT4E,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAHT;AAITE,IAAAA,GAAG,EAAE,IAJI;AAKTC,IAAAA,eAAe,EAAE;AALR,GAnDgB;AA0D7BS,EAAAA,eAAe,EAAE;AACbf,IAAAA,IAAI,EAAE,MADO;AAEbC,IAAAA,WAAW,EAAE3E,aAFA;AAGb4E,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAHL;AAIbE,IAAAA,GAAG,EAAE,KAJQ;AAKbC,IAAAA,eAAe,EAAE;AALJ,GA1DY;AAiE7BU,EAAAA,aAAa,EAAE;AACXhB,IAAAA,IAAI,EAAE,MADK;AAEXiB,IAAAA,OAAO,EAAE,IAFE;AAGXb,IAAAA,OAAO,EAAE,KAHE;AAIXc,IAAAA,MAAM,EAAE;AACJlB,MAAAA,IAAI,EAAE,KADF;AAEJW,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,GAAG,EAAE,MAAM;AAHP,KAJG;AASXF,IAAAA,MAAM,EAAE;AACJV,MAAAA,IAAI,EAAE,QADF;AAEJW,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KATG;AAcXV,IAAAA,WAAW,EAAE5E,aAdF;AAeX2E,IAAAA,WAAW,EAAE,KAfF;AAgBXkB,IAAAA,OAAO,EAAE,EAhBE;AAiBXC,IAAAA,WAAW,EAAE,IAjBF;AAkBXC,IAAAA,SAAS,EAAE,CAlBA;AAmBXC,IAAAA,WAAW,EAAE,CAAE,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAL,EAAwBC,GAAxB,CAA6BC,CAAD,IAAO,MAAMA,CAAzC,CAnBF;AAoBXC,IAAAA,WAAW,EAAE,CAAE,CAAF,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,CApBF;AAqBXC,IAAAA,aAAa,EAAE,CArBJ;AAsBXC,IAAAA,OAAO,EAAE1G,IAAI,CAAC2G,gBAtBH;AAuBXC,IAAAA,OAAO,EAAE5G,IAAI,CAAC6G,aAvBH;AAwBXC,IAAAA,gBAAgB,EAAE,IAxBP;AAyBXC,IAAAA,YAAY,EAAE,KAzBH;AA0BXC,IAAAA,UAAU,EAAGT,CAAD,IAAOA,CAAC,CAACrF,IA1BV;AA2BX+F,IAAAA,OAAO,EAAEpG,eAAe,CAACb,IAAI,CAAC6G,aAAN,EAAqB7G,IAAI,CAAC2G,gBAA1B;AA3Bb,GAjEc;AA8F7BO,EAAAA,cAAc,EAAE;AACZrC,IAAAA,IAAI,EAAE,MADM;AAEZiB,IAAAA,OAAO,EAAE,IAFG;AAGZb,IAAAA,OAAO,EAAE,IAHG;AAIZc,IAAAA,MAAM,EAAE;AACJlB,MAAAA,IAAI,EAAE,KADF;AAEJW,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,GAAG,EAAE,MAAM;AAHP,KAJI;AASZF,IAAAA,MAAM,EAAE;AACJV,MAAAA,IAAI,EAAE,KADF;AAEJW,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,GAAG,EAAE,MAAM;AAHP,KATI;AAcZV,IAAAA,WAAW,EAAE5E,aAdD;AAeZ2E,IAAAA,WAAW,EAAE3E,aAfD;AAgBZ6F,IAAAA,OAAO,EAAE,EAhBG;AAiBZC,IAAAA,WAAW,EAAE,IAjBD;AAkBZC,IAAAA,SAAS,EAAE,CAlBC;AAmBZC,IAAAA,WAAW,EAAE,CAAE,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAL,EAAwBC,GAAxB,CAA6BC,CAAD,IAAO,MAAMA,CAAzC,CAnBD;AAoBZC,IAAAA,WAAW,EAAE,CAAE,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAL,EAAuBC,GAAvB,CAA4BC,CAAD,IAAO,MAAMA,CAAxC,CApBD;AAqBZE,IAAAA,aAAa,EAAE,CArBH;AAsBZC,IAAAA,OAAO,EAAE1G,IAAI,CAAC2G,gBAtBF;AAuBZC,IAAAA,OAAO,EAAE5G,IAAI,CAACmH,YAvBF;AAwBZL,IAAAA,gBAAgB,EAAE,IAxBN;AAyBZC,IAAAA,YAAY,EAAE,KAzBF;AA0BZC,IAAAA,UAAU,EAAGT,CAAD,IACRA,CAAC,CAACrF,IAAF,KAAW,SAAX,GACO,GAAEqF,CAAC,CAACrF,IAAK,GAAE,IAAIkG,MAAJ,CAAW,CAAX,CAAc,EADhC,GAEMb,CAAC,CAACrF,IAAF,KAAW,MAAX,GAAqB,GAAEqF,CAAC,CAACrF,IAAK,GAAE,IAAIkG,MAAJ,CAAW,CAAX,CAAc,EAA9C,GAAkDb,CAAC,CAACrF,IA7BlD;AA8BZ+F,IAAAA,OAAO,EAAEpG,eAAe,CAACb,IAAI,CAACmH,YAAN,EAAoBnH,IAAI,CAAC2G,gBAAzB;AA9BZ,GA9Fa;AA8H7BU,EAAAA,kBAAkB,EAAE;AAChBxC,IAAAA,IAAI,EAAE,MADU;AAEhBiB,IAAAA,OAAO,EAAE,IAFO;AAGhBb,IAAAA,OAAO,EAAE,KAHO;AAIhBc,IAAAA,MAAM,EAAE;AACJlB,MAAAA,IAAI,EAAE,KADF;AAEJW,MAAAA,GAAG,EAAE,MAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KAJQ;AAShBF,IAAAA,MAAM,EAAE;AACJV,MAAAA,IAAI,EAAE,QADF;AAEJW,MAAAA,GAAG,EAAE,MAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KATQ;AAchBV,IAAAA,WAAW,EAAE5E,aAdG;AAehB2E,IAAAA,WAAW,EAAE,KAfG;AAgBhBkB,IAAAA,OAAO,EAAE,EAhBO;AAiBhBC,IAAAA,WAAW,EAAE,IAjBG;AAkBhBC,IAAAA,SAAS,EAAE,CAlBK;AAmBhBC,IAAAA,WAAW,EAAE,CAAE,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAL,EAAwBC,GAAxB,CAA6BC,CAAD,IAAO,MAAMA,CAAzC,CAnBG;AAoBhBE,IAAAA,aAAa,EAAE,CApBC;AAqBhBC,IAAAA,OAAO,EAAE1G,IAAI,CAAC2G,gBArBE;AAsBhBC,IAAAA,OAAO,EAAE5G,IAAI,CAAC6G,aAtBE;AAuBhBC,IAAAA,gBAAgB,EAAE,KAvBF;AAwBhBC,IAAAA,YAAY,EAAE,KAxBE;AAyBhBE,IAAAA,OAAO,EAAEpG,eAAe,CAACb,IAAI,CAAC6G,aAAN,EAAqB7G,IAAI,CAAC2G,gBAA1B;AAzBR,GA9HS;AAyJ7BW,EAAAA,mBAAmB,EAAE;AACjBzC,IAAAA,IAAI,EAAE,MADW;AAEjBiB,IAAAA,OAAO,EAAE,IAFQ;AAGjBb,IAAAA,OAAO,EAAE,IAHQ;AAIjBc,IAAAA,MAAM,EAAE;AACJlB,MAAAA,IAAI,EAAE,KADF;AAEJW,MAAAA,GAAG,EAAE,MAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KAJS;AASjBF,IAAAA,MAAM,EAAE;AACJV,MAAAA,IAAI,EAAE,KADF;AAEJW,MAAAA,GAAG,EAAE,MAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KATS;AAcjBV,IAAAA,WAAW,EAAE5E,aAdI;AAejB2E,IAAAA,WAAW,EAAE3E,aAfI;AAgBjB6F,IAAAA,OAAO,EAAE,EAhBQ;AAiBjBC,IAAAA,WAAW,EAAE,IAjBI;AAkBjBC,IAAAA,SAAS,EAAE,CAlBM;AAmBjBC,IAAAA,WAAW,EAAE,CAAE,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAL,EAAwBC,GAAxB,CAA6BC,CAAD,IAAO,MAAMA,CAAzC,CAnBI;AAoBjBC,IAAAA,WAAW,EAAE,CAAE,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAL,EAAuBC,GAAvB,CAA4BC,CAAD,IAAO,MAAMA,CAAxC,CApBI;AAqBjBE,IAAAA,aAAa,EAAE,CArBE;AAsBjBC,IAAAA,OAAO,EAAE1G,IAAI,CAAC2G,gBAtBG;AAuBjBC,IAAAA,OAAO,EAAE5G,IAAI,CAACmH,YAvBG;AAwBjBL,IAAAA,gBAAgB,EAAE,KAxBD;AAyBjBC,IAAAA,YAAY,EAAE,KAzBG;AA0BjBE,IAAAA,OAAO,EAAEpG,eAAe,CAACb,IAAI,CAACmH,YAAN,EAAoBnH,IAAI,CAAC2G,gBAAzB;AA1BP,GAzJQ;AAqL7BY,EAAAA,aAAa,EAAE;AACX1C,IAAAA,IAAI,EAAE,MADK;AAEXC,IAAAA,WAAW,EAAE3E,aAFF;AAGX4E,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAHP;AAIXC,IAAAA,OAAO,EAAE,GAJE;AAKXC,IAAAA,GAAG,EAAE,KALM;AAMXC,IAAAA,eAAe,EAAE,EANN;AAOXyB,IAAAA,OAAO,EAAE5G,IAAI,CAACwH,0BAPH;AAQXT,IAAAA,YAAY,EAAE,KARH;AASXE,IAAAA,OAAO,EAAE,CAAC;AAAEjG,MAAAA;AAAF,KAAD,kBACL;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMd,UAAU,CAACc,KAAK,CAACC,IAAN,CAAWO,UAAZ,EAAwBR,KAAK,CAACC,IAAN,CAAWK,IAAnC,CAAhB,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC,IAAGN,KAAK,CAACC,IAAN,CAAWM,UAAW,IAAGvB,IAAI,CAACyH,IAAL,CAAUzG,KAAK,CAACC,IAAN,CAAWK,IAArB,CAA2B,EAA5F,CAFJ;AAVO,GArLc;AAqM7BoG,EAAAA,EAAE,EAAE;AACA7C,IAAAA,IAAI,EAAE,MADN;AAEAC,IAAAA,WAAW,EAAE,GAFb;AAGAC,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAHlB;AAIAC,IAAAA,OAAO,EAAE,KAJT;AAKAC,IAAAA,GAAG,EAAE,KALL;AAMAc,IAAAA,OAAO,EAAE,EANT;AAOAY,IAAAA,OAAO,EAAE5G,IAAI,CAAC2H,iBAPd;AAQAZ,IAAAA,YAAY,EAAE,KARd;AASAE,IAAAA,OAAO,EAAE,CAAC;AAAEjG,MAAAA;AAAF,KAAD,kBACL;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMd,UAAU,CAACc,KAAK,CAACC,IAAN,CAAWO,UAAZ,EAAwBR,KAAK,CAACC,IAAN,CAAWK,IAAnC,CAAhB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCN,KAAK,CAACC,IAAN,CAAWM,UAAhD,CAFJ,CAFJ;AAVJ,GArMyB;AAwN7BqG,EAAAA,wBAAwB,EAAE;AACtB/C,IAAAA,IAAI,EAAE,MADgB;AAEtBK,IAAAA,GAAG,EAAE,KAFiB;AAGtB+B,IAAAA,OAAO,EAAE,CAAC;AAAEY,MAAAA;AAAF,KAAD,kBACL;AAAM,MAAA,SAAS,EAAC,gCAAhB;AAAiD,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,CAACE,MADX,eAEI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,IAAGF,KAAK,CAACG,KAAM,EAArD,CAFJ;AAJkB,GAxNG;AAkO7BC,EAAAA,4BAA4B,EAAE;AAC1BpD,IAAAA,IAAI,EAAE,MADoB;AAE1BK,IAAAA,GAAG,EAAE,KAFqB;AAG1B+B,IAAAA,OAAO,EAAE,CAAC;AAAEY,MAAAA;AAAF,KAAD,kBACL;AAAM,MAAA,SAAS,EAAC,gCAAhB;AAAiD,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,CAACE,MADX,eAEI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,IAAGF,KAAK,CAACG,KAAM,EAArD,CAFJ;AAJsB,GAlOD;AA4O7BE,EAAAA,eAAe,EAAE;AACbrD,IAAAA,IAAI,EAAE,MADO;AAEbsD,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAFK;AAGbvD,IAAAA,WAAW,EAAE3E,aAHA;AAIb4E,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAJL;AAKbC,IAAAA,OAAO,EAAE,IALI;AAMbC,IAAAA,GAAG,EAAE,IANQ;AAObgB,IAAAA,SAAS,EAAE,CAPE;AAQba,IAAAA,YAAY,EAAE,KARD;AASbf,IAAAA,OAAO,EAAE,CAAEvE,aAAF,CATI;AAUbwF,IAAAA,OAAO,EAAE,CAAC;AAAEjG,MAAAA;AAAF,KAAD,kBACL;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,mBADd;AAEI,MAAA,KAAK,EAAE;AAAEsH,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE,QAAnC;AAA6CC,QAAAA,UAAU,EAAE;AAAzD,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,KAAK,EAAE,EAArB;AAAyBC,QAAAA,eAAe,EAAE3H,KAAK,CAAC8G,KAAhD;AAAuDc,QAAAA,WAAW,EAAE;AAApE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO5H,KAAK,CAAC6H,OAAb,CAPJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO3I,UAAU,CAACc,KAAK,CAACC,IAAN,CAAWO,UAAZ,EAAwBR,KAAK,CAACC,IAAN,CAAWK,IAAnC,CAAjB,CADJ,eAEI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,IAAGN,KAAK,CAACC,IAAN,CAAWM,UAAW,EAA/D,CAFJ,CAVJ;AAXS,GA5OY;AAwQ7BuH,EAAAA,aAAa,EAAE;AACXjE,IAAAA,IAAI,EAAE,MADK;AAEXsD,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAFG;AAGXvD,IAAAA,WAAW,EAAE3E,aAHF;AAIX4E,IAAAA,WAAW,EAAE/E,IAAI,CAACgF,gBAJP;AAKXC,IAAAA,OAAO,EAAE,IALE;AAMXC,IAAAA,GAAG,EAAE,KANM;AAOXgB,IAAAA,SAAS,EAAE,CAPA;AAQXa,IAAAA,YAAY,EAAE,KARH;AASXf,IAAAA,OAAO,EAAE,CAAEvE,aAAF,CATE;AAUXwF,IAAAA,OAAO,EAAE,CAAC;AAAEjG,MAAAA;AAAF,KAAD,kBACL;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,mBADd;AAEI,MAAA,KAAK,EAAE;AAAEsH,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE,QAAnC;AAA6CC,QAAAA,UAAU,EAAE;AAAzD,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,KAAK,EAAE,EAArB;AAAyBC,QAAAA,eAAe,EAAE3H,KAAK,CAAC8G,KAAhD;AAAuDc,QAAAA,WAAW,EAAE;AAApE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO5H,KAAK,CAAC6H,OAAb,CAPJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO3I,UAAU,CAACc,KAAK,CAACC,IAAN,CAAWO,UAAZ,EAAwBR,KAAK,CAACC,IAAN,CAAWK,IAAnC,CAAjB,CADJ,eAEI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,IAAGN,KAAK,CAACC,IAAN,CAAWM,UAAW,EAA/D,CAFJ,CAVJ;AAXO,GAxQc;AAoS7BwH,EAAAA,sBAAsB,EAAE;AACpBlE,IAAAA,IAAI,EAAE,QADc;AAEpBC,IAAAA,WAAW,EAAEtE,gBAFO;AAGpBuE,IAAAA,WAAW,EAAEtE,gBAHO;AAIpByE,IAAAA,GAAG,EAAE,KAJe;AAKpBc,IAAAA,OAAO,EAAE,CAAEvE,aAAF;AALW,GApSK;AA2S7BuH,EAAAA,oBAAoB,EAAE;AAClBnE,IAAAA,IAAI,EAAE,QADY;AAElBC,IAAAA,WAAW,EAAEtE,gBAFK;AAGlBuE,IAAAA,WAAW,EAAEtE,gBAHK;AAIlByE,IAAAA,GAAG,EAAE,KAJa;AAKlBc,IAAAA,OAAO,EAAE,CAAEvE,aAAF;AALS,GA3SO;AAkT7BwH,EAAAA,uBAAuB,EAAE;AACrBpE,IAAAA,IAAI,EAAE,QADe;AAErBC,IAAAA,WAAW,EAAEtE,gBAFQ;AAGrBuE,IAAAA,WAAW,EAAEtE,gBAHQ;AAIrByE,IAAAA,GAAG,EAAE,KAJgB;AAKrBc,IAAAA,OAAO,EAAE,CAAEvE,aAAF;AALY,GAlTI;AAyT7ByH,EAAAA,kBAAkB,EAAE;AAChBrE,IAAAA,IAAI,EAAE,MADU;AAEhBjC,IAAAA,UAAU,EAAE,IAFI;AAGhBsC,IAAAA,GAAG,EAAE,KAHW;AAIhBiE,IAAAA,IAAI,EAAE,IAJU;AAKhBhB,IAAAA,MAAM,EAAE;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KALQ;AAMhBtD,IAAAA,OAAO,EAAE,IANO;AAOhBb,IAAAA,OAAO,EAAE,KAPO;AAQhBc,IAAAA,MAAM,EAAE;AACJlB,MAAAA,IAAI,EAAE,KADF;AAEJW,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,GAAG,EAAE,MAAM;AAHP,KARQ;AAahBF,IAAAA,MAAM,EAAE;AACJV,MAAAA,IAAI,EAAE,QADF;AAEJW,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KAbQ;AAkBhBV,IAAAA,WAAW,EAAE5E,aAlBG;AAmBhB2E,IAAAA,WAAW,EAAE,KAnBG;AAoBhBkB,IAAAA,OAAO,EAAE,EApBO;AAqBhBC,IAAAA,WAAW,EAAE,IArBG;AAsBhBC,IAAAA,SAAS,EAAE,EAtBK;AAuBhBmD,IAAAA,gBAAgB,EAAE,CAvBF;AAwBhBlD,IAAAA,WAAW,EAAE,CAAE,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAL,EAAwBC,GAAxB,CAA6BC,CAAD,IAAO,MAAMA,CAAzC,CAxBG;AAyBhBC,IAAAA,WAAW,EAAE,CAAE,CAAF,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,CAzBG;AA0BhBC,IAAAA,aAAa,EAAE,CA1BC;AA2BhBC,IAAAA,OAAO,EAAE1G,IAAI,CAACsJ,SA3BE;AA4BhB1C,IAAAA,OAAO,EAAE5G,IAAI,CAAC6G,aA5BE;AA6BhB0C,IAAAA,aAAa,EAAE,CAAC,EA7BA;AA8BhBzC,IAAAA,gBAAgB,EAAE,IA9BF;AA+BhBC,IAAAA,YAAY,EAAE,KA/BE;AAgChByC,IAAAA,iBAAiB,EAAE,CAAC,EAhCJ;AAiChBxC,IAAAA,UAAU,EAAGT,CAAD,IAAOA,CAAC,CAACrF,IAjCL;AAkChB+F,IAAAA,OAAO,EAAEpG,eAAe,CAACb,IAAI,CAAC6G,aAAN,EAAqB7G,IAAI,CAACsJ,SAA1B;AAlCR,GAzTS;AA6V7BG,EAAAA,mBAAmB,EAAE;AACjB5E,IAAAA,IAAI,EAAE,MADW;AAEjBjC,IAAAA,UAAU,EAAE,IAFK;AAGjBsC,IAAAA,GAAG,EAAE,KAHY;AAIjBiE,IAAAA,IAAI,EAAE,IAJW;AAKjBpD,IAAAA,MAAM,EAAE;AACJlB,MAAAA,IAAI,EAAE,KADF;AAEJW,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,GAAG,EAAE,MAAM;AAHP,KALS;AAUjBF,IAAAA,MAAM,EAAE;AACJV,MAAAA,IAAI,EAAE,KADF;AAEJW,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,GAAG,EAAE,MAAM;AAHP,KAVS;AAejB0C,IAAAA,MAAM,EAAE;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KAfS;AAgBjBtD,IAAAA,OAAO,EAAE,IAhBQ;AAiBjBb,IAAAA,OAAO,EAAE,IAjBQ;AAkBjBF,IAAAA,WAAW,EAAE5E,aAlBI;AAmBjB2E,IAAAA,WAAW,EAAE3E,aAnBI;AAoBjB6F,IAAAA,OAAO,EAAE,EApBQ;AAqBjBC,IAAAA,WAAW,EAAE,IArBI;AAsBjBC,IAAAA,SAAS,EAAE,EAtBM;AAuBjBmD,IAAAA,gBAAgB,EAAE,CAvBD;AAwBjBlD,IAAAA,WAAW,EAAE,CAAE,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAL,EAAwBC,GAAxB,CAA6BC,CAAD,IAAO,MAAMA,CAAzC,CAxBI;AAyBjBC,IAAAA,WAAW,EAAE,CAAE,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAL,EAAuBC,GAAvB,CAA4BC,CAAD,IAAO,MAAMA,CAAxC,CAzBI;AA0BjBE,IAAAA,aAAa,EAAE,CA1BE;AA2BjBC,IAAAA,OAAO,EAAE1G,IAAI,CAACsJ,SA3BG;AA4BjB1C,IAAAA,OAAO,EAAE5G,IAAI,CAAC0J,MA5BG;AA6BjBH,IAAAA,aAAa,EAAE,CAAC,EA7BC;AA8BjBzC,IAAAA,gBAAgB,EAAE,IA9BD;AA+BjBC,IAAAA,YAAY,EAAE,KA/BG;AAgCjByC,IAAAA,iBAAiB,EAAE,CAAC,EAhCH;AAiCjBxC,IAAAA,UAAU,EAAGT,CAAD,IACRA,CAAC,CAACrF,IAAF,KAAW,SAAX,GACO,GAAEqF,CAAC,CAACrF,IAAK,GAAE,IAAIkG,MAAJ,CAAW,CAAX,CAAc,EADhC,GAEMb,CAAC,CAACrF,IAAF,KAAW,MAAX,GAAqB,GAAEqF,CAAC,CAACrF,IAAK,GAAE,IAAIkG,MAAJ,CAAW,CAAX,CAAc,EAA9C,GAAkDb,CAAC,CAACrF,IApC7C;AAqCjB+F,IAAAA,OAAO,EAAEpG,eAAe,CAACb,IAAI,CAAC0J,MAAN,EAAc1J,IAAI,CAACsJ,SAAnB;AArCP,GA7VQ;AAoY7BK,EAAAA,uBAAuB,EAAE;AACrB9E,IAAAA,IAAI,EAAE,MADe;AAErBjC,IAAAA,UAAU,EAAE,IAFS;AAGrBsC,IAAAA,GAAG,EAAE,KAHgB;AAIrBiE,IAAAA,IAAI,EAAE,IAJe;AAKrBhB,IAAAA,MAAM,EAAE;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KALa;AAMrBtD,IAAAA,OAAO,EAAE,IANY;AAOrBb,IAAAA,OAAO,EAAE,KAPY;AAQrBF,IAAAA,WAAW,EAAE5E,aARQ;AASrB2E,IAAAA,WAAW,EAAE,KATQ;AAUrBkB,IAAAA,OAAO,EAAE,EAVY;AAWrBC,IAAAA,WAAW,EAAE,IAXQ;AAYrBC,IAAAA,SAAS,EAAE,EAZU;AAarBmD,IAAAA,gBAAgB,EAAE,CAbG;AAcrBlD,IAAAA,WAAW,EAAE,CAAE,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAL,EAAwBC,GAAxB,CAA6BC,CAAD,IAAO,MAAMA,CAAzC,CAdQ;AAerBE,IAAAA,aAAa,EAAE,CAfM;AAgBrBC,IAAAA,OAAO,EAAE1G,IAAI,CAACsJ,SAhBO;AAiBrB1C,IAAAA,OAAO,EAAE5G,IAAI,CAAC6G,aAjBO;AAkBrB0C,IAAAA,aAAa,EAAE,CAAC,EAlBK;AAmBrBzC,IAAAA,gBAAgB,EAAE,KAnBG;AAoBrBC,IAAAA,YAAY,EAAE,KApBO;AAqBrBE,IAAAA,OAAO,EAAEpG,eAAe,CAACb,IAAI,CAAC6G,aAAN,EAAqB7G,IAAI,CAACsJ,SAA1B;AArBH,GApYI;AA2Z7BM,EAAAA,wBAAwB,EAAE;AACtB/E,IAAAA,IAAI,EAAE,MADgB;AAEtBjC,IAAAA,UAAU,EAAE,IAFU;AAGtBsC,IAAAA,GAAG,EAAE,KAHiB;AAItBiE,IAAAA,IAAI,EAAE,IAJgB;AAKtB5D,IAAAA,MAAM,EAAE;AACJV,MAAAA,IAAI,EAAE,KADF;AAEJW,MAAAA,GAAG,EAAE,MAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KALc;AAUtB0C,IAAAA,MAAM,EAAE;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KAVc;AAWtBtD,IAAAA,OAAO,EAAE,IAXa;AAYtBb,IAAAA,OAAO,EAAE,IAZa;AAatBF,IAAAA,WAAW,EAAE5E,aAbS;AActB2E,IAAAA,WAAW,EAAE3E,aAdS;AAetB6F,IAAAA,OAAO,EAAE,EAfa;AAgBtBC,IAAAA,WAAW,EAAE,IAhBS;AAiBtBC,IAAAA,SAAS,EAAE,EAjBW;AAkBtBmD,IAAAA,gBAAgB,EAAE,CAlBI;AAmBtBlD,IAAAA,WAAW,EAAE,CAAE,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAL,EAAwBC,GAAxB,CAA6BC,CAAD,IAAO,MAAMA,CAAzC,CAnBS;AAoBtBC,IAAAA,WAAW,EAAE,CAAE,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAL,EAAuBC,GAAvB,CAA4BC,CAAD,IAAO,MAAMA,CAAxC,CApBS;AAqBtBE,IAAAA,aAAa,EAAE,CArBO;AAsBtBC,IAAAA,OAAO,EAAE1G,IAAI,CAACsJ,SAtBQ;AAuBtB1C,IAAAA,OAAO,EAAE5G,IAAI,CAAC0J,MAvBQ;AAwBtBH,IAAAA,aAAa,EAAE,CAAC,EAxBM;AAyBtBzC,IAAAA,gBAAgB,EAAE,KAzBI;AA0BtBC,IAAAA,YAAY,EAAE,KA1BQ;AA2BtBE,IAAAA,OAAO,EAAEpG,eAAe,CAACb,IAAI,CAAC0J,MAAN,EAAc1J,IAAI,CAACsJ,SAAnB;AA3BF,GA3ZG;AAwb7BO,EAAAA,2BAA2B,EAAE;AACzBhF,IAAAA,IAAI,EAAE,MADmB;AAEzBsD,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFiB;AAGzBtD,IAAAA,WAAW,EAAE3E,aAHY;AAIzB4E,IAAAA,WAAW,EAAE,GAJY;AAKzBe,IAAAA,OAAO,EAAE,GALgB;AAMzBb,IAAAA,OAAO,EAAE,IANgB;AAOzBc,IAAAA,MAAM,EAAE;AACJlB,MAAAA,IAAI,EAAE,QADF;AAEJW,MAAAA,GAAG,EAAE,MAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KAPiB;AAYzBP,IAAAA,GAAG,EAAE,IAZoB;AAazBgB,IAAAA,SAAS,EAAE,CAbc;AAczBa,IAAAA,YAAY,EAAE,KAdW;AAezBf,IAAAA,OAAO,EAAE,CAAEvE,aAAF,CAfgB;AAgBzBiF,IAAAA,OAAO,EAAE1G,IAAI,CAAC8J,oBAhBW;AAiBzB7C,IAAAA,OAAO,EAAE,CAAC;AAAEjG,MAAAA;AAAF,KAAD,kBACL;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,mBADd;AAEI,MAAA,KAAK,EAAE;AAAEsH,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE,QAAnC;AAA6CC,QAAAA,UAAU,EAAE;AAAzD,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,KAAK,EAAE,EAArB;AAAyBC,QAAAA,eAAe,EAAE3H,KAAK,CAAC8G,KAAhD;AAAuDc,QAAAA,WAAW,EAAE;AAApE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO5H,KAAK,CAAC6H,OAAb,CAPJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,GAAE7I,IAAI,CAAC+J,KAAL,CAAW/I,KAAK,CAACC,IAAN,CAAWK,IAAtB,EAA4B0I,OAA5B,CAAoC,CAApC,EAAuChJ,KAAK,CAACC,IAAN,CAAWsF,CAAlD,CAAqD,KAAIrG,UAAU,CACzEc,KAAK,CAACC,IAAN,CAAWI,IAD8D,EAEzEL,KAAK,CAACC,IAAN,CAAWK,IAF8D,CAG3E,GAHF,CADJ,eAKI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,IAAGN,KAAK,CAACC,IAAN,CAAWM,UAAW,EAA/D,CALJ,CAVJ;AAlBqB,GAxbA;AA8d7B0I,EAAAA,yBAAyB,EAAE;AACvBpF,IAAAA,IAAI,EAAE,MADiB;AAEvBsD,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFe;AAGvBtD,IAAAA,WAAW,EAAE3E,aAHU;AAIvB4E,IAAAA,WAAW,EAAE,GAJU;AAKvBe,IAAAA,OAAO,EAAE,GALc;AAMvBb,IAAAA,OAAO,EAAE,IANc;AAOvBc,IAAAA,MAAM,EAAE;AACJlB,MAAAA,IAAI,EAAE,QADF;AAEJW,MAAAA,GAAG,EAAE,MAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KAPe;AAYvBP,IAAAA,GAAG,EAAE,KAZkB;AAavBgB,IAAAA,SAAS,EAAE,CAbY;AAcvBa,IAAAA,YAAY,EAAE,KAdS;AAevBf,IAAAA,OAAO,EAAE,CAAEvE,aAAF,CAfc;AAgBvBiF,IAAAA,OAAO,EAAE1G,IAAI,CAAC8J,oBAhBS;AAiBvB7C,IAAAA,OAAO,EAAE,CAAC;AAAEjG,MAAAA;AAAF,KAAD,kBACL;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,mBADd;AAEI,MAAA,KAAK,EAAE;AAAEsH,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE,QAAnC;AAA6CC,QAAAA,UAAU,EAAE;AAAzD,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,KAAK,EAAE,EAArB;AAAyBC,QAAAA,eAAe,EAAE3H,KAAK,CAAC8G,KAAhD;AAAuDc,QAAAA,WAAW,EAAE;AAApE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO5H,KAAK,CAAC6H,OAAb,CAPJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,GAAE7I,IAAI,CAAC+J,KAAL,CAAW/I,KAAK,CAACC,IAAN,CAAWK,IAAtB,EAA4B0I,OAA5B,CAAoC,CAApC,EAAuChJ,KAAK,CAACC,IAAN,CAAWsF,CAAlD,CAAqD,KAAIrG,UAAU,CACzEc,KAAK,CAACC,IAAN,CAAWI,IAD8D,EAEzEL,KAAK,CAACC,IAAN,CAAWK,IAF8D,CAG3E,GAHF,CADJ,eAKI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,IAAGN,KAAK,CAACC,IAAN,CAAWM,UAAW,EAA/D,CALJ,CAVJ;AAlBmB,GA9dE;AAogB7B2I,EAAAA,0BAA0B,EAAE;AACxBrF,IAAAA,IAAI,EAAE,MADkB;AAExBsD,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFgB;AAGxBtD,IAAAA,WAAW,EAAE3E,aAHW;AAIxB4E,IAAAA,WAAW,EAAE,GAJW;AAKxBe,IAAAA,OAAO,EAAE,GALe;AAMxBb,IAAAA,OAAO,EAAE,IANe;AAOxBc,IAAAA,MAAM,EAAE;AACJlB,MAAAA,IAAI,EAAE,QADF;AAEJW,MAAAA,GAAG,EAAE,MAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KAPgB;AAYxBP,IAAAA,GAAG,EAAE,IAZmB;AAaxBgB,IAAAA,SAAS,EAAE,CAba;AAcxBa,IAAAA,YAAY,EAAE,KAdU;AAexBf,IAAAA,OAAO,EAAE,CAAEvE,aAAF,CAfe;AAgBxBiF,IAAAA,OAAO,EAAE1G,IAAI,CAACmK,mBAhBU;AAiBxBlD,IAAAA,OAAO,EAAE,CAAC;AAAEjG,MAAAA;AAAF,KAAD,kBACL;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,mBADd;AAEI,MAAA,KAAK,EAAE;AAAEsH,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE,QAAnC;AAA6CC,QAAAA,UAAU,EAAE;AAAzD,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,KAAK,EAAE,EAArB;AAAyBC,QAAAA,eAAe,EAAE3H,KAAK,CAAC8G,KAAhD;AAAuDc,QAAAA,WAAW,EAAE;AAApE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO5H,KAAK,CAAC6H,OAAb,CAPJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,GAAE7I,IAAI,CAAC+J,KAAL,CAAW/I,KAAK,CAACC,IAAN,CAAWK,IAAtB,EAA4B0I,OAA5B,CAAoC,CAApC,EAAuChJ,KAAK,CAACC,IAAN,CAAWsF,CAAlD,CAAqD,KAAIrG,UAAU,CACzEc,KAAK,CAACC,IAAN,CAAWI,IAD8D,EAEzEL,KAAK,CAACC,IAAN,CAAWK,IAF8D,CAG3E,GAHF,CADJ,eAKI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,IAAGN,KAAK,CAACC,IAAN,CAAWM,UAAW,EAA/D,CALJ,CAVJ;AAlBoB,GApgBC;AA0iB7B6I,EAAAA,wBAAwB,EAAE;AACtBvF,IAAAA,IAAI,EAAE,MADgB;AAEtBsD,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFc;AAGtBtD,IAAAA,WAAW,EAAE3E,aAHS;AAItB4E,IAAAA,WAAW,EAAE,GAJS;AAKtBe,IAAAA,OAAO,EAAE,GALa;AAMtBb,IAAAA,OAAO,EAAE,IANa;AAOtBc,IAAAA,MAAM,EAAE;AACJlB,MAAAA,IAAI,EAAE,QADF;AAEJW,MAAAA,GAAG,EAAE,MAFD;AAGJC,MAAAA,GAAG,EAAE;AAHD,KAPc;AAYtBP,IAAAA,GAAG,EAAE,KAZiB;AAatBgB,IAAAA,SAAS,EAAE,CAbW;AActBa,IAAAA,YAAY,EAAE,KAdQ;AAetBf,IAAAA,OAAO,EAAE,CAAEvE,aAAF,CAfa;AAgBtBiF,IAAAA,OAAO,EAAE1G,IAAI,CAACmK,mBAhBQ;AAiBtBlD,IAAAA,OAAO,EAAE,CAAC;AAAEjG,MAAAA;AAAF,KAAD,kBACL;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,mBADd;AAEI,MAAA,KAAK,EAAE;AAAEsH,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE,QAAnC;AAA6CC,QAAAA,UAAU,EAAE;AAAzD,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,KAAK,EAAE,EAArB;AAAyBC,QAAAA,eAAe,EAAE3H,KAAK,CAAC8G,KAAhD;AAAuDc,QAAAA,WAAW,EAAE;AAApE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO5H,KAAK,CAAC6H,OAAb,CAPJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,GAAE7I,IAAI,CAAC+J,KAAL,CAAW/I,KAAK,CAACC,IAAN,CAAWK,IAAtB,EAA4B0I,OAA5B,CAAoC,CAApC,EAAuChJ,KAAK,CAACC,IAAN,CAAWsF,CAAlD,CAAqD,KAAIrG,UAAU,CACzEc,KAAK,CAACC,IAAN,CAAWI,IAD8D,EAEzEL,KAAK,CAACC,IAAN,CAAWK,IAF8D,CAG3E,GAHF,CADJ,eAKI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,IAAGN,KAAK,CAACC,IAAN,CAAWM,UAAW,EAA/D,CALJ,CAVJ;AAlBkB;AA1iBG,CAA1B","sourcesContent":["import React from 'react'\nimport format from 'date-fns/format'\nimport i18n from '../data/i18n.yml'\nimport { parseDate, formatDate } from './utils'\n\nconst integerFormat = (e) =>\n    parseInt(e, 10) !== e\n        ? ''\n        : Math.abs(e) < 1000\n          ? e\n          : Math.abs(e) < 10 ** 6 ? `${e / 1000}K` : Math.abs(e) < 10 ** 9 ? `${e / 10 ** 6}M` : `${e / 10 ** 9}B`\n\nconst absIntegerFormat = (e) =>\n    parseInt(e, 10) !== e ? '' : Math.abs(e) < 1000 ? Math.abs(e) : `${Math.abs(e) / 1000}K`\n\nconst streamTimeFormat = (idx, interval, dates) => (idx % interval === 0 ? format(parseDate(dates[idx]), 'M/d') : '')\n\nconst fatalityTooltip = (yLabel, xLabel) => ({ point }) => (\n    <div className=\"plot-tooltip plot-tooltip-line\">\n        <div className={point.data.name || point.data.regionName ? 'plot-tooltip-bold' : ''}>\n            {point.data.name ? (\n                `${point.data.name} ${point.data.years ? '(' + point.data.years + ')' : ''}`\n            ) : point.data.regionName ? (\n                point.data.regionName\n            ) : (\n                formatDate(point.data.date, point.data.lang)\n            )}\n        </div>\n        <div>\n            <span>{yLabel[point.data.lang]}</span>\n            <span className=\"plot-tooltip-bold\">{` ${point.data.yFormatted}`}</span>\n        </div>\n        <div>\n            <span>{xLabel[point.data.lang]}</span>\n            <span className=\"plot-tooltip-bold\">{` ${point.data.xFormatted}`}</span>\n        </div>\n    </div>\n)\n\nconst regionLegends = {\n    anchor: 'right',\n    direction: 'column',\n    translateX: 100,\n    itemWidth: 90,\n    itemHeight: 20,\n    itemTextColor: '#000',\n    symbolSize: 12,\n    symbolShape: 'circle'\n}\n\nexport const getSpecificPlotType = (plotType, plotDetails) => {\n    let specificType = ''\n    if (plotType === 'plot_basic') {\n        specificType = plotDetails.stats === 'cumulative' ? 'total' : 'new'\n    } else if (plotType === 'plot_fatality_recovery') {\n        specificType = 'fatality_recovery'\n    } else if (plotType === 'plot_growth') {\n        specificType = plotDetails.stats === 'cumulative' ? 'growth_total' : 'growth_new'\n    } else if (plotType === 'plot_one_vs_rest') {\n        specificType = plotDetails.stats === 'cumulative' ? 'one_vs_rest' : 'one_vs_rest_new'\n    } else if (plotType === 'plot_fatality_line') {\n        if (plotDetails.diseaseComparison === 'show')\n            specificType = plotDetails.fatalityLine === 'rate' ? 'fatality_line' : 'fatality_line2'\n        if (plotDetails.diseaseComparison === 'hide')\n            specificType = plotDetails.fatalityLine === 'rate' ? 'fatality_line_only' : 'fatality_line2_only'\n    } else if (plotType === 'plot_ranking') {\n        specificType = plotDetails.stats === 'cumulative' ? 'most_affected_subregions' : 'most_affected_subregions_new'\n    } else if (plotType === 'plot_subregion_basic') {\n        specificType = plotDetails.stats === 'cumulative' ? 'subregion_total' : 'subregion_new'\n    } else if (plotType === 'plot_subregion_stream') {\n        specificType = plotDetails.stats === 'cumulative' ? 'subregion_total_stream' : 'subregion_new_stream'\n    } else if (plotType === 'plot_subregion_active_stream') {\n        specificType = 'subregion_active_stream'\n    } else if (plotType === 'plot_subregion_fatality') {\n        if (plotDetails.diseaseComparison === 'show')\n            specificType = plotDetails.fatalityLine === 'rate' ? 'subregion_fatality' : 'subregion_fatality2'\n        if (plotDetails.diseaseComparison === 'hide')\n            specificType = plotDetails.fatalityLine === 'rate' ? 'subregion_fatality_only' : 'subregion_fatality2_only'\n    } else if (plotType === 'plot_subregion_shifted') {\n        if (plotDetails.shifted === '100')\n            specificType =\n                plotDetails.stats === 'cumulative' ? 'subregion_total_shifted_100' : 'subregion_new_shifted_100'\n        if (plotDetails.shifted === '10')\n            specificType =\n                plotDetails.stats === 'cumulative' ? 'subregion_total_shifted_10' : 'subregion_new_shifted_10'\n    } else if (plotType === 'plot_doubling_time') {\n        specificType = 'doubling_time'\n    } else if (plotType === 'plot_r0') {\n        specificType = 'r0'\n    }\n\n    return specificType\n}\n\nexport const plotTypes = {\n    plot_basic: {\n        subregions: false,\n        metricChange: false,\n        statsChange: true,\n        scaleChange: true,\n        movingAverage: true,\n        text: i18n.CASES\n    },\n    plot_fatality_recovery: {\n        subregions: false,\n        metricChange: false,\n        statsChange: false,\n        scaleChange: false,\n        movingAverage: true,\n        text: i18n.FATALITY_RECOVERY_RATE\n    },\n    plot_growth: {\n        subregions: false,\n        metricChange: true,\n        statsChange: true,\n        scaleChange: false,\n        movingAverage: true,\n        text: i18n.GROWTH_RATE\n    },\n    plot_one_vs_rest: {\n        subregions: false,\n        metricChange: true,\n        statsChange: true,\n        scaleChange: true,\n        movingAverage: true,\n        text: i18n.ONE_VS_REST\n    },\n    plot_fatality_line: {\n        subregions: false,\n        metricChange: false,\n        statsChange: false,\n        scaleChange: false,\n        text: i18n.FATALITY_LINE\n    },\n    plot_doubling_time: {\n        subregions: false,\n        metricChange: true,\n        statsChange: false,\n        scaleChange: false,\n        movingAverage: true,\n        text: i18n.CASE_DOUBLING_TIME\n    },\n    plot_r0: {\n        subregions: false,\n        metricChange: false,\n        statsChange: false,\n        scaleChange: false,\n        movingAverage: true,\n        text: i18n.ESTIMATED_RO\n    },\n    plot_ranking: {\n        subregions: true,\n        metricChange: true,\n        statsChange: true,\n        scaleChange: false,\n        text: i18n.MOST_AFFECTED_SUBREGIONS\n    },\n    plot_subregion_basic: {\n        subregions: true,\n        metricChange: true,\n        statsChange: true,\n        scaleChange: true,\n        movingAverage: true,\n        text: i18n.SUBREGION\n    },\n    plot_subregion_shifted: {\n        subregions: true,\n        metricChange: true,\n        statsChange: true,\n        scaleChange: true,\n        movingAverage: true,\n        text: i18n.SUBREGION_SHIFTED\n    },\n    plot_subregion_stream: {\n        subregions: true,\n        metricChange: true,\n        statsChange: true,\n        scaleChange: false,\n        text: i18n.SUBREGION_STREAM\n    },\n    plot_subregion_active_stream: {\n        subregions: false,\n        metricChange: false,\n        statsChange: false,\n        scaleChange: false,\n        text: i18n.SUBREGION_ACTIVE_STREAM\n    },\n    plot_subregion_fatality: {\n        subregions: true,\n        metricChange: false,\n        statsChange: false,\n        scaleChange: false,\n        text: i18n.SUBREGION_FATALITY\n    }\n}\n\nexport const plotSpecificTypes = {\n    total: {\n        type: 'line',\n        yAxisFormat: integerFormat,\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        yFormat: ',d',\n        log: true,\n        legendItemWidth: 100\n    },\n    new: {\n        type: 'line',\n        yAxisFormat: integerFormat,\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        yFormat: ',d',\n        log: false,\n        legendItemWidth: 100\n    },\n    fatality_recovery: {\n        type: 'line',\n        yAxisFormat: '.2%',\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        yFormat: '.2%',\n        log: false,\n        legendItemWidth: 150\n    },\n    growth_total: {\n        type: 'line',\n        yAxisFormat: '.0%',\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        yFormat: '.2%',\n        log: false,\n        legendItemWidth: 50,\n        yScale: {\n            type: 'linear',\n            min: 0,\n            max: 1\n        }\n    },\n    growth_new: {\n        type: 'line',\n        yAxisFormat: '.0%',\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        yFormat: '.2%',\n        log: false,\n        legendItemWidth: 50,\n        yScale: {\n            type: 'linear',\n            min: -2,\n            max: 2\n        }\n    },\n    one_vs_rest: {\n        type: 'line',\n        yAxisFormat: integerFormat,\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        log: true,\n        legendItemWidth: 150\n    },\n    one_vs_rest_new: {\n        type: 'line',\n        yAxisFormat: integerFormat,\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        log: false,\n        legendItemWidth: 150\n    },\n    fatality_line: {\n        type: 'line',\n        xFormat: ',d',\n        yFormat: '.2%',\n        xScale: {\n            type: 'log',\n            min: 1,\n            max: 10 ** 9\n        },\n        yScale: {\n            type: 'linear',\n            min: 0,\n            max: 0.4\n        },\n        xAxisFormat: integerFormat,\n        yAxisFormat: '.0%',\n        legends: [],\n        hideMarkers: true,\n        pointSize: 4,\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\n        yTickValues: [ 0, 0.1, 0.2, 0.3, 0.4 ],\n        xTickRotation: 0,\n        xLegend: i18n.INFECTION_NUMBER,\n        yLegend: i18n.FATALITY_RATE,\n        enablePointLabel: true,\n        enableSlices: false,\n        pointLabel: (x) => x.name,\n        tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.INFECTION_NUMBER)\n    },\n    fatality_line2: {\n        type: 'line',\n        xFormat: ',d',\n        yFormat: ',d',\n        xScale: {\n            type: 'log',\n            min: 1,\n            max: 10 ** 9\n        },\n        yScale: {\n            type: 'log',\n            min: 1,\n            max: 10 ** 8\n        },\n        xAxisFormat: integerFormat,\n        yAxisFormat: integerFormat,\n        legends: [],\n        hideMarkers: true,\n        pointSize: 4,\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\n        yTickValues: [ ...Array(9).keys() ].map((x) => 10 ** x),\n        xTickRotation: 0,\n        xLegend: i18n.INFECTION_NUMBER,\n        yLegend: i18n.DEATH_NUMBER,\n        enablePointLabel: true,\n        enableSlices: false,\n        pointLabel: (x) =>\n            x.name === '中东呼吸综合征'\n                ? `${x.name}${'　'.repeat(8)}`\n                : x.name === 'MERS' ? `${x.name}${'　'.repeat(3)}` : x.name,\n        tooltip: fatalityTooltip(i18n.DEATH_NUMBER, i18n.INFECTION_NUMBER)\n    },\n    fatality_line_only: {\n        type: 'line',\n        xFormat: ',d',\n        yFormat: '.2%',\n        xScale: {\n            type: 'log',\n            min: 'auto',\n            max: 'auto'\n        },\n        yScale: {\n            type: 'linear',\n            min: 'auto',\n            max: 'auto'\n        },\n        xAxisFormat: integerFormat,\n        yAxisFormat: '.2%',\n        legends: [],\n        hideMarkers: true,\n        pointSize: 4,\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\n        xTickRotation: 0,\n        xLegend: i18n.INFECTION_NUMBER,\n        yLegend: i18n.FATALITY_RATE,\n        enablePointLabel: false,\n        enableSlices: false,\n        tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.INFECTION_NUMBER)\n    },\n    fatality_line2_only: {\n        type: 'line',\n        xFormat: ',d',\n        yFormat: ',d',\n        xScale: {\n            type: 'log',\n            min: 'auto',\n            max: 'auto'\n        },\n        yScale: {\n            type: 'log',\n            min: 'auto',\n            max: 'auto'\n        },\n        xAxisFormat: integerFormat,\n        yAxisFormat: integerFormat,\n        legends: [],\n        hideMarkers: true,\n        pointSize: 4,\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\n        yTickValues: [ ...Array(9).keys() ].map((x) => 10 ** x),\n        xTickRotation: 0,\n        xLegend: i18n.INFECTION_NUMBER,\n        yLegend: i18n.DEATH_NUMBER,\n        enablePointLabel: false,\n        enableSlices: false,\n        tooltip: fatalityTooltip(i18n.DEATH_NUMBER, i18n.INFECTION_NUMBER)\n    },\n    doubling_time: {\n        type: 'line',\n        yAxisFormat: integerFormat,\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        yFormat: 'd',\n        log: false,\n        legendItemWidth: 50,\n        yLegend: i18n.CASE_DOUBLING_TIME_IN_DAYS,\n        enableSlices: false,\n        tooltip: ({ point }) => (\n            <div className=\"plot-tooltip plot-tooltip-line\">\n                <div>{formatDate(point.data.xFormatted, point.data.lang)}</div>\n                <div className=\"plot-tooltip-bold\">{` ${point.data.yFormatted} ${i18n.DAYS[point.data.lang]}`}</div>\n            </div>\n        )\n    },\n    r0: {\n        type: 'line',\n        yAxisFormat: 'd',\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        yFormat: '.2f',\n        log: false,\n        legends: [],\n        yLegend: i18n.ESTIMATED_RO_SEIR,\n        enableSlices: false,\n        tooltip: ({ point }) => (\n            <div className=\"plot-tooltip plot-tooltip-line\">\n                <div>{formatDate(point.data.xFormatted, point.data.lang)}</div>\n                <div>\n                    <span>R₀ ≈ </span>\n                    <span className=\"plot-tooltip-bold\">{point.data.yFormatted}</span>\n                </div>\n            </div>\n        )\n    },\n    most_affected_subregions: {\n        type: 'bump',\n        log: false,\n        tooltip: ({ serie }) => (\n            <span className=\"plot-tooltip plot-tooltip-bump\" style={{ color: serie.color }}>\n                {serie.fullId}\n                <span className=\"plot-tooltip-bold\">{` ${serie.count}`}</span>\n            </span>\n        )\n    },\n    most_affected_subregions_new: {\n        type: 'bump',\n        log: false,\n        tooltip: ({ serie }) => (\n            <span className=\"plot-tooltip plot-tooltip-bump\" style={{ color: serie.color }}>\n                {serie.fullId}\n                <span className=\"plot-tooltip-bold\">{` ${serie.count}`}</span>\n            </span>\n        )\n    },\n    subregion_total: {\n        type: 'line',\n        margin: { right: 115, bottom: 30 },\n        yAxisFormat: integerFormat,\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        yFormat: ',d',\n        log: true,\n        pointSize: 0,\n        enableSlices: false,\n        legends: [ regionLegends ],\n        tooltip: ({ point }) => (\n            <div className=\"plot-tooltip plot-tooltip-line\">\n                <div\n                    className=\"plot-tooltip-bold\"\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                >\n                    <span>\n                        <div style={{ height: 12, width: 12, backgroundColor: point.color, marginRight: 5 }} />\n                    </span>\n                    <span>{point.serieId}</span>\n                </div>\n                <div>\n                    <span>{formatDate(point.data.xFormatted, point.data.lang)}</span>\n                    <span className=\"plot-tooltip-bold\">{` ${point.data.yFormatted}`}</span>\n                </div>\n            </div>\n        )\n    },\n    subregion_new: {\n        type: 'line',\n        margin: { right: 115, bottom: 30 },\n        yAxisFormat: integerFormat,\n        xAxisFormat: i18n.PLOT_DATE_FORMAT,\n        yFormat: ',d',\n        log: false,\n        pointSize: 0,\n        enableSlices: false,\n        legends: [ regionLegends ],\n        tooltip: ({ point }) => (\n            <div className=\"plot-tooltip plot-tooltip-line\">\n                <div\n                    className=\"plot-tooltip-bold\"\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                >\n                    <span>\n                        <div style={{ height: 12, width: 12, backgroundColor: point.color, marginRight: 5 }} />\n                    </span>\n                    <span>{point.serieId}</span>\n                </div>\n                <div>\n                    <span>{formatDate(point.data.xFormatted, point.data.lang)}</span>\n                    <span className=\"plot-tooltip-bold\">{` ${point.data.yFormatted}`}</span>\n                </div>\n            </div>\n        )\n    },\n    subregion_total_stream: {\n        type: 'stream',\n        yAxisFormat: absIntegerFormat,\n        xAxisFormat: streamTimeFormat,\n        log: false,\n        legends: [ regionLegends ]\n    },\n    subregion_new_stream: {\n        type: 'stream',\n        yAxisFormat: absIntegerFormat,\n        xAxisFormat: streamTimeFormat,\n        log: false,\n        legends: [ regionLegends ]\n    },\n    subregion_active_stream: {\n        type: 'stream',\n        yAxisFormat: absIntegerFormat,\n        xAxisFormat: streamTimeFormat,\n        log: false,\n        legends: [ regionLegends ]\n    },\n    subregion_fatality: {\n        type: 'line',\n        subregions: true,\n        log: false,\n        xLog: true,\n        margin: { left: 60 },\n        xFormat: ',d',\n        yFormat: '.2%',\n        xScale: {\n            type: 'log',\n            min: 1,\n            max: 10 ** 9\n        },\n        yScale: {\n            type: 'linear',\n            min: 0,\n            max: 0.4\n        },\n        xAxisFormat: integerFormat,\n        yAxisFormat: '.1%',\n        legends: [],\n        hideMarkers: true,\n        pointSize: 10,\n        pointBorderWidth: 2,\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\n        yTickValues: [ 0, 0.1, 0.2, 0.3, 0.4 ],\n        xTickRotation: 0,\n        xLegend: i18n.CONFIRMED,\n        yLegend: i18n.FATALITY_RATE,\n        yLegendOffset: -50,\n        enablePointLabel: true,\n        enableSlices: false,\n        pointLabelYOffset: -10,\n        pointLabel: (x) => x.name,\n        tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.CONFIRMED)\n    },\n    subregion_fatality2: {\n        type: 'line',\n        subregions: true,\n        log: false,\n        xLog: true,\n        xScale: {\n            type: 'log',\n            min: 1,\n            max: 10 ** 9\n        },\n        yScale: {\n            type: 'log',\n            min: 1,\n            max: 10 ** 8\n        },\n        margin: { left: 60 },\n        xFormat: ',d',\n        yFormat: ',d',\n        xAxisFormat: integerFormat,\n        yAxisFormat: integerFormat,\n        legends: [],\n        hideMarkers: true,\n        pointSize: 10,\n        pointBorderWidth: 2,\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\n        yTickValues: [ ...Array(9).keys() ].map((x) => 10 ** x),\n        xTickRotation: 0,\n        xLegend: i18n.CONFIRMED,\n        yLegend: i18n.DEATHS,\n        yLegendOffset: -50,\n        enablePointLabel: true,\n        enableSlices: false,\n        pointLabelYOffset: -10,\n        pointLabel: (x) =>\n            x.name === '中东呼吸综合征'\n                ? `${x.name}${'　'.repeat(8)}`\n                : x.name === 'MERS' ? `${x.name}${'　'.repeat(3)}` : x.name,\n        tooltip: fatalityTooltip(i18n.DEATHS, i18n.CONFIRMED)\n    },\n    subregion_fatality_only: {\n        type: 'line',\n        subregions: true,\n        log: false,\n        xLog: true,\n        margin: { left: 60 },\n        xFormat: ',d',\n        yFormat: '.2%',\n        xAxisFormat: integerFormat,\n        yAxisFormat: '.1%',\n        legends: [],\n        hideMarkers: true,\n        pointSize: 10,\n        pointBorderWidth: 2,\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\n        xTickRotation: 0,\n        xLegend: i18n.CONFIRMED,\n        yLegend: i18n.FATALITY_RATE,\n        yLegendOffset: -50,\n        enablePointLabel: false,\n        enableSlices: false,\n        tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.CONFIRMED)\n    },\n    subregion_fatality2_only: {\n        type: 'line',\n        subregions: true,\n        log: false,\n        xLog: true,\n        yScale: {\n            type: 'log',\n            min: 'auto',\n            max: 'auto'\n        },\n        margin: { left: 60 },\n        xFormat: ',d',\n        yFormat: ',d',\n        xAxisFormat: integerFormat,\n        yAxisFormat: integerFormat,\n        legends: [],\n        hideMarkers: true,\n        pointSize: 10,\n        pointBorderWidth: 2,\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\n        yTickValues: [ ...Array(9).keys() ].map((x) => 10 ** x),\n        xTickRotation: 0,\n        xLegend: i18n.CONFIRMED,\n        yLegend: i18n.DEATHS,\n        yLegendOffset: -50,\n        enablePointLabel: false,\n        enableSlices: false,\n        tooltip: fatalityTooltip(i18n.DEATHS, i18n.CONFIRMED)\n    },\n    subregion_total_shifted_100: {\n        type: 'line',\n        margin: { right: 115 },\n        yAxisFormat: integerFormat,\n        xAxisFormat: 'd',\n        xFormat: 'd',\n        yFormat: ',d',\n        xScale: {\n            type: 'linear',\n            min: 'auto',\n            max: 'auto'\n        },\n        log: true,\n        pointSize: 0,\n        enableSlices: false,\n        legends: [ regionLegends ],\n        xLegend: i18n.DAYS_AFTER_100_CASES,\n        tooltip: ({ point }) => (\n            <div className=\"plot-tooltip plot-tooltip-line\">\n                <div\n                    className=\"plot-tooltip-bold\"\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                >\n                    <span>\n                        <div style={{ height: 12, width: 12, backgroundColor: point.color, marginRight: 5 }} />\n                    </span>\n                    <span>{point.serieId}</span>\n                </div>\n                <div>\n                    <span>{`${i18n.DAY_0[point.data.lang].replace(0, point.data.x)} (${formatDate(\n                        point.data.date,\n                        point.data.lang\n                    )})`}</span>\n                    <span className=\"plot-tooltip-bold\">{` ${point.data.yFormatted}`}</span>\n                </div>\n            </div>\n        )\n    },\n    subregion_new_shifted_100: {\n        type: 'line',\n        margin: { right: 115 },\n        yAxisFormat: integerFormat,\n        xAxisFormat: 'd',\n        xFormat: 'd',\n        yFormat: ',d',\n        xScale: {\n            type: 'linear',\n            min: 'auto',\n            max: 'auto'\n        },\n        log: false,\n        pointSize: 0,\n        enableSlices: false,\n        legends: [ regionLegends ],\n        xLegend: i18n.DAYS_AFTER_100_CASES,\n        tooltip: ({ point }) => (\n            <div className=\"plot-tooltip plot-tooltip-line\">\n                <div\n                    className=\"plot-tooltip-bold\"\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                >\n                    <span>\n                        <div style={{ height: 12, width: 12, backgroundColor: point.color, marginRight: 5 }} />\n                    </span>\n                    <span>{point.serieId}</span>\n                </div>\n                <div>\n                    <span>{`${i18n.DAY_0[point.data.lang].replace(0, point.data.x)} (${formatDate(\n                        point.data.date,\n                        point.data.lang\n                    )})`}</span>\n                    <span className=\"plot-tooltip-bold\">{` ${point.data.yFormatted}`}</span>\n                </div>\n            </div>\n        )\n    },\n    subregion_total_shifted_10: {\n        type: 'line',\n        margin: { right: 115 },\n        yAxisFormat: integerFormat,\n        xAxisFormat: 'd',\n        xFormat: 'd',\n        yFormat: ',d',\n        xScale: {\n            type: 'linear',\n            min: 'auto',\n            max: 'auto'\n        },\n        log: true,\n        pointSize: 0,\n        enableSlices: false,\n        legends: [ regionLegends ],\n        xLegend: i18n.DAYS_AFTER_10_CASES,\n        tooltip: ({ point }) => (\n            <div className=\"plot-tooltip plot-tooltip-line\">\n                <div\n                    className=\"plot-tooltip-bold\"\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                >\n                    <span>\n                        <div style={{ height: 12, width: 12, backgroundColor: point.color, marginRight: 5 }} />\n                    </span>\n                    <span>{point.serieId}</span>\n                </div>\n                <div>\n                    <span>{`${i18n.DAY_0[point.data.lang].replace(0, point.data.x)} (${formatDate(\n                        point.data.date,\n                        point.data.lang\n                    )})`}</span>\n                    <span className=\"plot-tooltip-bold\">{` ${point.data.yFormatted}`}</span>\n                </div>\n            </div>\n        )\n    },\n    subregion_new_shifted_10: {\n        type: 'line',\n        margin: { right: 115 },\n        yAxisFormat: integerFormat,\n        xAxisFormat: 'd',\n        xFormat: 'd',\n        yFormat: ',d',\n        xScale: {\n            type: 'linear',\n            min: 'auto',\n            max: 'auto'\n        },\n        log: false,\n        pointSize: 0,\n        enableSlices: false,\n        legends: [ regionLegends ],\n        xLegend: i18n.DAYS_AFTER_10_CASES,\n        tooltip: ({ point }) => (\n            <div className=\"plot-tooltip plot-tooltip-line\">\n                <div\n                    className=\"plot-tooltip-bold\"\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                >\n                    <span>\n                        <div style={{ height: 12, width: 12, backgroundColor: point.color, marginRight: 5 }} />\n                    </span>\n                    <span>{point.serieId}</span>\n                </div>\n                <div>\n                    <span>{`${i18n.DAY_0[point.data.lang].replace(0, point.data.x)} (${formatDate(\n                        point.data.date,\n                        point.data.lang\n                    )})`}</span>\n                    <span className=\"plot-tooltip-bold\">{` ${point.data.yFormatted}`}</span>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}