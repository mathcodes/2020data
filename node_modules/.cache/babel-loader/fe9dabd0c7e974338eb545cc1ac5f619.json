{"ast":null,"code":"import _objectSpread from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem}from'reactstrap';import{FiMap}from'react-icons/fi';import'flag-icon-css/css/flag-icon.min.css';import{metricText}from'../utils/utils';import{mapText}from'../utils/map_text';import*as str from'../utils/strings';import{plotTypes}from'../utils/plot_types';var MapNavBar=/*#__PURE__*/function(_Component){_inherits(MapNavBar,_Component);var _super=_createSuper(MapNavBar);function MapNavBar(){var _this;_classCallCheck(this,MapNavBar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={dropdownOpen:false,height:-1};_this.updateHeight=function(){var height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;_this.setState({height:height});};_this.mapToggle=function(map){if(map!==_this.props.currentMap){_this.props.mapToggle(map);if(map===str.CHINA_MAP1||map===str.CHINA_MAP2){if(_this.props.currentMap!==str.CHINA_MAP1&&_this.props.currentMap!==str.CHINA_MAP2)_this.props.regionToggle([str.CHINA_ZH],false);}else if(map===str.US_MAP||map===str.US_MAP2){if(_this.props.currentMap!==str.US_MAP&&_this.props.currentMap!==str.US_MAP2)_this.props.regionToggle([str.US_ZH],false);}else if(map===str.ITALY_MAP||map===str.ITALY_MAP2){if(_this.props.currentMap!==str.ITALY_MAP&&_this.props.currentMap!==str.ITALY_MAP2)_this.props.regionToggle([str.ITALY_ZH],false);}else if(map===str.HONGKONG_MAP){_this.props.regionToggle([str.CHINA_ZH,str.HONGKONG_ZH],false);}else if(map!==str.TRANSMISSION){_this.props.regionToggle([mapText[map].regionName],false);}}_this.setState({dropdownOpen:!_this.state.dropdownOpen});};_this.metricToggle=function(event){var newMetric=event.target.getAttribute('value');if(newMetric!==_this.props.metric)_this.props.metricToggle(newMetric);};return _this;}_createClass(MapNavBar,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateHeight();window.addEventListener('resize',this.updateHeight);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',this.updateHeight);}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,lang=_this$props.lang,metric=_this$props.metric,currentMap=_this$props.currentMap,fullPlot=_this$props.fullPlot,fullTree=_this$props.fullTree,plotType=_this$props.plotType;return/*#__PURE__*/React.createElement(\"div\",{className:\"map-nav-bar-wrap \".concat(fullPlot&&!plotTypes[plotType].metricChange?'grey-out':'')},/*#__PURE__*/React.createElement(\"ul\",{className:\"map-nav-bar\"},['confirmedCount','deadCount','curedCount'].map(function(count){return/*#__PURE__*/React.createElement(\"li\",{key:\"map-nav-\".concat(count),className:count===metric?'current':''},/*#__PURE__*/React.createElement(\"div\",{value:count,onClick:_this2.metricToggle},metricText[count][lang]));})),!fullPlot&&!fullTree&&/*#__PURE__*/React.createElement(UncontrolledDropdown,{className:\"map-toggle\"},/*#__PURE__*/React.createElement(DropdownToggle,{className:\"map-toggle-button\",tag:\"span\",\"data-toggle\":\"dropdown\",\"aria-expanded\":this.state.dropdownOpen},/*#__PURE__*/React.createElement(FiMap,{size:14,style:{marginRight:10}}),/*#__PURE__*/React.createElement(\"span\",null,mapText[currentMap].title[lang])),/*#__PURE__*/React.createElement(DropdownMenu,{modifiers:{setMaxHeight:{enabled:true,order:890,fn:function fn(data){return _objectSpread(_objectSpread({},data),{},{styles:_objectSpread(_objectSpread({},data.styles),{},{overflowY:'auto',maxHeight:_this2.state.height*0.5})});}}}},['Global','Asia','Europe','North America','South America','Oceania','Africa',null].map(function(continent){return Object.keys(mapText).filter(function(map){return mapText[map].continent===continent||mapText[map].continent&&mapText[map].continent['en']===continent;}).map(function(map,idx){return/*#__PURE__*/React.createElement(Fragment,{key:\"map-\".concat(idx)},map===str.TRANSMISSION?/*#__PURE__*/React.createElement(DropdownItem,{divider:true}):/*#__PURE__*/React.createElement(\"div\",null),idx===0&&continent!=null&&continent!=='Global'?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(DropdownItem,{divider:true}),/*#__PURE__*/React.createElement(DropdownItem,{header:true},mapText[map].continent[lang])):/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(DropdownItem,{className:currentMap===map?'current':'',onClick:function onClick(){return _this2.mapToggle(map);}},map!==str.TRANSMISSION&&/*#__PURE__*/React.createElement(\"span\",{className:\"flag-icon \".concat(mapText[map].flagCode?'flag-icon-'+mapText[map].flagCode:'')}),mapText[map].title[lang]));});}))));}}]);return MapNavBar;}(Component);export{MapNavBar as default};","map":{"version":3,"sources":["/Users/jonchristie/Downloads/covid19-master/src/components/MapNavBar.js"],"names":["React","Component","Fragment","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","FiMap","metricText","mapText","str","plotTypes","MapNavBar","state","dropdownOpen","height","updateHeight","window","innerHeight","document","documentElement","clientHeight","body","setState","mapToggle","map","props","currentMap","CHINA_MAP1","CHINA_MAP2","regionToggle","CHINA_ZH","US_MAP","US_MAP2","US_ZH","ITALY_MAP","ITALY_MAP2","ITALY_ZH","HONGKONG_MAP","HONGKONG_ZH","TRANSMISSION","regionName","metricToggle","event","newMetric","target","getAttribute","metric","addEventListener","removeEventListener","lang","fullPlot","fullTree","plotType","metricChange","count","marginRight","title","setMaxHeight","enabled","order","fn","data","styles","overflowY","maxHeight","continent","Object","keys","filter","idx","flagCode"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { FiMap } from 'react-icons/fi'\nimport 'flag-icon-css/css/flag-icon.min.css'\nimport { metricText } from '../utils/utils'\nimport { mapText } from '../utils/map_text'\nimport * as str from '../utils/strings'\nimport { plotTypes } from '../utils/plot_types'\n\nexport default class MapNavBar extends Component {\n    state = {\n        dropdownOpen: false,\n        height: -1\n    }\n\n    componentDidMount() {\n        this.updateHeight()\n        window.addEventListener('resize', this.updateHeight)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateHeight)\n    }\n\n    updateHeight = () => {\n        const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n        this.setState({ height })\n    }\n\n    mapToggle = (map) => {\n        if (map !== this.props.currentMap) {\n            this.props.mapToggle(map)\n            if (map === str.CHINA_MAP1 || map === str.CHINA_MAP2) {\n                if (this.props.currentMap !== str.CHINA_MAP1 && this.props.currentMap !== str.CHINA_MAP2)\n                    this.props.regionToggle([ str.CHINA_ZH ], false)\n            } else if (map === str.US_MAP || map === str.US_MAP2) {\n                if (this.props.currentMap !== str.US_MAP && this.props.currentMap !== str.US_MAP2)\n                    this.props.regionToggle([ str.US_ZH ], false)\n            } else if (map === str.ITALY_MAP || map === str.ITALY_MAP2) {\n                if (this.props.currentMap !== str.ITALY_MAP && this.props.currentMap !== str.ITALY_MAP2)\n                    this.props.regionToggle([ str.ITALY_ZH ], false)\n            } else if (map === str.HONGKONG_MAP) {\n                this.props.regionToggle([ str.CHINA_ZH, str.HONGKONG_ZH ], false)\n            } else if (map !== str.TRANSMISSION) {\n                this.props.regionToggle([ mapText[map].regionName ], false)\n            }\n        }\n        this.setState({ dropdownOpen: !this.state.dropdownOpen })\n    }\n\n    metricToggle = (event) => {\n        const newMetric = event.target.getAttribute('value')\n        if (newMetric !== this.props.metric) this.props.metricToggle(newMetric)\n    }\n\n    render() {\n        const { lang, metric, currentMap, fullPlot, fullTree, plotType } = this.props\n\n        return (\n            <div className={`map-nav-bar-wrap ${fullPlot && !plotTypes[plotType].metricChange ? 'grey-out' : ''}`}>\n                <ul className=\"map-nav-bar\">\n                    {[ 'confirmedCount', 'deadCount', 'curedCount' ].map((count) => (\n                        <li key={`map-nav-${count}`} className={count === metric ? 'current' : ''}>\n                            <div value={count} onClick={this.metricToggle}>\n                                {metricText[count][lang]}\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n\n                {!fullPlot &&\n                !fullTree && (\n                    <UncontrolledDropdown className=\"map-toggle\">\n                        <DropdownToggle\n                            className=\"map-toggle-button\"\n                            tag=\"span\"\n                            data-toggle=\"dropdown\"\n                            aria-expanded={this.state.dropdownOpen}\n                        >\n                            <FiMap size={14} style={{ marginRight: 10 }} />\n                            <span>{mapText[currentMap].title[lang]}</span>\n                        </DropdownToggle>\n                        <DropdownMenu\n                            modifiers={{\n                                setMaxHeight: {\n                                    enabled: true,\n                                    order: 890,\n                                    fn: (data) => {\n                                        return {\n                                            ...data,\n                                            styles: {\n                                                ...data.styles,\n                                                overflowY: 'auto',\n                                                maxHeight: this.state.height * 0.5\n                                            }\n                                        }\n                                    }\n                                }\n                            }}\n                        >\n                            {[\n                                'Global',\n                                'Asia',\n                                'Europe',\n                                'North America',\n                                'South America',\n                                'Oceania',\n                                'Africa',\n                                null\n                            ].map((continent) =>\n                                Object.keys(mapText)\n                                    .filter(\n                                        (map) =>\n                                            mapText[map].continent === continent ||\n                                            (mapText[map].continent && mapText[map].continent['en'] === continent)\n                                    )\n                                    .map((map, idx) => {\n                                        return (\n                                            <Fragment key={`map-${idx}`}>\n                                                {map === str.TRANSMISSION ? <DropdownItem divider /> : <div />}\n                                                {idx === 0 && continent != null && continent !== 'Global' ? (\n                                                    <Fragment>\n                                                        <DropdownItem divider />\n                                                        <DropdownItem header>\n                                                            {mapText[map].continent[lang]}\n                                                        </DropdownItem>\n                                                    </Fragment>\n                                                ) : (\n                                                    <div />\n                                                )}\n                                                <DropdownItem\n                                                    className={currentMap === map ? 'current' : ''}\n                                                    onClick={() => this.mapToggle(map)}\n                                                >\n                                                    {map !== str.TRANSMISSION && (\n                                                        <span\n                                                            className={`flag-icon ${mapText[map].flagCode\n                                                                ? 'flag-icon-' + mapText[map].flagCode\n                                                                : ''}`}\n                                                        />\n                                                    )}\n                                                    {mapText[map].title[lang]}\n                                                </DropdownItem>\n                                            </Fragment>\n                                        )\n                                    })\n                            )}\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                )}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}