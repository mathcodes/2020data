{"ast":null,"code":"var _jsxFileName = \"/Users/jonchristie/Downloads/covid19-master/src/components/Region.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { GoFold, GoUnfold, GoSearch } from 'react-icons/go';\nimport RegionDropdown from './RegionDropdown';\nimport RegionSelectOption from './RegionSelectOption';\nimport { formatDate, getDataFromRegion } from '../utils/utils';\nimport * as str from '../utils/strings';\nimport i18n from '../data/i18n.yml';\nconst selectStyles = {\n  control: (provided, state) => ({ ...provided,\n    minWidth: 240,\n    marginBottom: 8,\n    borderRadius: 30\n  }),\n  menu: () => ({\n    backgroundColor: 'white',\n    boxShadow: '0 0 0 1px hsla(218, 50%, 10%, 0.1), 0 4px 11px hsla(218, 50%, 10%, 0.1)',\n    cursor: 'pointer'\n  }),\n  option: (provided, state) => ({ ...provided,\n    textAlign: 'left',\n    fontSize: 12,\n    backgroundColor: state.isFocused ? 'var(--primary-color-5)' : state.isSelected ? '#eee' : null,\n    color: state.isFocused ? '#fff' : '#000',\n    cursor: 'pointer'\n  })\n};\nconst selectStylesDark = {\n  control: (provided, state) => ({ ...provided,\n    minWidth: 240,\n    marginBottom: 8,\n    borderRadius: 30\n  }),\n  menu: () => ({\n    backgroundColor: 'var(--dark-grey)',\n    boxShadow: '0 0 0 1px hsla(218, 50%, 10%, 0.1), 0 4px 11px hsla(218, 50%, 10%, 0.1)',\n    cursor: 'pointer'\n  }),\n  option: (provided, state) => ({ ...provided,\n    textAlign: 'left',\n    fontSize: 12,\n    backgroundColor: state.isFocused ? 'var(--primary-color-4)' : state.isSelected ? '#777' : null,\n    color: 'var(--lighter-grey)',\n    cursor: 'pointer'\n  })\n};\nexport default class Region extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false,\n      //value: undefined,\n      value: 'en',\n      options: [],\n      countryOnly: true\n    };\n\n    this.toggleOpen = () => {\n      this.setState(state => ({\n        isOpen: !state.isOpen\n      }));\n    };\n\n    this.toggleCountryOnly = () => {\n      this.props.ReactTooltip.hide(this.regionSelectMore);\n      this.setState({\n        countryOnly: !this.state.countryOnly\n      });\n    };\n\n    this.onSelectChange = selected => {\n      this.toggleOpen();\n      this.setState({\n        value: selected\n      });\n      this.props.regionToggle(selected.region);\n    };\n\n    this.generateOptions = root => {\n      const {\n        data,\n        lang,\n        date,\n        metric\n      } = this.props;\n      const englishRoot = [...Array(root.length).keys()].map(i => root.slice(0, i + 1)).map(regionList => getDataFromRegion(data, regionList).ENGLISH);\n      let options = [];\n      const regionData = getDataFromRegion(data, root);\n      Object.keys(regionData).filter(d => !['confirmedCount', 'deadCount', 'curedCount', 'ENGLISH'].includes(d)).sort((a, b) => {\n        const aCount = regionData[a][metric][date] ? regionData[a][metric][date] : 0;\n        const bCount = regionData[b][metric][date] ? regionData[b][metric][date] : 0;\n        return aCount > bCount ? -1 : 1;\n      }).forEach(d => {\n        options.push({\n          value: lang === 'zh' ? [...root, d].join('') : [...englishRoot, regionData[d].ENGLISH].join(''),\n          region: [...root, d],\n          label: /*#__PURE__*/React.createElement(RegionSelectOption, {\n            region: lang === 'zh' ? [...root, d] : [...englishRoot, regionData[d].ENGLISH],\n            data: regionData[d],\n            date: date,\n            metric: metric,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }\n          })\n        });\n        const childData = getDataFromRegion(data, [...root, d]);\n        const showSubRegions = [str.CHINA_ZH, str.FRANCE_ZH, str.UK_ZH, str.NETHERLANDS_ZH, str.DENMARK_ZH];\n        if (Object.keys(childData).length > 4 && (!this.state.countryOnly || root.length === 0 && showSubRegions.includes(d))) options = [...options, ...this.generateOptions([...root, d])];\n      });\n      return options;\n    };\n\n    this.displayRegionName = () => {\n      const {\n        currentRegion,\n        data,\n        lang\n      } = this.props; // remove duplicates in case same region occurs at different level (e.g. Japan)\n\n      let region = [...new Set(currentRegion)];\n\n      if (lang === 'zh') {\n        region = region.join(''); // China\n\n        region = region !== str.CHINA_ZH ? region.replace(str.CHINA_ZH, '') : str.CHINA_ZH;\n        region = region !== str.INTL_CONVEYANCE_ZH ? region.replace(str.INTL_CONVEYANCE_ZH, '') : str.INTL_CONVEYANCE_ZH;\n        region = region !== str.MAINLAND_CHINA_ZH ? region.replace(str.MAINLAND_CHINA_ZH, '') : str.MAINLAND_CHINA_ZH; // France\n\n        region = region !== `${str.FRANCE_ZH}${str.METRO_FRANCE_ZH}` ? region.replace(str.METRO_FRANCE_ZH, '') : str.METRO_FRANCE_ZH;\n        region = region !== `${str.FRANCE_ZH}${str.OVERSEAS_FRANCE_ZH}` ? region.replace(`${str.FRANCE_ZH}${str.OVERSEAS_FRANCE_ZH}`, '') : `${str.FRANCE_ZH}${str.OVERSEAS_FRANCE_ZH}`; // UK\n\n        region = region !== `${str.UK_ZH}${str.OVERSEAS_TERRITORIES_ZH}` ? region.replace(`${str.UK_ZH}${str.OVERSEAS_TERRITORIES_ZH}`, '') : `${str.UK_ZH}${str.OVERSEAS_TERRITORIES_ZH}`;\n        region = region !== `${str.UK_ZH}${str.CROWN_DEPENDENCIES_ZH}` ? region.replace(`${str.UK_ZH}${str.CROWN_DEPENDENCIES_ZH}`, '') : `${str.UK_ZH}${str.CROWN_DEPENDENCIES_ZH}`;\n        return region;\n      } else {\n        if (data == null) return;\n        let englishRegion = [...Array(currentRegion.length).keys()].map(i => currentRegion.slice(0, i + 1)).map(regionList => getDataFromRegion(data, regionList).ENGLISH);\n        englishRegion = [...new Set(englishRegion)];\n        region = englishRegion.reverse().join(', '); // China\n\n        region = region !== str.CHINA_EN ? region.replace(`, ${str.CHINA_EN}`, '') : str.CHINA_EN;\n        region = region !== str.MAINLAND_CHINA_EN ? region.replace(`, ${str.MAINLAND_CHINA_EN}`, '') : str.MAINLAND_CHINA_EN; // France\n\n        region = region !== `${str.METRO_FRANCE_EN}, ${str.FRANCE_EN}` ? region.replace(`, ${str.METRO_FRANCE_EN}`, '') : str.METRO_FRANCE_EN;\n        region = region !== `${str.OVERSEAS_FRANCE_EN}, ${str.FRANCE_EN}` ? region.replace(`, ${str.OVERSEAS_FRANCE_EN}, ${str.FRANCE_EN}`, '') : str.OVERSEAS_FRANCE_EN; // Cruise ship\n\n        region = region !== str.INTL_CONVEYANCE_EN ? region.replace(`, ${str.INTL_CONVEYANCE_EN}`, '') : str.INTL_CONVEYANCE_EN; // USA\n\n        region = region !== str.US_EN ? region.replace(str.US_EN, 'US') : str.US_EN; // UK\n\n        region = region !== str.UK_EN ? region.replace(str.UK_EN, 'UK') : str.UK_EN;\n        region = region !== `${str.OVERSEAS_TERRITORIES_EN}, ${str.UK_ABBR_EN}` ? region.replace(`, ${str.OVERSEAS_TERRITORIES_EN}, ${str.UK_ABBR_EN}`, '') : str.OVERSEAS_TERRITORIES_EN;\n        region = region !== `${str.CROWN_DEPENDENCIES_EN}, ${str.UK_ABBR_EN}` ? region.replace(`, ${str.CROWN_DEPENDENCIES_EN}, ${str.UK_ABBR_EN}`, '') : str.CROWN_DEPENDENCIES_EN;\n        return region;\n      }\n    };\n\n    this.displayDate = () => {\n      const {\n        lang,\n        date\n      } = this.props;\n      return formatDate(date, lang);\n    };\n\n    this.showTooltip = () => {\n      // show tooltip only when text is overflow\n      const elem = document.querySelector(`.current-region div`);\n      if (elem == null) return true;\n      return elem.offsetWidth === elem.scrollWidth;\n    };\n  }\n\n  componentDidMount() {\n    const options = this.generateOptions([]);\n    this.setState({\n      options,\n      value: {\n        value: this.props.lang === 'zh' ? str.GLOBAL_ZH : str.GLOBAL_EN\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.lang !== this.props.lang || prevProps.metric !== this.props.metric || prevProps.date !== this.props.date || prevState.countryOnly !== this.state.countryOnly) {\n      const options = this.generateOptions([]);\n      this.setState({\n        options\n      });\n    }\n\n    if (prevState.isOpen !== this.state.isOpen || prevState.countryOnly !== this.state.countryOnly) {\n      this.props.ReactTooltip.rebuild();\n    }\n\n    if (prevProps.currentRegion !== this.props.currentRegion) {\n      const {\n        data,\n        currentRegion,\n        lang\n      } = this.props;\n      const englishRegion = [...Array(currentRegion.length).keys()].map(i => currentRegion.slice(0, i + 1)).map(regionList => getDataFromRegion(data, regionList).ENGLISH);\n      this.setState({\n        value: {\n          value: lang === 'zh' ? currentRegion.join('') : englishRegion.join('')\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      isOpen,\n      value,\n      countryOnly\n    } = this.state;\n    if (this.props.data == null) return;\n    const MoreIcon = countryOnly ? GoUnfold : GoFold;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-region-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RegionDropdown, {\n      isOpen: isOpen,\n      onClose: this.toggleOpen,\n      target: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"current-region\",\n        onClick: this.toggleOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        \"data-tip\": this.displayRegionName(),\n        \"data-tip-disable\": this.showTooltip(),\n        \"data-place\": 'bottom',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }\n      }, this.displayRegionName()), /*#__PURE__*/React.createElement(GoSearch, {\n        size: 18,\n        className: \"dropdown-arrow\",\n        style: {\n          transform: 'translateY(1px)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 29\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      classNamePrefix: 'region-select',\n      autoFocus: true,\n      backspaceRemovesValue: false,\n      components: {\n        DropdownIndicator: () => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"region-select-more\",\n          onMouseUp: this.toggleCountryOnly,\n          onTouchEnd: this.toggleCountryOnly,\n          onMouseEnter: () => this.props.ReactTooltip.show(this.regionSelectMore),\n          onMouseLeave: () => this.props.ReactTooltip.hide(this.regionSelectMore),\n          ref: ref => this.regionSelectMore = ref,\n          \"data-tip\": countryOnly ? i18n.MORE_REGIONS_HELP_TEXT[this.props.lang] : i18n.LESS_REGIONS_HELP_TEXT[this.props.lang],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(MoreIcon, {\n          size: 16,\n          color: this.props.darkMode ? 'var(--primary-color-4)' : 'var(--primary-color-5)',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 37\n          }\n        })),\n        IndicatorSeparator: null\n      },\n      controlShouldRenderValue: false,\n      hideSelectedOptions: false,\n      isClearable: false,\n      menuIsOpen: true,\n      onChange: this.onSelectChange,\n      options: this.state.options,\n      placeholder: `${i18n.SEARCH[this.props.lang]} ...... `,\n      styles: this.props.darkMode ? selectStylesDark : selectStyles,\n      tabSelectsValue: false,\n      value: value,\n      noOptionsMessage: () => i18n.NO_RESULT[this.props.lang],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, this.displayDate()));\n  }\n\n}","map":{"version":3,"sources":["/Users/jonchristie/Downloads/covid19-master/src/components/Region.js"],"names":["React","Component","Select","GoFold","GoUnfold","GoSearch","RegionDropdown","RegionSelectOption","formatDate","getDataFromRegion","str","i18n","selectStyles","control","provided","state","minWidth","marginBottom","borderRadius","menu","backgroundColor","boxShadow","cursor","option","textAlign","fontSize","isFocused","isSelected","color","selectStylesDark","Region","isOpen","value","options","countryOnly","toggleOpen","setState","toggleCountryOnly","props","ReactTooltip","hide","regionSelectMore","onSelectChange","selected","regionToggle","region","generateOptions","root","data","lang","date","metric","englishRoot","Array","length","keys","map","i","slice","regionList","ENGLISH","regionData","Object","filter","d","includes","sort","a","b","aCount","bCount","forEach","push","join","label","childData","showSubRegions","CHINA_ZH","FRANCE_ZH","UK_ZH","NETHERLANDS_ZH","DENMARK_ZH","displayRegionName","currentRegion","Set","replace","INTL_CONVEYANCE_ZH","MAINLAND_CHINA_ZH","METRO_FRANCE_ZH","OVERSEAS_FRANCE_ZH","OVERSEAS_TERRITORIES_ZH","CROWN_DEPENDENCIES_ZH","englishRegion","reverse","CHINA_EN","MAINLAND_CHINA_EN","METRO_FRANCE_EN","FRANCE_EN","OVERSEAS_FRANCE_EN","INTL_CONVEYANCE_EN","US_EN","UK_EN","OVERSEAS_TERRITORIES_EN","UK_ABBR_EN","CROWN_DEPENDENCIES_EN","displayDate","showTooltip","elem","document","querySelector","offsetWidth","scrollWidth","componentDidMount","GLOBAL_ZH","GLOBAL_EN","componentDidUpdate","prevProps","prevState","rebuild","render","MoreIcon","transform","DropdownIndicator","show","ref","MORE_REGIONS_HELP_TEXT","LESS_REGIONS_HELP_TEXT","darkMode","IndicatorSeparator","SEARCH","NO_RESULT"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Select from 'react-select'\nimport { GoFold, GoUnfold, GoSearch } from 'react-icons/go'\nimport RegionDropdown from './RegionDropdown'\nimport RegionSelectOption from './RegionSelectOption'\nimport { formatDate, getDataFromRegion } from '../utils/utils'\nimport * as str from '../utils/strings'\nimport i18n from '../data/i18n.yml'\n\nconst selectStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        minWidth: 240,\n        marginBottom: 8,\n        borderRadius: 30\n    }),\n    menu: () => ({\n        backgroundColor: 'white',\n        boxShadow: '0 0 0 1px hsla(218, 50%, 10%, 0.1), 0 4px 11px hsla(218, 50%, 10%, 0.1)',\n        cursor: 'pointer'\n    }),\n    option: (provided, state) => ({\n        ...provided,\n        textAlign: 'left',\n        fontSize: 12,\n        backgroundColor: state.isFocused ? 'var(--primary-color-5)' : state.isSelected ? '#eee' : null,\n        color: state.isFocused ? '#fff' : '#000',\n        cursor: 'pointer'\n    })\n}\n\nconst selectStylesDark = {\n    control: (provided, state) => ({\n        ...provided,\n        minWidth: 240,\n        marginBottom: 8,\n        borderRadius: 30\n    }),\n    menu: () => ({\n        backgroundColor: 'var(--dark-grey)',\n        boxShadow: '0 0 0 1px hsla(218, 50%, 10%, 0.1), 0 4px 11px hsla(218, 50%, 10%, 0.1)',\n        cursor: 'pointer'\n    }),\n    option: (provided, state) => ({\n        ...provided,\n        textAlign: 'left',\n        fontSize: 12,\n        backgroundColor: state.isFocused ? 'var(--primary-color-4)' : state.isSelected ? '#777' : null,\n        color: 'var(--lighter-grey)',\n        cursor: 'pointer'\n    })\n}\n\nexport default class Region extends Component {\n    state = {\n        isOpen: false,\n        //value: undefined,\n        value: 'en',\n        options: [],\n        countryOnly: true\n    }\n\n    componentDidMount() {\n        const options = this.generateOptions([])\n        this.setState({ options, value: { value: this.props.lang === 'zh' ? str.GLOBAL_ZH : str.GLOBAL_EN } })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevProps.lang !== this.props.lang ||\n            prevProps.metric !== this.props.metric ||\n            prevProps.date !== this.props.date ||\n            prevState.countryOnly !== this.state.countryOnly\n        ) {\n            const options = this.generateOptions([])\n            this.setState({ options })\n        }\n\n        if (prevState.isOpen !== this.state.isOpen || prevState.countryOnly !== this.state.countryOnly) {\n            this.props.ReactTooltip.rebuild()\n        }\n\n        if (prevProps.currentRegion !== this.props.currentRegion) {\n            const { data, currentRegion, lang } = this.props\n            const englishRegion = [ ...Array(currentRegion.length).keys() ]\n                .map((i) => currentRegion.slice(0, i + 1))\n                .map((regionList) => getDataFromRegion(data, regionList).ENGLISH)\n            this.setState({ value: { value: lang === 'zh' ? currentRegion.join('') : englishRegion.join('') } })\n        }\n    }\n\n    toggleOpen = () => {\n        this.setState((state) => ({ isOpen: !state.isOpen }))\n    }\n\n    toggleCountryOnly = () => {\n        this.props.ReactTooltip.hide(this.regionSelectMore)\n        this.setState({\n            countryOnly: !this.state.countryOnly\n        })\n    }\n\n    onSelectChange = (selected) => {\n        this.toggleOpen()\n        this.setState({ value: selected })\n        this.props.regionToggle(selected.region)\n    }\n\n    generateOptions = (root) => {\n        const { data, lang, date, metric } = this.props\n        const englishRoot = [ ...Array(root.length).keys() ]\n            .map((i) => root.slice(0, i + 1))\n            .map((regionList) => getDataFromRegion(data, regionList).ENGLISH)\n\n        let options = []\n        const regionData = getDataFromRegion(data, root)\n        Object.keys(regionData)\n            .filter((d) => ![ 'confirmedCount', 'deadCount', 'curedCount', 'ENGLISH' ].includes(d))\n            .sort((a, b) => {\n                const aCount = regionData[a][metric][date] ? regionData[a][metric][date] : 0\n                const bCount = regionData[b][metric][date] ? regionData[b][metric][date] : 0\n                return aCount > bCount ? -1 : 1\n            })\n            .forEach((d) => {\n                options.push({\n                    value: lang === 'zh' ? [ ...root, d ].join('') : [ ...englishRoot, regionData[d].ENGLISH ].join(''),\n                    region: [ ...root, d ],\n                    label: (\n                        <RegionSelectOption\n                            region={lang === 'zh' ? [ ...root, d ] : [ ...englishRoot, regionData[d].ENGLISH ]}\n                            data={regionData[d]}\n                            date={date}\n                            metric={metric}\n                        />\n                    )\n                })\n                const childData = getDataFromRegion(data, [ ...root, d ])\n                const showSubRegions = [ str.CHINA_ZH, str.FRANCE_ZH, str.UK_ZH, str.NETHERLANDS_ZH, str.DENMARK_ZH ]\n                if (\n                    Object.keys(childData).length > 4 &&\n                    (!this.state.countryOnly || (root.length === 0 && showSubRegions.includes(d)))\n                )\n                    options = [ ...options, ...this.generateOptions([ ...root, d ]) ]\n            })\n\n        return options\n    }\n\n    displayRegionName = () => {\n        const { currentRegion, data, lang } = this.props\n\n        // remove duplicates in case same region occurs at different level (e.g. Japan)\n        let region = [ ...new Set(currentRegion) ]\n\n        if (lang === 'zh') {\n            region = region.join('')\n            // China\n            region = region !== str.CHINA_ZH ? region.replace(str.CHINA_ZH, '') : str.CHINA_ZH\n            region =\n                region !== str.INTL_CONVEYANCE_ZH ? region.replace(str.INTL_CONVEYANCE_ZH, '') : str.INTL_CONVEYANCE_ZH\n            region =\n                region !== str.MAINLAND_CHINA_ZH ? region.replace(str.MAINLAND_CHINA_ZH, '') : str.MAINLAND_CHINA_ZH\n\n            // France\n            region =\n                region !== `${str.FRANCE_ZH}${str.METRO_FRANCE_ZH}`\n                    ? region.replace(str.METRO_FRANCE_ZH, '')\n                    : str.METRO_FRANCE_ZH\n            region =\n                region !== `${str.FRANCE_ZH}${str.OVERSEAS_FRANCE_ZH}`\n                    ? region.replace(`${str.FRANCE_ZH}${str.OVERSEAS_FRANCE_ZH}`, '')\n                    : `${str.FRANCE_ZH}${str.OVERSEAS_FRANCE_ZH}`\n\n            // UK\n            region =\n                region !== `${str.UK_ZH}${str.OVERSEAS_TERRITORIES_ZH}`\n                    ? region.replace(`${str.UK_ZH}${str.OVERSEAS_TERRITORIES_ZH}`, '')\n                    : `${str.UK_ZH}${str.OVERSEAS_TERRITORIES_ZH}`\n            region =\n                region !== `${str.UK_ZH}${str.CROWN_DEPENDENCIES_ZH}`\n                    ? region.replace(`${str.UK_ZH}${str.CROWN_DEPENDENCIES_ZH}`, '')\n                    : `${str.UK_ZH}${str.CROWN_DEPENDENCIES_ZH}`\n\n            return region\n        } else {\n            if (data == null) return\n            let englishRegion = [ ...Array(currentRegion.length).keys() ]\n                .map((i) => currentRegion.slice(0, i + 1))\n                .map((regionList) => getDataFromRegion(data, regionList).ENGLISH)\n            englishRegion = [ ...new Set(englishRegion) ]\n            region = englishRegion.reverse().join(', ')\n\n            // China\n            region = region !== str.CHINA_EN ? region.replace(`, ${str.CHINA_EN}`, '') : str.CHINA_EN\n            region =\n                region !== str.MAINLAND_CHINA_EN\n                    ? region.replace(`, ${str.MAINLAND_CHINA_EN}`, '')\n                    : str.MAINLAND_CHINA_EN\n\n            // France\n            region =\n                region !== `${str.METRO_FRANCE_EN}, ${str.FRANCE_EN}`\n                    ? region.replace(`, ${str.METRO_FRANCE_EN}`, '')\n                    : str.METRO_FRANCE_EN\n            region =\n                region !== `${str.OVERSEAS_FRANCE_EN}, ${str.FRANCE_EN}`\n                    ? region.replace(`, ${str.OVERSEAS_FRANCE_EN}, ${str.FRANCE_EN}`, '')\n                    : str.OVERSEAS_FRANCE_EN\n\n            // Cruise ship\n            region =\n                region !== str.INTL_CONVEYANCE_EN\n                    ? region.replace(`, ${str.INTL_CONVEYANCE_EN}`, '')\n                    : str.INTL_CONVEYANCE_EN\n\n            // USA\n            region = region !== str.US_EN ? region.replace(str.US_EN, 'US') : str.US_EN\n\n            // UK\n            region = region !== str.UK_EN ? region.replace(str.UK_EN, 'UK') : str.UK_EN\n            region =\n                region !== `${str.OVERSEAS_TERRITORIES_EN}, ${str.UK_ABBR_EN}`\n                    ? region.replace(`, ${str.OVERSEAS_TERRITORIES_EN}, ${str.UK_ABBR_EN}`, '')\n                    : str.OVERSEAS_TERRITORIES_EN\n            region =\n                region !== `${str.CROWN_DEPENDENCIES_EN}, ${str.UK_ABBR_EN}`\n                    ? region.replace(`, ${str.CROWN_DEPENDENCIES_EN}, ${str.UK_ABBR_EN}`, '')\n                    : str.CROWN_DEPENDENCIES_EN\n\n            return region\n        }\n    }\n\n    displayDate = () => {\n        const { lang, date } = this.props\n        return formatDate(date, lang)\n    }\n\n    showTooltip = () => {\n        // show tooltip only when text is overflow\n        const elem = document.querySelector(`.current-region div`)\n        if (elem == null) return true\n        return elem.offsetWidth === elem.scrollWidth\n    }\n\n    render() {\n        const { isOpen, value, countryOnly } = this.state\n        if (this.props.data == null) return\n\n        const MoreIcon = countryOnly ? GoUnfold : GoFold\n\n        return (\n            <div className=\"current-region-wrap\">\n                <RegionDropdown\n                    isOpen={isOpen}\n                    onClose={this.toggleOpen}\n                    target={\n                        <div className=\"current-region\" onClick={this.toggleOpen}>\n                            <div\n                                data-tip={this.displayRegionName()}\n                                data-tip-disable={this.showTooltip()}\n                                data-place={'bottom'}\n                            >\n                                {this.displayRegionName()}\n                            </div>\n                            <GoSearch size={18} className=\"dropdown-arrow\" style={{ transform: 'translateY(1px)' }} />\n                        </div>\n                    }\n                >\n                    <Select\n                        classNamePrefix={'region-select'}\n                        autoFocus\n                        backspaceRemovesValue={false}\n                        components={{\n                            DropdownIndicator: () => (\n                                <span\n                                    className=\"region-select-more\"\n                                    onMouseUp={this.toggleCountryOnly}\n                                    onTouchEnd={this.toggleCountryOnly}\n                                    onMouseEnter={() => this.props.ReactTooltip.show(this.regionSelectMore)}\n                                    onMouseLeave={() => this.props.ReactTooltip.hide(this.regionSelectMore)}\n                                    ref={(ref) => (this.regionSelectMore = ref)}\n                                    data-tip={\n                                        countryOnly ? (\n                                            i18n.MORE_REGIONS_HELP_TEXT[this.props.lang]\n                                        ) : (\n                                            i18n.LESS_REGIONS_HELP_TEXT[this.props.lang]\n                                        )\n                                    }\n                                >\n                                    <MoreIcon\n                                        size={16}\n                                        color={\n                                            this.props.darkMode ? 'var(--primary-color-4)' : 'var(--primary-color-5)'\n                                        }\n                                    />\n                                </span>\n                            ),\n                            IndicatorSeparator: null\n                        }}\n                        controlShouldRenderValue={false}\n                        hideSelectedOptions={false}\n                        isClearable={false}\n                        menuIsOpen\n                        onChange={this.onSelectChange}\n                        options={this.state.options}\n                        placeholder={`${i18n.SEARCH[this.props.lang]} ...... `}\n                        styles={this.props.darkMode ? selectStylesDark : selectStyles}\n                        tabSelectsValue={false}\n                        value={value}\n                        noOptionsMessage={() => i18n.NO_RESULT[this.props.lang]}\n                    />\n                </RegionDropdown>\n                <div className=\"current-date\">{this.displayDate()}</div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}