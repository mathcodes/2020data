{"ast":null,"code":"var _jsxFileName = \"/Users/jonchristie/Desktop/2020data/src/components/PlotNavBar.js\";\nimport React, { Component } from 'react';\nimport RadioButton from './RadioButton';\nimport i18n from '../data/i18n.yml';\nimport { plotTypes, plotSpecificTypes } from '../utils/plot_types';\nexport default class PlotNavBar extends Component {\n  render() {\n    const {\n      plotType,\n      plotSpecificType,\n      lang,\n      onSelect,\n      plotDetails,\n      scale,\n      scaleToggle\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-nav-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, plotTypes[plotType].statsChange && /*#__PURE__*/React.createElement(RadioButton, {\n      title: i18n.TYPE[lang],\n      texts: {\n        cumulative: i18n.CUMULATIVE[lang],\n        daily: i18n.DAILY[lang]\n      },\n      selected: plotDetails.stats,\n      onSelect: s => onSelect('stats', s),\n      alwaysShow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    }), (plotType === 'plot_fatality_line' || plotType === 'plot_subregion_fatality') && /*#__PURE__*/React.createElement(RadioButton, {\n      title: i18n.Y_AXIS[lang],\n      texts: {\n        rate: i18n.RATE[lang],\n        deaths: i18n.DEATH_NUMBER2[lang]\n      },\n      selected: plotDetails.fatalityLine,\n      onSelect: s => onSelect('fatalityLine', s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }), (plotType === 'plot_fatality_line' || plotType === 'plot_subregion_fatality') && /*#__PURE__*/React.createElement(RadioButton, {\n      title: i18n.COMPARISONS[lang],\n      texts: {\n        show: i18n.SHOW[lang],\n        hide: i18n.HIDE[lang]\n      },\n      selected: plotDetails.diseaseComparison,\n      onSelect: s => onSelect('diseaseComparison', s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }), plotType === 'plot_subregion_shifted' && /*#__PURE__*/React.createElement(RadioButton, {\n      title: i18n.DAY_0[lang],\n      texts: {\n        10: i18n.TEN_CASES[lang],\n        100: i18n.HUNDRED_CASES[lang]\n      },\n      selected: plotDetails.shifted,\n      onSelect: s => onSelect('shifted', s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), plotTypes[plotType].scaleChange && /*#__PURE__*/React.createElement(RadioButton, {\n      title: i18n.SCALE[lang],\n      texts: {\n        linear: i18n.LINEAR_SCALE[lang],\n        log: i18n.LOG_SCALE[lang]\n      },\n      selected: scale,\n      onSelect: s => scaleToggle(s),\n      disabled: plotSpecificTypes[plotSpecificType].log ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), plotSpecificTypes[plotSpecificType].type === 'stream' && /*#__PURE__*/React.createElement(RadioButton, {\n      title: i18n.Y_AXIS[lang],\n      texts: {\n        expand: i18n.PERCENT[lang],\n        silhouette: i18n.CASE_NUMBERS[lang]\n      },\n      selected: plotDetails.stream,\n      onSelect: s => onSelect('stream', s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), plotType === 'plot_fatality_recovery' && /*#__PURE__*/React.createElement(RadioButton, {\n      title: i18n.RECOVERY_RATE[lang],\n      texts: {\n        show: i18n.SHOW[lang],\n        hide: i18n.HIDE[lang]\n      },\n      selected: plotDetails.recoveryRate,\n      onSelect: s => onSelect('recoveryRate', s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), plotTypes[plotType].movingAverage && /*#__PURE__*/React.createElement(RadioButton, {\n      title: i18n.MOVING_AVERAGE[lang],\n      texts: {\n        '1d': 'â€”',\n        '3d': i18n.THREE_DAYS[lang],\n        '5d': i18n.FIVE_DAYS[lang]\n      },\n      selected: plotDetails.movingAverage,\n      onSelect: s => onSelect('movingAverage', s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jonchristie/Desktop/2020data/src/components/PlotNavBar.js"],"names":["React","Component","RadioButton","i18n","plotTypes","plotSpecificTypes","PlotNavBar","render","plotType","plotSpecificType","lang","onSelect","plotDetails","scale","scaleToggle","props","statsChange","TYPE","cumulative","CUMULATIVE","daily","DAILY","stats","s","Y_AXIS","rate","RATE","deaths","DEATH_NUMBER2","fatalityLine","COMPARISONS","show","SHOW","hide","HIDE","diseaseComparison","DAY_0","TEN_CASES","HUNDRED_CASES","shifted","scaleChange","SCALE","linear","LINEAR_SCALE","log","LOG_SCALE","type","expand","PERCENT","silhouette","CASE_NUMBERS","stream","RECOVERY_RATE","recoveryRate","movingAverage","MOVING_AVERAGE","THREE_DAYS","FIVE_DAYS"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport RadioButton from './RadioButton'\nimport i18n from '../data/i18n.yml'\nimport { plotTypes, plotSpecificTypes } from '../utils/plot_types'\n\nexport default class PlotNavBar extends Component {\n    render() {\n        const { plotType, plotSpecificType, lang, onSelect, plotDetails, scale, scaleToggle } = this.props\n        return (\n            <div className=\"plot-nav-bar\">\n                {plotTypes[plotType].statsChange && (\n                    <RadioButton\n                        title={i18n.TYPE[lang]}\n                        texts={{ cumulative: i18n.CUMULATIVE[lang], daily: i18n.DAILY[lang] }}\n                        selected={plotDetails.stats}\n                        onSelect={(s) => onSelect('stats', s)}\n                        alwaysShow={true}\n                    />\n                )}\n                {(plotType === 'plot_fatality_line' || plotType === 'plot_subregion_fatality') && (\n                    <RadioButton\n                        title={i18n.Y_AXIS[lang]}\n                        texts={{ rate: i18n.RATE[lang], deaths: i18n.DEATH_NUMBER2[lang] }}\n                        selected={plotDetails.fatalityLine}\n                        onSelect={(s) => onSelect('fatalityLine', s)}\n                    />\n                )}\n                {(plotType === 'plot_fatality_line' || plotType === 'plot_subregion_fatality') && (\n                    <RadioButton\n                        title={i18n.COMPARISONS[lang]}\n                        texts={{ show: i18n.SHOW[lang], hide: i18n.HIDE[lang] }}\n                        selected={plotDetails.diseaseComparison}\n                        onSelect={(s) => onSelect('diseaseComparison', s)}\n                    />\n                )}\n                {plotType === 'plot_subregion_shifted' && (\n                    <RadioButton\n                        title={i18n.DAY_0[lang]}\n                        texts={{ 10: i18n.TEN_CASES[lang], 100: i18n.HUNDRED_CASES[lang] }}\n                        selected={plotDetails.shifted}\n                        onSelect={(s) => onSelect('shifted', s)}\n                    />\n                )}\n                {plotTypes[plotType].scaleChange && (\n                    <RadioButton\n                        title={i18n.SCALE[lang]}\n                        texts={{ linear: i18n.LINEAR_SCALE[lang], log: i18n.LOG_SCALE[lang] }}\n                        selected={scale}\n                        onSelect={(s) => scaleToggle(s)}\n                        disabled={plotSpecificTypes[plotSpecificType].log ? false : true}\n                    />\n                )}\n                {plotSpecificTypes[plotSpecificType].type === 'stream' && (\n                    <RadioButton\n                        title={i18n.Y_AXIS[lang]}\n                        texts={{ expand: i18n.PERCENT[lang], silhouette: i18n.CASE_NUMBERS[lang] }}\n                        selected={plotDetails.stream}\n                        onSelect={(s) => onSelect('stream', s)}\n                    />\n                )}\n                {plotType === 'plot_fatality_recovery' && (\n                    <RadioButton\n                        title={i18n.RECOVERY_RATE[lang]}\n                        texts={{ show: i18n.SHOW[lang], hide: i18n.HIDE[lang] }}\n                        selected={plotDetails.recoveryRate}\n                        onSelect={(s) => onSelect('recoveryRate', s)}\n                    />\n                )}\n                {plotTypes[plotType].movingAverage && (\n                    <RadioButton\n                        title={i18n.MOVING_AVERAGE[lang]}\n                        texts={{ '1d': 'â€”', '3d': i18n.THREE_DAYS[lang], '5d': i18n.FIVE_DAYS[lang] }}\n                        selected={plotDetails.movingAverage}\n                        onSelect={(s) => onSelect('movingAverage', s)}\n                    />\n                )}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}