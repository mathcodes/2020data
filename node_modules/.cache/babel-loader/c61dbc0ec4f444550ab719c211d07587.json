{"ast":null,"code":"import _toConsumableArray from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{AiFillCaretRight,AiFillCaretDown}from'react-icons/ai';import RawTable from'./RawTable';import{generateTreeData}from'../utils/utils';import*as str from'../utils/strings';import i18n from'../data/i18n.yml';var Table=/*#__PURE__*/function(_Component){_inherits(Table,_Component);var _super=_createSuper(Table);function Table(){var _this;_classCallCheck(this,Table);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onRowClick=function(row){_this.props.regionToggle(row.original.region.split('.'));};_this.highlightCurrentRegion=function(){document.querySelectorAll('.data-table tr').forEach(function(x){return x.classList.remove('current');});// hack\nsetTimeout(function(){var elem=document.getElementById(\"table-\".concat(_this.props.currentRegion.join('.')));var tbodyElem=document.querySelector('.data-table tbody');// scroll into view if the row is not visible\nif(elem!=null&&tbodyElem!=null){elem.classList.add('current');var bounding=elem.getBoundingClientRect();var tableBounding=tbodyElem.getBoundingClientRect();var isInViewPort=bounding.top>=tableBounding.top&&bounding.bottom<=tableBounding.bottom;if(!isInViewPort)tbodyElem.scrollTop=elem.offsetTop-tbodyElem.offsetTop;}},200);};_this.getInitialSate=function(tableData){var _this$props=_this.props,currentRegion=_this$props.currentRegion,playing=_this$props.playing;if(currentRegion[0]===str.GLOBAL_ZH&&playing)return{};var indices=[];currentRegion.slice(0,currentRegion.length-1).forEach(function(r){var regionData=indices.reduce(function(s,x){return Array.isArray(s)?s[x]:s.subRows[x];},tableData);var subregions=Array.isArray(regionData)?regionData:regionData.subRows;var newIdx=subregions.findIndex(function(x){return x.name===r;});indices.push(newIdx);});var expanded=indices.map(function(x,i){return indices.slice(0,i+1).join('.');}).reduce(function(s,x){s[x]=true;return s;},{});return{expanded:expanded};};return _this;}_createClass(Table,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.currentRegion.join('.')!==this.props.currentRegion.join('.'))this.highlightCurrentRegion();}},{key:\"componentDidMount\",value:function componentDidMount(){this.highlightCurrentRegion();}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps){return nextProps.lang!==this.props.lang||nextProps.date!==this.props.date||nextProps.currentRegion!==this.props.currentRegion||nextProps.fullTree!==this.props.fullTree;}},{key:\"render\",value:function render(){var _this$props2=this.props,data=_this$props2.data,lang=_this$props2.lang,date=_this$props2.date,fullTree=_this$props2.fullTree;if(data==null)return/*#__PURE__*/React.createElement(\"div\",null);var tableData=generateTreeData(data,date,lang,false,'subRows','confirmedCount',str.GLOBAL_ZH,fullTree);var columns=[{// Build our expander column\nid:'expander',// Make sure it has an ID\nHeader:function Header(_ref){var getToggleAllRowsExpandedProps=_ref.getToggleAllRowsExpandedProps,isAllRowsExpanded=_ref.isAllRowsExpanded;return/*#__PURE__*/React.createElement(\"span\",getToggleAllRowsExpandedProps(),isAllRowsExpanded?/*#__PURE__*/React.createElement(AiFillCaretDown,{size:14}):/*#__PURE__*/React.createElement(AiFillCaretRight,{size:14}));},Cell:function Cell(_ref2){var row=_ref2.row;return(// Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n// to build the toggle for expanding a row\nrow.canExpand?/*#__PURE__*/React.createElement(\"span\",row.getToggleRowExpandedProps({style:{// We can even use the row.depth property\n// and paddingLeft to indicate the depth\n// of the row\npaddingLeft:0}}),row.isExpanded?/*#__PURE__*/React.createElement(AiFillCaretDown,{size:14}):/*#__PURE__*/React.createElement(AiFillCaretRight,{size:14})):null);}},{id:'table-region',Header:i18n.REGION[lang],Cell:function Cell(_ref3){var row=_ref3.row;return/*#__PURE__*/React.createElement(\"span\",null,\"\".concat(_toConsumableArray(Array(row.depth+1).keys()).map(function(x){return'ã€€';}).join('')).concat(row.original.displayName,\"\\xA0\\xA0\"));},accessor:'displayName'},{id:'table-confirmed',Header:i18n.CONFIRMED[lang],Cell:function Cell(_ref4){var row=_ref4.row;return!isNaN(row.original.confirmedCount)?row.original.confirmedCount:str.EMPTY;},accessor:'confirmedCount'},{id:'table-deaths',Header:i18n.DEATHS[lang],Cell:function Cell(_ref5){var row=_ref5.row;return!isNaN(row.original.deadCount)?row.original.deadCount:str.EMPTY;},accessor:'deadCount'},{id:'table-recovery',Header:i18n.RECOVERED[lang],Cell:function Cell(_ref6){var row=_ref6.row;return!isNaN(row.original.curedCount)?row.original.curedCount:str.EMPTY;},accessor:'curedCount'}];if(fullTree)columns=[].concat(_toConsumableArray(columns),[{id:'table-active',Header:i18n.ACTIVE[lang],Cell:function Cell(_ref7){var row=_ref7.row;return!isNaN(row.original.active)?row.original.active:str.EMPTY;},accessor:'active'},{id:'table-newConfirmed',Header:i18n.NEW_CONFIRMED[lang],Cell:function Cell(_ref8){var row=_ref8.row;return!isNaN(row.original.newConfirmed)?row.original.newConfirmed:str.EMPTY;},accessor:'newConfirmed'},{id:'table-newDead',Header:i18n.NEW_DEATHS[lang],Cell:function Cell(_ref9){var row=_ref9.row;return!isNaN(row.original.newDead)?row.original.newDead:str.EMPTY;},accessor:'newDead'},{id:'table-fatalityRate',Header:i18n.FATALITY_RATE[lang],Cell:function Cell(_ref10){var row=_ref10.row;return!isNaN(row.original.fatalityRate)?(row.original.fatalityRate*100).toFixed(2)+'%':str.EMPTY;},accessor:'fatalityRate',sortType:'basic'},{id:'table-recoveryRate',Header:i18n.RECOVERY_RATE[lang],Cell:function Cell(_ref11){var row=_ref11.row;return!isNaN(row.original.recoveryRate)?(row.original.recoveryRate*100).toFixed(2)+'%':str.EMPTY;},accessor:'recoveryRate',sortType:'basic'}]);var initialState=this.getInitialSate(tableData);return/*#__PURE__*/React.createElement(\"div\",{style:{height:'100%'}},/*#__PURE__*/React.createElement(RawTable,{columns:columns,data:tableData,initialState:initialState,onRowClick:this.onRowClick,filterPlaceholder:\"\".concat(i18n.SEARCH[lang],\" ...\")}));}}]);return Table;}(Component);export{Table as default};","map":{"version":3,"sources":["/Users/jonchristie/Desktop/2020data/src/components/Table.js"],"names":["React","Component","AiFillCaretRight","AiFillCaretDown","RawTable","generateTreeData","str","i18n","Table","onRowClick","row","props","regionToggle","original","region","split","highlightCurrentRegion","document","querySelectorAll","forEach","x","classList","remove","setTimeout","elem","getElementById","currentRegion","join","tbodyElem","querySelector","add","bounding","getBoundingClientRect","tableBounding","isInViewPort","top","bottom","scrollTop","offsetTop","getInitialSate","tableData","playing","GLOBAL_ZH","indices","slice","length","r","regionData","reduce","s","Array","isArray","subRows","subregions","newIdx","findIndex","name","push","expanded","map","i","prevProps","nextProps","lang","date","fullTree","data","columns","id","Header","getToggleAllRowsExpandedProps","isAllRowsExpanded","Cell","canExpand","getToggleRowExpandedProps","style","paddingLeft","isExpanded","REGION","depth","keys","displayName","accessor","CONFIRMED","isNaN","confirmedCount","EMPTY","DEATHS","deadCount","RECOVERED","curedCount","ACTIVE","active","NEW_CONFIRMED","newConfirmed","NEW_DEATHS","newDead","FATALITY_RATE","fatalityRate","toFixed","sortType","RECOVERY_RATE","recoveryRate","initialState","height","SEARCH"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { AiFillCaretRight, AiFillCaretDown } from 'react-icons/ai'\nimport RawTable from './RawTable'\nimport { generateTreeData } from '../utils/utils'\nimport * as str from '../utils/strings'\nimport i18n from '../data/i18n.yml'\n\nexport default class Table extends Component {\n    onRowClick = (row) => {\n        this.props.regionToggle(row.original.region.split('.'))\n    }\n\n    highlightCurrentRegion = () => {\n        document.querySelectorAll('.data-table tr').forEach((x) => x.classList.remove('current'))\n        // hack\n        setTimeout(() => {\n            const elem = document.getElementById(`table-${this.props.currentRegion.join('.')}`)\n            const tbodyElem = document.querySelector('.data-table tbody')\n\n            // scroll into view if the row is not visible\n            if (elem != null && tbodyElem != null) {\n                elem.classList.add('current')\n                const bounding = elem.getBoundingClientRect()\n                const tableBounding = tbodyElem.getBoundingClientRect()\n                const isInViewPort = bounding.top >= tableBounding.top && bounding.bottom <= tableBounding.bottom\n\n                if (!isInViewPort) tbodyElem.scrollTop = elem.offsetTop - tbodyElem.offsetTop\n            }\n        }, 200)\n    }\n\n    getInitialSate = (tableData) => {\n        const { currentRegion, playing } = this.props\n        if (currentRegion[0] === str.GLOBAL_ZH && playing) return {}\n\n        let indices = []\n        currentRegion.slice(0, currentRegion.length - 1).forEach((r) => {\n            const regionData = indices.reduce((s, x) => (Array.isArray(s) ? s[x] : s.subRows[x]), tableData)\n            const subregions = Array.isArray(regionData) ? regionData : regionData.subRows\n            const newIdx = subregions.findIndex((x) => x.name === r)\n            indices.push(newIdx)\n        })\n        const expanded = indices.map((x, i) => indices.slice(0, i + 1).join('.')).reduce((s, x) => {\n            s[x] = true\n            return s\n        }, {})\n\n        return {\n            expanded\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRegion.join('.') !== this.props.currentRegion.join('.')) this.highlightCurrentRegion()\n    }\n\n    componentDidMount() {\n        this.highlightCurrentRegion()\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return (\n            nextProps.lang !== this.props.lang ||\n            nextProps.date !== this.props.date ||\n            nextProps.currentRegion !== this.props.currentRegion ||\n            nextProps.fullTree !== this.props.fullTree\n        )\n    }\n\n    render() {\n        const { data, lang, date, fullTree } = this.props\n        if (data == null) return <div />\n        const tableData = generateTreeData(\n            data,\n            date,\n            lang,\n            false,\n            'subRows',\n            'confirmedCount',\n            str.GLOBAL_ZH,\n            fullTree\n        )\n\n        let columns = [\n            {\n                // Build our expander column\n                id: 'expander', // Make sure it has an ID\n                Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n                    <span {...getToggleAllRowsExpandedProps()}>\n                        {isAllRowsExpanded ? <AiFillCaretDown size={14} /> : <AiFillCaretRight size={14} />}\n                    </span>\n                ),\n                Cell: ({ row }) =>\n                    // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n                    // to build the toggle for expanding a row\n                    row.canExpand ? (\n                        <span\n                            {...row.getToggleRowExpandedProps({\n                                style: {\n                                    // We can even use the row.depth property\n                                    // and paddingLeft to indicate the depth\n                                    // of the row\n                                    paddingLeft: 0\n                                }\n                            })}\n                        >\n                            {row.isExpanded ? <AiFillCaretDown size={14} /> : <AiFillCaretRight size={14} />}\n                        </span>\n                    ) : null\n            },\n            {\n                id: 'table-region',\n                Header: i18n.REGION[lang],\n                Cell: ({ row }) => {\n                    return (\n                        <span>{`${[ ...Array(row.depth + 1).keys() ].map((x) => 'ã€€').join('')}${row.original\n                            .displayName}\\u00a0\\u00a0`}</span>\n                    )\n                },\n                accessor: 'displayName'\n            },\n            {\n                id: 'table-confirmed',\n                Header: i18n.CONFIRMED[lang],\n                Cell: ({ row }) => (!isNaN(row.original.confirmedCount) ? row.original.confirmedCount : str.EMPTY),\n                accessor: 'confirmedCount'\n            },\n            {\n                id: 'table-deaths',\n                Header: i18n.DEATHS[lang],\n                Cell: ({ row }) => (!isNaN(row.original.deadCount) ? row.original.deadCount : str.EMPTY),\n                accessor: 'deadCount'\n            },\n            {\n                id: 'table-recovery',\n                Header: i18n.RECOVERED[lang],\n                Cell: ({ row }) => (!isNaN(row.original.curedCount) ? row.original.curedCount : str.EMPTY),\n                accessor: 'curedCount'\n            }\n        ]\n\n        if (fullTree)\n            columns = [\n                ...columns,\n                ...[\n                    {\n                        id: 'table-active',\n                        Header: i18n.ACTIVE[lang],\n                        Cell: ({ row }) => (!isNaN(row.original.active) ? row.original.active : str.EMPTY),\n                        accessor: 'active'\n                    },\n                    {\n                        id: 'table-newConfirmed',\n                        Header: i18n.NEW_CONFIRMED[lang],\n                        Cell: ({ row }) => (!isNaN(row.original.newConfirmed) ? row.original.newConfirmed : str.EMPTY),\n                        accessor: 'newConfirmed'\n                    },\n                    {\n                        id: 'table-newDead',\n                        Header: i18n.NEW_DEATHS[lang],\n                        Cell: ({ row }) => (!isNaN(row.original.newDead) ? row.original.newDead : str.EMPTY),\n                        accessor: 'newDead'\n                    },\n                    {\n                        id: 'table-fatalityRate',\n                        Header: i18n.FATALITY_RATE[lang],\n                        Cell: ({ row }) =>\n                            !isNaN(row.original.fatalityRate)\n                                ? (row.original.fatalityRate * 100).toFixed(2) + '%'\n                                : str.EMPTY,\n                        accessor: 'fatalityRate',\n                        sortType: 'basic'\n                    },\n                    {\n                        id: 'table-recoveryRate',\n                        Header: i18n.RECOVERY_RATE[lang],\n                        Cell: ({ row }) =>\n                            !isNaN(row.original.recoveryRate)\n                                ? (row.original.recoveryRate * 100).toFixed(2) + '%'\n                                : str.EMPTY,\n                        accessor: 'recoveryRate',\n                        sortType: 'basic'\n                    }\n                ]\n            ]\n\n        const initialState = this.getInitialSate(tableData)\n\n        return (\n            <div style={{ height: '100%' }}>\n                <RawTable\n                    columns={columns}\n                    data={tableData}\n                    initialState={initialState}\n                    onRowClick={this.onRowClick}\n                    filterPlaceholder={`${i18n.SEARCH[lang]} ...`}\n                />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}