{"ast":null,"code":"import _objectSpread from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{Container,Row,Col}from'reactstrap';import ReactTooltip from'react-tooltip';import{AiOutlineFullscreen,AiOutlineFullscreenExit}from'react-icons/ai';import Helmet from'react-helmet';import Measure from'react-measure';import'./App.css';import Map from'./Map';import MapNavBar from'./MapNavBar';import DateSlider from'./DateSlider';import AnimationController from'./AnimationController';import MainCounts from'./MainCounts';import Plot from'./Plot';import Tree from'./Tree';import NavBar from'./NavBar';import Loading from'./Loading';import Footer from'./Footer';import Region from'./Region';import TransmissionNetwork from'./TransmissionNetwork';import{ReactComponent as Icon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../covid19.svg\";import i18n from'../data/i18n.yml';import us_map from'../data/us_map.yml';import*as str from'../utils/strings';import{updateDarkMode,isoDate}from'../utils/utils';import{mapText}from'../utils/map_text';var defaultState={currentMap:'WORLD',metric:'confirmedCount',currentRegion:[str.GLOBAL_ZH],playing:false,scale:'linear',mapZoom:1,fullMap:false,fullPlot:false,fullTree:false};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state=_objectSpread({startDate:'2020-01-24',endDate:'2020-02-14',date:'2020-02-14',tempDate:'2020-02-14',plotDates:['2020-01-24','2020-02-14'],data:null,dataLoaded:false,lang:'en',darkMode:true,mapDimensions:{width:-1,height:-1},fullDimensions:{width:-1,height:-1},plotType:'plot_basic'},defaultState);_this.fetchData=function(){return fetch('data/all_minified.json').then(function(res){return res.json();}).then(function(res){var latest=Object.keys(res[str.GLOBAL_ZH].confirmedCount).pop();_this.setState({data:res,dataLoaded:true,date:latest,tempDate:latest,endDate:latest,plotDates:[_this.state.plotDates[0],latest]});_this.tooltipRebuild();});};_this.updateFullDimensions=function(){var width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;var height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;if(height<750||width<992){if(_this.state.fullMap)_this.setState({fullMap:false});if(_this.state.fullPlot)_this.setState({fullPlot:false});}_this.setState({fullDimensions:{height:Math.min(height-250,(width-200)*3/4),width:Math.min((height-250)*4/3,width-200)}});};_this.reset=function(){return _this.setState(_objectSpread(_objectSpread({},defaultState),{},{date:_this.state.endDate,tempDate:_this.state.endDate,plotDates:[_this.state.startDate,_this.state.endDate]}));};_this.mapToggle=function(newMap){return _this.setState({currentMap:newMap,// do not reset map zoom when switching between two China maps\nmapZoom:newMap===str.WORLD_MAP||_this.state.currentMap===str.WORLD_MAP?1:_this.state.mapZoom});};_this.metricToggle=function(newMetric){return _this.setState({metric:newMetric});};_this.regionToggle=function(newRegion){var mapChange=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var currentMap=_this.state.currentMap;_this.setState({currentRegion:newRegion});if(!mapChange)return;if(currentMap===str.TRANSMISSION)return;if(newRegion[0]===str.CHINA_ZH){if(newRegion.length>=4){_this.mapToggle(str.CHINA_MAP2);}else if(newRegion.length>=2&&newRegion[1]===str.HONGKONG_ZH){_this.mapToggle(str.HONGKONG_MAP);}else if(currentMap!==str.CHINA_MAP2){_this.mapToggle(str.CHINA_MAP1);}}else if(newRegion[0]===str.US_ZH){if(newRegion.length>=2&&newRegion[1]in us_map){_this.mapToggle(str.US_MAP2);}else{_this.mapToggle(str.US_MAP);}}else if(newRegion[0]===str.ITALY_ZH){if(newRegion.length>=3){_this.mapToggle(str.ITALY_MAP2);}else if(currentMap!==str.ITALY_MAP2){_this.mapToggle(str.ITALY_MAP);}}else if(newRegion[0]===str.INTL_CONVEYANCE_ZH){_this.mapToggle(str.JAPAN_MAP);}else{var map=Object.keys(mapText).find(function(x){return mapText[x].regionName===newRegion[0];});map=map!=null?map:str.WORLD_MAP;if(map===str.WORLD_MAP&&currentMap===str.EUROPE_MAP)map=str.EUROPE_MAP;_this.mapToggle(map);}};_this.playingToggle=function(){return _this.setState({playing:!_this.state.playing});};_this.scaleToggle=function(newScale){return _this.setState({scale:newScale});};_this.languageToggle=function(lang){return _this.setState({lang:lang});};_this.fullMapToggle=function(){_this.setState({fullMap:!_this.state.fullMap});};_this.fullPlotToggle=function(){ReactTooltip.hide();_this.setState({fullPlot:!_this.state.fullPlot});};_this.fullTreeToggle=function(){_this.setState({fullTree:!_this.state.fullTree});};_this.darkModeToggle=function(){updateDarkMode(!_this.state.darkMode);_this.setState({darkMode:!_this.state.darkMode});};_this.handleMapZoomChange=function(newZoom){return _this.setState({mapZoom:newZoom});};_this.handleDateChange=function(newDate){return _this.setState({date:newDate,tempDate:newDate});};_this.handleTempDateChange=function(newDates){var newDateStrings=newDates.map(function(x){return isoDate(x,_this.state.endDate).slice(0,10);});if(!_this.state.fullPlot){_this.setState({tempDate:newDateStrings[0]});}else{_this.setState({plotDates:newDateStrings});}};_this.handlePlotTypeChange=function(newType){return _this.setState({plotType:newType});};_this.tooltipRebuild=function(){return ReactTooltip.rebuild();};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){updateDarkMode(this.state.darkMode);this.fetchData();this.updateFullDimensions();window.addEventListener('resize',this.updateFullDimensions);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',this.updateFullDimensions);}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,lang=_this$state.lang,dataLoaded=_this$state.dataLoaded,currentMap=_this$state.currentMap,fullMap=_this$state.fullMap,fullPlot=_this$state.fullPlot,fullTree=_this$state.fullTree,darkMode=_this$state.darkMode;var fullScreenMode=fullMap?'map-full':fullPlot?'plot-full':fullTree?'tree-full':'';var FullScreenIcon=fullMap?AiOutlineFullscreenExit:AiOutlineFullscreen;return/*#__PURE__*/React.createElement(\"div\",{className:\"App \".concat(darkMode?'dark':'')},/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"title\",null,i18n.COVID19[lang])),!dataLoaded?/*#__PURE__*/React.createElement(Loading,null):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Container,{className:\"app-container \".concat(fullScreenMode)},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:!fullMap?7:12},/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},/*#__PURE__*/React.createElement(\"span\",{className:\"header-icon\",style:{opacity:dataLoaded?1:0}},/*#__PURE__*/React.createElement(Icon,null)),/*#__PURE__*/React.createElement(\"span\",{className:\"header-title\",style:{letterSpacing:lang==='zh'?'1px':'normal'}},i18n.COVID19[lang])),/*#__PURE__*/React.createElement(NavBar,Object.assign({},this.state,{scaleToggle:this.scaleToggle,languageToggle:this.languageToggle,darkModeToggle:this.darkModeToggle,reset:this.reset})),!fullPlot&&!fullTree&&/*#__PURE__*/React.createElement(Measure,{bounds:true,onResize:function onResize(contentRect){_this2.setState({mapDimensions:contentRect.bounds});}},function(_ref){var measureRef=_ref.measureRef;return/*#__PURE__*/React.createElement(\"div\",{ref:measureRef,className:\"map\",style:{height:!fullMap?_this2.state.mapDimensions.width*3/4:_this2.state.fullDimensions.height,width:!fullMap?'100%':_this2.state.fullDimensions.width}},currentMap===str.TRANSMISSION&&/*#__PURE__*/React.createElement(TransmissionNetwork,Object.assign({},_this2.state,{regionToggle:_this2.regionToggle,tooltipRebuild:_this2.tooltipRebuild})),currentMap!==str.TRANSMISSION&&/*#__PURE__*/React.createElement(Map,Object.assign({},_this2.state,{handleMapZoomChange:_this2.handleMapZoomChange,mapToggle:_this2.mapToggle,regionToggle:_this2.regionToggle,tooltipRebuild:_this2.tooltipRebuild})),/*#__PURE__*/React.createElement(\"div\",{className:\"map-full-button\"},/*#__PURE__*/React.createElement(FullScreenIcon,{size:fullMap?30:20,onClick:_this2.fullMapToggle})));}),/*#__PURE__*/React.createElement(MapNavBar,Object.assign({},this.state,{mapToggle:this.mapToggle,metricToggle:this.metricToggle,regionToggle:this.regionToggle})),/*#__PURE__*/React.createElement(DateSlider,Object.assign({},this.state,{handleDateChange:this.handleDateChange,handleTempDateChange:this.handleTempDateChange})),/*#__PURE__*/React.createElement(AnimationController,Object.assign({},this.state,{handleDateChange:this.handleDateChange,playingToggle:this.playingToggle})),/*#__PURE__*/React.createElement(\"div\",{className:\"footer-white\"})),!fullMap&&/*#__PURE__*/React.createElement(Col,{lg:!fullPlot&&!fullTree?5:12,className:\"col-right\"},/*#__PURE__*/React.createElement(Row,{style:{display:'flex',flexDirection:'column',padding:10}},/*#__PURE__*/React.createElement(Region,Object.assign({},this.state,{regionToggle:this.regionToggle,ReactTooltip:ReactTooltip})),/*#__PURE__*/React.createElement(MainCounts,this.state),/*#__PURE__*/React.createElement(Plot,Object.assign({},this.state,{regionToggle:this.regionToggle,fullPlotToggle:this.fullPlotToggle,scaleToggle:this.scaleToggle,handlePlotTypeChange:this.handlePlotTypeChange})),/*#__PURE__*/React.createElement(Tree,Object.assign({},this.state,{regionToggle:this.regionToggle,fullTreeToggle:this.fullTreeToggle})),/*#__PURE__*/React.createElement(\"div\",{className:\"footer-placeholder\"}))))),/*#__PURE__*/React.createElement(Footer,this.state)),/*#__PURE__*/React.createElement(ReactTooltip,{className:\"plot-tooltip\",type:darkMode?'dark':'light',html:true}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/jonchristie/Desktop/2020data/src/components/App.js"],"names":["React","Component","Fragment","Container","Row","Col","ReactTooltip","AiOutlineFullscreen","AiOutlineFullscreenExit","Helmet","Measure","Map","MapNavBar","DateSlider","AnimationController","MainCounts","Plot","Tree","NavBar","Loading","Footer","Region","TransmissionNetwork","i18n","us_map","str","updateDarkMode","isoDate","mapText","defaultState","currentMap","metric","currentRegion","GLOBAL_ZH","playing","scale","mapZoom","fullMap","fullPlot","fullTree","App","state","startDate","endDate","date","tempDate","plotDates","data","dataLoaded","lang","darkMode","mapDimensions","width","height","fullDimensions","plotType","fetchData","fetch","then","res","json","latest","Object","keys","confirmedCount","pop","setState","tooltipRebuild","updateFullDimensions","window","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","Math","min","reset","mapToggle","newMap","WORLD_MAP","metricToggle","newMetric","regionToggle","newRegion","mapChange","TRANSMISSION","CHINA_ZH","length","CHINA_MAP2","HONGKONG_ZH","HONGKONG_MAP","CHINA_MAP1","US_ZH","US_MAP2","US_MAP","ITALY_ZH","ITALY_MAP2","ITALY_MAP","INTL_CONVEYANCE_ZH","JAPAN_MAP","map","find","x","regionName","EUROPE_MAP","playingToggle","scaleToggle","newScale","languageToggle","fullMapToggle","fullPlotToggle","hide","fullTreeToggle","darkModeToggle","handleMapZoomChange","newZoom","handleDateChange","newDate","handleTempDateChange","newDates","newDateStrings","slice","handlePlotTypeChange","newType","rebuild","addEventListener","removeEventListener","fullScreenMode","FullScreenIcon","COVID19","opacity","letterSpacing","contentRect","bounds","measureRef","display","flexDirection","padding"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport ReactTooltip from 'react-tooltip'\nimport { AiOutlineFullscreen, AiOutlineFullscreenExit } from 'react-icons/ai'\nimport Helmet from 'react-helmet'\nimport Measure from 'react-measure'\nimport './App.css'\nimport Map from './Map'\nimport MapNavBar from './MapNavBar'\nimport DateSlider from './DateSlider'\nimport AnimationController from './AnimationController'\nimport MainCounts from './MainCounts'\nimport Plot from './Plot'\nimport Tree from './Tree'\nimport NavBar from './NavBar'\nimport Loading from './Loading'\nimport Footer from './Footer'\nimport Region from './Region'\nimport TransmissionNetwork from './TransmissionNetwork'\nimport { ReactComponent as Icon } from '../covid19.svg'\nimport i18n from '../data/i18n.yml'\nimport us_map from '../data/us_map.yml'\nimport * as str from '../utils/strings'\nimport { updateDarkMode, isoDate } from '../utils/utils'\nimport { mapText } from '../utils/map_text'\n\nconst defaultState = {\n    currentMap: 'WORLD',\n    metric: 'confirmedCount',\n    currentRegion: [ str.GLOBAL_ZH ],\n    playing: false,\n    scale: 'linear',\n    mapZoom: 1,\n    fullMap: false,\n    fullPlot: false,\n    fullTree: false\n}\n\nclass App extends Component {\n    state = {\n        startDate: '2020-01-24',\n        endDate: '2020-02-14',\n        date: '2020-02-14',\n        tempDate: '2020-02-14',\n        plotDates: [ '2020-01-24', '2020-02-14' ],\n        data: null,\n        dataLoaded: false,\n        lang: 'en',\n        darkMode: true,\n        mapDimensions: {\n            width: -1,\n            height: -1\n        },\n        fullDimensions: {\n            width: -1,\n            height: -1\n        },\n        plotType: 'plot_basic',\n        ...defaultState\n    }\n\n    fetchData = () =>\n        fetch('data/all_minified.json').then((res) => res.json()).then((res) => {\n            const latest = Object.keys(res[str.GLOBAL_ZH].confirmedCount).pop()\n            this.setState({\n                data: res,\n                dataLoaded: true,\n                date: latest,\n                tempDate: latest,\n                endDate: latest,\n                plotDates: [ this.state.plotDates[0], latest ]\n            })\n            this.tooltipRebuild()\n        })\n\n    componentDidMount() {\n        updateDarkMode(this.state.darkMode)\n        this.fetchData()\n        this.updateFullDimensions()\n        window.addEventListener('resize', this.updateFullDimensions)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateFullDimensions)\n    }\n\n    updateFullDimensions = () => {\n        const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n        const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n\n        if (height < 750 || width < 992) {\n            if (this.state.fullMap) this.setState({ fullMap: false })\n            if (this.state.fullPlot) this.setState({ fullPlot: false })\n        }\n\n        this.setState({\n            fullDimensions: {\n                height: Math.min(height - 250, (width - 200) * 3 / 4),\n                width: Math.min((height - 250) * 4 / 3, width - 200)\n            }\n        })\n    }\n\n    reset = () =>\n        this.setState({\n            ...defaultState,\n            date: this.state.endDate,\n            tempDate: this.state.endDate,\n            plotDates: [ this.state.startDate, this.state.endDate ]\n        })\n\n    mapToggle = (newMap) =>\n        this.setState({\n            currentMap: newMap,\n            // do not reset map zoom when switching between two China maps\n            mapZoom: newMap === str.WORLD_MAP || this.state.currentMap === str.WORLD_MAP ? 1 : this.state.mapZoom\n        })\n\n    metricToggle = (newMetric) => this.setState({ metric: newMetric })\n\n    regionToggle = (newRegion, mapChange = true) => {\n        const { currentMap } = this.state\n        this.setState({ currentRegion: newRegion })\n        if (!mapChange) return\n\n        if (currentMap === str.TRANSMISSION) return\n\n        if (newRegion[0] === str.CHINA_ZH) {\n            if (newRegion.length >= 4) {\n                this.mapToggle(str.CHINA_MAP2)\n            } else if (newRegion.length >= 2 && newRegion[1] === str.HONGKONG_ZH) {\n                this.mapToggle(str.HONGKONG_MAP)\n            } else if (currentMap !== str.CHINA_MAP2) {\n                this.mapToggle(str.CHINA_MAP1)\n            }\n        } else if (newRegion[0] === str.US_ZH) {\n            if (newRegion.length >= 2 && newRegion[1] in us_map) {\n                this.mapToggle(str.US_MAP2)\n            } else {\n                this.mapToggle(str.US_MAP)\n            }\n        } else if (newRegion[0] === str.ITALY_ZH) {\n            if (newRegion.length >= 3) {\n                this.mapToggle(str.ITALY_MAP2)\n            } else if (currentMap !== str.ITALY_MAP2) {\n                this.mapToggle(str.ITALY_MAP)\n            }\n        } else if (newRegion[0] === str.INTL_CONVEYANCE_ZH) {\n            this.mapToggle(str.JAPAN_MAP)\n        } else {\n            let map = Object.keys(mapText).find((x) => mapText[x].regionName === newRegion[0])\n            map = map != null ? map : str.WORLD_MAP\n            if (map === str.WORLD_MAP && currentMap === str.EUROPE_MAP) map = str.EUROPE_MAP\n            this.mapToggle(map)\n        }\n    }\n\n    playingToggle = () => this.setState({ playing: !this.state.playing })\n\n    scaleToggle = (newScale) => this.setState({ scale: newScale })\n\n    languageToggle = (lang) => this.setState({ lang })\n\n    fullMapToggle = () => {\n        this.setState({ fullMap: !this.state.fullMap })\n    }\n\n    fullPlotToggle = () => {\n        ReactTooltip.hide()\n        this.setState({ fullPlot: !this.state.fullPlot })\n    }\n\n    fullTreeToggle = () => {\n        this.setState({ fullTree: !this.state.fullTree })\n    }\n\n    darkModeToggle = () => {\n        updateDarkMode(!this.state.darkMode)\n        this.setState({ darkMode: !this.state.darkMode })\n    }\n\n    handleMapZoomChange = (newZoom) => this.setState({ mapZoom: newZoom })\n\n    handleDateChange = (newDate) => this.setState({ date: newDate, tempDate: newDate })\n\n    handleTempDateChange = (newDates) => {\n        const newDateStrings = newDates.map((x) => isoDate(x, this.state.endDate).slice(0, 10))\n        if (!this.state.fullPlot) {\n            this.setState({ tempDate: newDateStrings[0] })\n        } else {\n            this.setState({ plotDates: newDateStrings })\n        }\n    }\n\n    handlePlotTypeChange = (newType) => this.setState({ plotType: newType })\n\n    tooltipRebuild = () => ReactTooltip.rebuild()\n\n    render() {\n        const { lang, dataLoaded, currentMap, fullMap, fullPlot, fullTree, darkMode } = this.state\n        const fullScreenMode = fullMap ? 'map-full' : fullPlot ? 'plot-full' : fullTree ? 'tree-full' : ''\n        const FullScreenIcon = fullMap ? AiOutlineFullscreenExit : AiOutlineFullscreen\n\n        return (\n            <div className={`App ${darkMode ? 'dark' : ''}`}>\n                <Helmet>\n                    <title>{i18n.COVID19[lang]}</title>\n                </Helmet>\n                {!dataLoaded ? (\n                    <Loading />\n                ) : (\n                    <Fragment>\n                        <Container className={`app-container ${fullScreenMode}`}>\n                            <Row>\n                                <Col lg={!fullMap ? 7 : 12}>\n                                    <div className=\"header\">\n                                        <span className=\"header-icon\" style={{ opacity: dataLoaded ? 1 : 0 }}>\n                                            <Icon />\n                                        </span>\n                                        <span\n                                            className=\"header-title\"\n                                            style={{ letterSpacing: lang === 'zh' ? '1px' : 'normal' }}\n                                        >\n                                            {i18n.COVID19[lang]}\n                                        </span>\n                                    </div>\n                                    <NavBar\n                                        {...this.state}\n                                        scaleToggle={this.scaleToggle}\n                                        languageToggle={this.languageToggle}\n                                        darkModeToggle={this.darkModeToggle}\n                                        reset={this.reset}\n                                    />\n                                    {!fullPlot &&\n                                    !fullTree && (\n                                        <Measure\n                                            bounds\n                                            onResize={(contentRect) => {\n                                                this.setState({ mapDimensions: contentRect.bounds })\n                                            }}\n                                        >\n                                            {({ measureRef }) => (\n                                                <div\n                                                    ref={measureRef}\n                                                    className=\"map\"\n                                                    style={{\n                                                        height: !fullMap\n                                                            ? this.state.mapDimensions.width * 3 / 4\n                                                            : this.state.fullDimensions.height,\n                                                        width: !fullMap ? '100%' : this.state.fullDimensions.width\n                                                    }}\n                                                >\n                                                    {currentMap === str.TRANSMISSION && (\n                                                        <TransmissionNetwork\n                                                            {...this.state}\n                                                            regionToggle={this.regionToggle}\n                                                            tooltipRebuild={this.tooltipRebuild}\n                                                        />\n                                                    )}\n                                                    {currentMap !== str.TRANSMISSION && (\n                                                        <Map\n                                                            {...this.state}\n                                                            handleMapZoomChange={this.handleMapZoomChange}\n                                                            mapToggle={this.mapToggle}\n                                                            regionToggle={this.regionToggle}\n                                                            tooltipRebuild={this.tooltipRebuild}\n                                                        />\n                                                    )}\n                                                    <div className=\"map-full-button\">\n                                                        <FullScreenIcon\n                                                            size={fullMap ? 30 : 20}\n                                                            onClick={this.fullMapToggle}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </Measure>\n                                    )}\n                                    <MapNavBar\n                                        {...this.state}\n                                        mapToggle={this.mapToggle}\n                                        metricToggle={this.metricToggle}\n                                        regionToggle={this.regionToggle}\n                                    />\n                                    <DateSlider\n                                        {...this.state}\n                                        handleDateChange={this.handleDateChange}\n                                        handleTempDateChange={this.handleTempDateChange}\n                                    />\n                                    <AnimationController\n                                        {...this.state}\n                                        handleDateChange={this.handleDateChange}\n                                        playingToggle={this.playingToggle}\n                                    />\n                                    <div className=\"footer-white\" />\n                                </Col>\n                                {!fullMap && (\n                                    <Col lg={!fullPlot && !fullTree ? 5 : 12} className=\"col-right\">\n                                        <Row style={{ display: 'flex', flexDirection: 'column', padding: 10 }}>\n                                            <Region\n                                                {...this.state}\n                                                regionToggle={this.regionToggle}\n                                                ReactTooltip={ReactTooltip}\n                                            />\n                                            <MainCounts {...this.state} />\n                                            <Plot\n                                                {...this.state}\n                                                regionToggle={this.regionToggle}\n                                                fullPlotToggle={this.fullPlotToggle}\n                                                scaleToggle={this.scaleToggle}\n                                                handlePlotTypeChange={this.handlePlotTypeChange}\n                                            />\n                                            <Tree\n                                                {...this.state}\n                                                regionToggle={this.regionToggle}\n                                                fullTreeToggle={this.fullTreeToggle}\n                                            />\n                                            <div className=\"footer-placeholder\" />\n                                        </Row>\n                                    </Col>\n                                )}\n                            </Row>\n                        </Container>\n                        <Footer {...this.state} />\n                    </Fragment>\n                )}\n                <ReactTooltip className=\"plot-tooltip\" type={darkMode ? 'dark' : 'light'} html={true} />\n            </div>\n        )\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}