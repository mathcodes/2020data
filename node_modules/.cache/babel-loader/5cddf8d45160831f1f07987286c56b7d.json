{"ast":null,"code":"var _jsxFileName = \"/Users/jonchristie/Downloads/covid19-master/src/components/Tree.js\";\nimport React, { Component } from 'react';\nimport { AiOutlineFullscreen, AiOutlineFullscreenExit } from 'react-icons/ai';\nimport BubblePlot from './BubblePlot';\nimport Table from './Table';\nimport RadioButton from './RadioButton';\nimport i18n from '../data/i18n.yml';\nexport default class Tree extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      height: 280,\n      type: 'bubble'\n    };\n\n    this.updateHight = () => {\n      const vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n      const vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n      this.setState({\n        height: vh < 850 && vw >= 992 ? 240 : 280\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateHight();\n    window.addEventListener('resize', this.updateHight);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateHight);\n  }\n\n  render() {\n    const {\n      fullPlot,\n      fullTree,\n      fullTreeToggle,\n      fullDimensions,\n      lang\n    } = this.props;\n    if (fullPlot) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 30\n      }\n    });\n    const FullScreenIcon = fullTree ? AiOutlineFullscreenExit : AiOutlineFullscreen;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tree-wrap\",\n      style: {\n        height: !fullTree ? this.state.height : fullDimensions.height - 100,\n        width: !fullTree ? '100%' : fullDimensions.width + 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tree-full-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FullScreenIcon, {\n      size: fullTree ? 30 : 20,\n      onClick: fullTreeToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bubble-table-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      texts: {\n        bubble: i18n.BUBBLES[lang],\n        table: i18n.TABLE[lang]\n      },\n      selected: this.state.type,\n      onSelect: s => this.setState({\n        type: s\n      }),\n      alwaysShow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    })), this.state.type === 'bubble' && /*#__PURE__*/React.createElement(BubblePlot, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 50\n      }\n    })), this.state.type === 'table' && /*#__PURE__*/React.createElement(Table, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 49\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/jonchristie/Downloads/covid19-master/src/components/Tree.js"],"names":["React","Component","AiOutlineFullscreen","AiOutlineFullscreenExit","BubblePlot","Table","RadioButton","i18n","Tree","state","height","type","updateHight","vh","Math","max","document","documentElement","clientHeight","window","innerHeight","vw","clientWidth","innerWidth","setState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","fullPlot","fullTree","fullTreeToggle","fullDimensions","lang","props","FullScreenIcon","width","bubble","BUBBLES","table","TABLE","s"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { AiOutlineFullscreen, AiOutlineFullscreenExit } from 'react-icons/ai'\nimport BubblePlot from './BubblePlot'\nimport Table from './Table'\nimport RadioButton from './RadioButton'\nimport i18n from '../data/i18n.yml'\n\nexport default class Tree extends Component {\n    state = {\n        height: 280,\n        type: 'bubble'\n    }\n\n    componentDidMount() {\n        this.updateHight()\n        window.addEventListener('resize', this.updateHight)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateHight)\n    }\n\n    updateHight = () => {\n        const vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n        const vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\n\n        this.setState({\n            height: vh < 850 && vw >= 992 ? 240 : 280\n        })\n    }\n\n    render() {\n        const { fullPlot, fullTree, fullTreeToggle, fullDimensions, lang } = this.props\n        if (fullPlot) return <div />\n\n        const FullScreenIcon = fullTree ? AiOutlineFullscreenExit : AiOutlineFullscreen\n        return (\n            <div\n                className=\"tree-wrap\"\n                style={{\n                    height: !fullTree ? this.state.height : fullDimensions.height - 100,\n                    width: !fullTree ? '100%' : fullDimensions.width + 100\n                }}\n            >\n                <div className=\"tree-full-button\">\n                    <FullScreenIcon size={fullTree ? 30 : 20} onClick={fullTreeToggle} />\n                </div>\n                <div className=\"bubble-table-toggle-btn\">\n                    <RadioButton\n                        texts={{ bubble: i18n.BUBBLES[lang], table: i18n.TABLE[lang] }}\n                        selected={this.state.type}\n                        onSelect={(s) => this.setState({ type: s })}\n                        alwaysShow={true}\n                    />\n                </div>\n                {this.state.type === 'bubble' && <BubblePlot {...this.props} />}\n                {this.state.type === 'table' && <Table {...this.props} />}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}