{"ast":null,"code":"import _objectSpread from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import addDays from'date-fns/addDays';import subDays from'date-fns/subDays';import format from'date-fns/format';import i18n from'../data/i18n.yml';import*as str from'./strings';export var parseDate=function parseDate(date){var _date$substr$split=date.substr(0,10).split('-'),_date$substr$split2=_slicedToArray(_date$substr$split,3),year=_date$substr$split2[0],month=_date$substr$split2[1],day=_date$substr$split2[2];return new Date(year,month-1,day);};export var nextDay=function nextDay(date,startDate,endDate){var newDay=addDays(parseDate(date),1);var lastDay=parseDate(endDate);return newDay<=lastDay?format(newDay,'yyyy-MM-dd'):startDate;};export var previousDay=function previousDay(date,startDate,endDate){var newDay=subDays(parseDate(date),1);var firstDay=parseDate(startDate);return newDay>=firstDay?format(newDay,'yyyy-MM-dd'):endDate;};export var formatDate=function formatDate(date,lang){return format(parseDate(date),i18n.DATE_FORMAT_2[lang]);};export var isoDate=function isoDate(date,endDate){var d=new Date(date);return new Date(d.getTime()-parseDate(endDate).getTimezoneOffset()*60000).toISOString();};export var metricText={confirmedCount:i18n.CONFIRMED,deadCount:i18n.DEATHS,curedCount:i18n.RECOVERED,fatalityRate:i18n.FATALITY_RATE,recoveryRate:i18n.RECOVERY_RATE};export var getDataFromRegion=function getDataFromRegion(data,region){return[data].concat(_toConsumableArray(region)).reduce(function(s,x){return s[x];});};export var simplifyName=function simplifyName(name,lang){var simplified=name;// remove parenthesis to save space for legend\nif(lang==='en')simplified=name.split('(')[0].trim();if(lang==='en')simplified=simplified.replace('United States of America','USA');if(lang==='en')simplified=simplified.replace('United Kingdom','UK');if(lang==='en')simplified=simplified.replace('International Conveyance',\"Int'l Conveyance\");if(lang==='en')simplified=simplified.replace(' District','');if(lang==='en')simplified=simplified.replace(' County','');if(lang==='zh')simplified=simplified.replace('（来自钻石公主号）','').trim();return simplified;};export var updateDarkMode=function updateDarkMode(isDarkMode){document.body.style.background=!isDarkMode?'#fff':'var(--darker-grey)';if(isDarkMode){document.body.classList.add('dark');}else{document.body.classList.remove('dark');}};export var generateTreeData=function generateTreeData(obj,date,lang){var simplified=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var childrenLabel=arguments.length>4&&arguments[4]!==undefined?arguments[4]:'children';var sortBy=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;var rootRegion=arguments.length>6&&arguments[6]!==undefined?arguments[6]:str.GLOBAL_ZH;var moreCounts=arguments.length>7&&arguments[7]!==undefined?arguments[7]:false;var preDate=previousDay(date,'2019-09-01','2050-01-01');var data=Object.entries(obj).filter(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];return!['confirmedCount','deadCount','curedCount','ENGLISH',str.GLOBAL_ZH].includes(k);}).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),k=_ref4[0],v=_ref4[1];var currentRegion=rootRegion===str.GLOBAL_ZH?k:\"\".concat(rootRegion,\".\").concat(k);var newdata={name:k,displayName:lang==='zh'?k:v.ENGLISH,region:currentRegion,confirmedCount:Object.keys(v.confirmedCount).length===0?NaN:v.confirmedCount[date]?v.confirmedCount[date]:0,deadCount:Object.keys(v.deadCount).length===0?NaN:v.deadCount[date]?v.deadCount[date]:0,curedCount:Object.keys(v.curedCount).length===0?NaN:v.curedCount[date]?v.curedCount[date]:0};if(moreCounts){var preConfirmedCount=preDate in v.confirmedCount?v.confirmedCount[preDate]:newdata.confirmedCount;var preDeadCount=preDate in v.deadCount?v.deadCount[preDate]:newdata.deadCount;newdata=_objectSpread(_objectSpread({},newdata),{},{active:newdata.confirmedCount-newdata.deadCount-newdata.curedCount,newConfirmed:newdata.confirmedCount-preConfirmedCount,newDead:newdata.deadCount-preDeadCount,fatalityRate:newdata.deadCount/newdata.confirmedCount,recoveryRate:newdata.curedCount/newdata.confirmedCount});}// remove some regions for the simplicity of bubble plot\nif(simplified&&(k===str.LONDON_EN||obj.ENGLISH===str.NETHERLANDS_EN&&k===str.NETHERLANDS_ZH||obj.ENGLISH===str.MAINLAND_CHINA_EN||obj.ENGLISH===str.ITALY_EN||obj.ENGLISH===str.PHILIPPINES_EN||obj.ENGLISH===str.LATVIA_EN||obj.ENGLISH===str.SLOVENIA_EN||obj.ENGLISH===str.US_EN))return newdata;if(Object.keys(v).length>4){newdata[childrenLabel]=generateTreeData(v,date,lang,simplified,childrenLabel,sortBy,currentRegion,moreCounts);}return newdata;});return sortBy?data.sort(function(a,b){return a[sortBy]>b[sortBy]||isNaN(b[sortBy])?-1:1;}):data;};","map":{"version":3,"sources":["/Users/jonchristie/Downloads/covid19-master/src/utils/utils.js"],"names":["addDays","subDays","format","i18n","str","parseDate","date","substr","split","year","month","day","Date","nextDay","startDate","endDate","newDay","lastDay","previousDay","firstDay","formatDate","lang","DATE_FORMAT_2","isoDate","d","getTime","getTimezoneOffset","toISOString","metricText","confirmedCount","CONFIRMED","deadCount","DEATHS","curedCount","RECOVERED","fatalityRate","FATALITY_RATE","recoveryRate","RECOVERY_RATE","getDataFromRegion","data","region","reduce","s","x","simplifyName","name","simplified","trim","replace","updateDarkMode","isDarkMode","document","body","style","background","classList","add","remove","generateTreeData","obj","childrenLabel","sortBy","rootRegion","GLOBAL_ZH","moreCounts","preDate","Object","entries","filter","k","v","includes","map","currentRegion","newdata","displayName","ENGLISH","keys","length","NaN","preConfirmedCount","preDeadCount","active","newConfirmed","newDead","LONDON_EN","NETHERLANDS_EN","NETHERLANDS_ZH","MAINLAND_CHINA_EN","ITALY_EN","PHILIPPINES_EN","LATVIA_EN","SLOVENIA_EN","US_EN","sort","a","b","isNaN"],"mappings":"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","sourcesContent":["import addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\nimport format from 'date-fns/format'\nimport i18n from '../data/i18n.yml'\nimport * as str from './strings'\n\nexport const parseDate = (date) => {\n    const [ year, month, day ] = date.substr(0, 10).split('-')\n    return new Date(year, month - 1, day)\n}\n\nexport const nextDay = (date, startDate, endDate) => {\n    const newDay = addDays(parseDate(date), 1)\n    const lastDay = parseDate(endDate)\n    return newDay <= lastDay ? format(newDay, 'yyyy-MM-dd') : startDate\n}\n\nexport const previousDay = (date, startDate, endDate) => {\n    const newDay = subDays(parseDate(date), 1)\n    const firstDay = parseDate(startDate)\n    return newDay >= firstDay ? format(newDay, 'yyyy-MM-dd') : endDate\n}\n\nexport const formatDate = (date, lang) => {\n    return format(parseDate(date), i18n.DATE_FORMAT_2[lang])\n}\n\nexport const isoDate = (date, endDate) => {\n    const d = new Date(date)\n    return new Date(d.getTime() - parseDate(endDate).getTimezoneOffset() * 60000).toISOString()\n}\n\nexport const metricText = {\n    confirmedCount: i18n.CONFIRMED,\n    deadCount: i18n.DEATHS,\n    curedCount: i18n.RECOVERED,\n    fatalityRate: i18n.FATALITY_RATE,\n    recoveryRate: i18n.RECOVERY_RATE\n}\n\nexport const getDataFromRegion = (data, region) => [ data, ...region ].reduce((s, x) => s[x])\n\nexport const simplifyName = (name, lang) => {\n    let simplified = name\n    // remove parenthesis to save space for legend\n    if (lang === 'en') simplified = name.split('(')[0].trim()\n\n    if (lang === 'en') simplified = simplified.replace('United States of America', 'USA')\n    if (lang === 'en') simplified = simplified.replace('United Kingdom', 'UK')\n    if (lang === 'en') simplified = simplified.replace('International Conveyance', \"Int'l Conveyance\")\n    if (lang === 'en') simplified = simplified.replace(' District', '')\n    if (lang === 'en') simplified = simplified.replace(' County', '')\n    if (lang === 'zh') simplified = simplified.replace('（来自钻石公主号）', '').trim()\n\n    return simplified\n}\n\nexport const updateDarkMode = (isDarkMode) => {\n    document.body.style.background = !isDarkMode ? '#fff' : 'var(--darker-grey)'\n    if (isDarkMode) {\n        document.body.classList.add('dark')\n    } else {\n        document.body.classList.remove('dark')\n    }\n}\n\nexport const generateTreeData = (\n    obj,\n    date,\n    lang,\n    simplified = true,\n    childrenLabel = 'children',\n    sortBy = null,\n    rootRegion = str.GLOBAL_ZH,\n    moreCounts = false\n) => {\n    const preDate = previousDay(date, '2019-09-01', '2050-01-01')\n\n    let data = Object.entries(obj)\n        .filter(([ k, v ]) => ![ 'confirmedCount', 'deadCount', 'curedCount', 'ENGLISH', str.GLOBAL_ZH ].includes(k))\n        .map(([ k, v ]) => {\n            const currentRegion = rootRegion === str.GLOBAL_ZH ? k : `${rootRegion}.${k}`\n            let newdata = {\n                name: k,\n                displayName: lang === 'zh' ? k : v.ENGLISH,\n                region: currentRegion,\n                confirmedCount:\n                    Object.keys(v.confirmedCount).length === 0\n                        ? NaN\n                        : v.confirmedCount[date] ? v.confirmedCount[date] : 0,\n                deadCount: Object.keys(v.deadCount).length === 0 ? NaN : v.deadCount[date] ? v.deadCount[date] : 0,\n                curedCount: Object.keys(v.curedCount).length === 0 ? NaN : v.curedCount[date] ? v.curedCount[date] : 0\n            }\n\n            if (moreCounts) {\n                const preConfirmedCount =\n                    preDate in v.confirmedCount ? v.confirmedCount[preDate] : newdata.confirmedCount\n                const preDeadCount = preDate in v.deadCount ? v.deadCount[preDate] : newdata.deadCount\n\n                newdata = {\n                    ...newdata,\n                    active: newdata.confirmedCount - newdata.deadCount - newdata.curedCount,\n                    newConfirmed: newdata.confirmedCount - preConfirmedCount,\n                    newDead: newdata.deadCount - preDeadCount,\n                    fatalityRate: newdata.deadCount / newdata.confirmedCount,\n                    recoveryRate: newdata.curedCount / newdata.confirmedCount\n                }\n            }\n\n            // remove some regions for the simplicity of bubble plot\n            if (\n                simplified &&\n                (k === str.LONDON_EN ||\n                    (obj.ENGLISH === str.NETHERLANDS_EN && k === str.NETHERLANDS_ZH) ||\n                    obj.ENGLISH === str.MAINLAND_CHINA_EN ||\n                    obj.ENGLISH === str.ITALY_EN ||\n                    obj.ENGLISH === str.PHILIPPINES_EN ||\n                    obj.ENGLISH === str.LATVIA_EN ||\n                    obj.ENGLISH === str.SLOVENIA_EN ||\n                    obj.ENGLISH === str.US_EN)\n            )\n                return newdata\n\n            if (Object.keys(v).length > 4) {\n                newdata[childrenLabel] = generateTreeData(\n                    v,\n                    date,\n                    lang,\n                    simplified,\n                    childrenLabel,\n                    sortBy,\n                    currentRegion,\n                    moreCounts\n                )\n            }\n            return newdata\n        })\n\n    return sortBy ? data.sort((a, b) => (a[sortBy] > b[sortBy] || isNaN(b[sortBy]) ? -1 : 1)) : data\n}\n"]},"metadata":{},"sourceType":"module"}