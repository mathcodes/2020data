{"ast":null,"code":"var _jsxFileName = \"/Users/jonchristie/Downloads/covid19-master/src/components/BubblePlot.js\";\nimport React, { Component } from 'react';\nimport { ResponsiveBubble } from '@nivo/circle-packing';\nimport { interpolateMagma } from 'd3-scale-chromatic';\nimport { getDataFromRegion, generateTreeData } from '../utils/utils';\nimport * as str from '../utils/strings';\nexport default class BubblePlot extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      plotData: null,\n      currentNodePath: null\n    };\n\n    this.handleNodeClick = node => {\n      const region = node.path === str.GLOBAL_ZH ? [node.path] : node.path.split('.').reverse().slice(1);\n      this.props.regionToggle(region);\n    };\n\n    this.bringTextsToTop = () => {\n      setTimeout(() => {\n        document.querySelectorAll('.bubble-plot-wrap text').forEach(elem => {\n          let parentElem = elem.parentNode; // bring texts to top\n\n          elem.parentNode.parentNode.appendChild(parentElem);\n        });\n      }, 100);\n    };\n  }\n\n  componentDidUpdate() {\n    this.bringTextsToTop();\n  }\n\n  componentDidMount() {\n    this.bringTextsToTop();\n  }\n\n  render() {\n    const {\n      data,\n      metric,\n      currentRegion,\n      date,\n      playing,\n      lang,\n      darkMode,\n      fullTree\n    } = this.props;\n    if (data == null) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 34\n      }\n    });\n    let plotData = {\n      name: str.GLOBAL_ZH,\n      displayName: lang === 'en' ? str.GLOBAL_EN : str.GLOBAL_ZH,\n      confirmedCount: data[str.GLOBAL_ZH].confirmedCount[date],\n      deadCount: data[str.GLOBAL_ZH].deadCount[date],\n      curedCount: data[str.GLOBAL_ZH].curedCount[date],\n      children: generateTreeData(data, date, lang)\n    };\n    let currentNodePath = currentRegion[0] === str.GLOBAL_ZH ? str.GLOBAL_ZH : [str.GLOBAL_ZH, ...currentRegion].reverse().join('.'); // TODO: Node does not exist when count is 0. Need to find the parent node that has non-zero count.\n\n    const currentData = getDataFromRegion(data, currentRegion);\n    const count = currentData[metric][date];\n    if (count == null || count === 0 || currentRegion[0] === str.CHINA_ZH && currentRegion.length > 3 || currentRegion[0] === str.US_ZH && currentRegion.length === 3 || currentRegion[0] === str.UK_ZH && currentRegion.length > 3 || currentRegion[0] === str.ITALY_ZH && currentRegion.length > 2 || currentRegion[0] === str.LATVIA_ZH && currentRegion.length > 2 || currentRegion[0] === str.PHILIPPINES_ZH && currentRegion.length > 2 || currentRegion[0] === str.SLOVENIA_ZH && currentRegion.length > 2) currentNodePath = [str.GLOBAL_ZH, ...currentRegion.slice(0, currentRegion.length - 1)].reverse().join('.');\n    let displayNodePath = Object.keys(currentData).length > 4 ? currentNodePath : currentRegion[0] === str.GLOBAL_ZH ? str.GLOBAL_ZH : [str.GLOBAL_ZH, ...currentRegion.slice(0, currentRegion.length - 1)].reverse().join('.');\n    if (currentRegion[0] === str.US_ZH && currentRegion.length > 1) displayNodePath = [str.GLOBAL_ZH, str.US_ZH].reverse().join('.');\n    if (currentRegion[0] === str.UK_ZH && currentRegion.length > 2) displayNodePath = [str.GLOBAL_ZH, ...currentRegion.slice(0, 2)].reverse().join('.');\n    if (currentRegion[0] === str.CHINA_ZH && currentRegion.length > 2) displayNodePath = [str.GLOBAL_ZH, ...currentRegion.slice(0, 2)].reverse().join('.');\n    if (currentRegion[0] === str.ITALY_ZH && currentRegion.length > 1) displayNodePath = [str.GLOBAL_ZH, str.ITALY_ZH].reverse().join('.');\n    if (currentRegion[0] === str.LATVIA_ZH && currentRegion.length > 1) displayNodePath = [str.GLOBAL_ZH, str.LATVIA_ZH].reverse().join('.');\n    if (currentRegion[0] === str.PHILIPPINES_ZH && currentRegion.length > 1) displayNodePath = [str.GLOBAL_ZH, str.PHILIPPINES_ZH].reverse().join('.');\n    if (currentRegion[0] === str.SLOVENIA_ZH && currentRegion.length > 1) displayNodePath = [str.GLOBAL_ZH, str.SLOVENIA_ZH].reverse().join('.');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bubble-plot-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveBubble, {\n      ref: this.bubble,\n      root: plotData,\n      theme: {\n        fontFamily: 'Saira, sans-serif',\n        fontSize: !fullTree ? 11 : 14,\n        tooltip: {\n          container: {\n            background: darkMode ? 'var(--darkest-grey)' : 'white'\n          }\n        }\n      },\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      tooltip: ({\n        color,\n        value,\n        data\n      }) => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"plot-tooltip\",\n        style: {\n          color: color === '#fff' && !darkMode ? '#222' : color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, data.displayName, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"plot-tooltip-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }, ` ${data[metric]}`)),\n      identity: \"name\",\n      value: metric,\n      colors: [...[0.3, 0.4, 0.15].map(x => interpolateMagma(1 - x)), '#fff'],\n      padding: 3,\n      enableLabel: true,\n      label: ({\n        data\n      }) => data.displayName,\n      labelTextColor: '#222',\n      labelSkipRadius: !fullTree ? 6 : 10,\n      animate: !playing,\n      motionStiffness: 50,\n      motionDamping: 12,\n      onClick: this.handleNodeClick,\n      defs: [{\n        id: 'bubbleLines',\n        type: 'patternLines',\n        background: 'none',\n        color: 'inherit',\n        rotation: -45,\n        lineWidth: 4,\n        spacing: 5\n      }],\n      fill: [{\n        match: d => d.path === currentNodePath,\n        id: 'bubbleLines'\n      }],\n      currentNodePath: displayNodePath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jonchristie/Downloads/covid19-master/src/components/BubblePlot.js"],"names":["React","Component","ResponsiveBubble","interpolateMagma","getDataFromRegion","generateTreeData","str","BubblePlot","state","plotData","currentNodePath","handleNodeClick","node","region","path","GLOBAL_ZH","split","reverse","slice","props","regionToggle","bringTextsToTop","setTimeout","document","querySelectorAll","forEach","elem","parentElem","parentNode","appendChild","componentDidUpdate","componentDidMount","render","data","metric","currentRegion","date","playing","lang","darkMode","fullTree","name","displayName","GLOBAL_EN","confirmedCount","deadCount","curedCount","children","join","currentData","count","CHINA_ZH","length","US_ZH","UK_ZH","ITALY_ZH","LATVIA_ZH","PHILIPPINES_ZH","SLOVENIA_ZH","displayNodePath","Object","keys","bubble","fontFamily","fontSize","tooltip","container","background","top","right","bottom","left","color","value","map","x","id","type","rotation","lineWidth","spacing","match","d"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { ResponsiveBubble } from '@nivo/circle-packing'\nimport { interpolateMagma } from 'd3-scale-chromatic'\nimport { getDataFromRegion, generateTreeData } from '../utils/utils'\nimport * as str from '../utils/strings'\n\nexport default class BubblePlot extends Component {\n    state = {\n        plotData: null,\n        currentNodePath: null\n    }\n\n    // hack so that bubble plot can interact with other plots\n    handleNodeClick = (node) => {\n        const region = node.path === str.GLOBAL_ZH ? [ node.path ] : node.path.split('.').reverse().slice(1)\n        this.props.regionToggle(region)\n    }\n\n    bringTextsToTop = () => {\n        setTimeout(() => {\n            document.querySelectorAll('.bubble-plot-wrap text').forEach((elem) => {\n                let parentElem = elem.parentNode\n                // bring texts to top\n                elem.parentNode.parentNode.appendChild(parentElem)\n            })\n        }, 100)\n    }\n\n    componentDidUpdate() {\n        this.bringTextsToTop()\n    }\n\n    componentDidMount() {\n        this.bringTextsToTop()\n    }\n\n    render() {\n        const { data, metric, currentRegion, date, playing, lang, darkMode, fullTree } = this.props\n        if (data == null) return <div />\n        let plotData = {\n            name: str.GLOBAL_ZH,\n            displayName: lang === 'en' ? str.GLOBAL_EN : str.GLOBAL_ZH,\n            confirmedCount: data[str.GLOBAL_ZH].confirmedCount[date],\n            deadCount: data[str.GLOBAL_ZH].deadCount[date],\n            curedCount: data[str.GLOBAL_ZH].curedCount[date],\n            children: generateTreeData(data, date, lang)\n        }\n\n        let currentNodePath =\n            currentRegion[0] === str.GLOBAL_ZH ? str.GLOBAL_ZH : [ str.GLOBAL_ZH, ...currentRegion ].reverse().join('.')\n\n        // TODO: Node does not exist when count is 0. Need to find the parent node that has non-zero count.\n        const currentData = getDataFromRegion(data, currentRegion)\n        const count = currentData[metric][date]\n        if (\n            count == null ||\n            count === 0 ||\n            (currentRegion[0] === str.CHINA_ZH && currentRegion.length > 3) ||\n            (currentRegion[0] === str.US_ZH && currentRegion.length === 3) ||\n            (currentRegion[0] === str.UK_ZH && currentRegion.length > 3) ||\n            (currentRegion[0] === str.ITALY_ZH && currentRegion.length > 2) ||\n            (currentRegion[0] === str.LATVIA_ZH && currentRegion.length > 2) ||\n            (currentRegion[0] === str.PHILIPPINES_ZH && currentRegion.length > 2) ||\n            (currentRegion[0] === str.SLOVENIA_ZH && currentRegion.length > 2)\n        )\n            currentNodePath = [ str.GLOBAL_ZH, ...currentRegion.slice(0, currentRegion.length - 1) ].reverse().join('.')\n\n        let displayNodePath =\n            Object.keys(currentData).length > 4\n                ? currentNodePath\n                : currentRegion[0] === str.GLOBAL_ZH\n                  ? str.GLOBAL_ZH\n                  : [ str.GLOBAL_ZH, ...currentRegion.slice(0, currentRegion.length - 1) ].reverse().join('.')\n\n        if (currentRegion[0] === str.US_ZH && currentRegion.length > 1)\n            displayNodePath = [ str.GLOBAL_ZH, str.US_ZH ].reverse().join('.')\n\n        if (currentRegion[0] === str.UK_ZH && currentRegion.length > 2)\n            displayNodePath = [ str.GLOBAL_ZH, ...currentRegion.slice(0, 2) ].reverse().join('.')\n\n        if (currentRegion[0] === str.CHINA_ZH && currentRegion.length > 2)\n            displayNodePath = [ str.GLOBAL_ZH, ...currentRegion.slice(0, 2) ].reverse().join('.')\n\n        if (currentRegion[0] === str.ITALY_ZH && currentRegion.length > 1)\n            displayNodePath = [ str.GLOBAL_ZH, str.ITALY_ZH ].reverse().join('.')\n\n        if (currentRegion[0] === str.LATVIA_ZH && currentRegion.length > 1)\n            displayNodePath = [ str.GLOBAL_ZH, str.LATVIA_ZH ].reverse().join('.')\n\n        if (currentRegion[0] === str.PHILIPPINES_ZH && currentRegion.length > 1)\n            displayNodePath = [ str.GLOBAL_ZH, str.PHILIPPINES_ZH ].reverse().join('.')\n\n        if (currentRegion[0] === str.SLOVENIA_ZH && currentRegion.length > 1)\n            displayNodePath = [ str.GLOBAL_ZH, str.SLOVENIA_ZH ].reverse().join('.')\n\n        return (\n            <div className=\"bubble-plot-wrap\">\n                <ResponsiveBubble\n                    ref={this.bubble}\n                    root={plotData}\n                    theme={{\n                        fontFamily: 'Saira, sans-serif',\n                        fontSize: !fullTree ? 11 : 14,\n                        tooltip: {\n                            container: {\n                                background: darkMode ? 'var(--darkest-grey)' : 'white'\n                            }\n                        }\n                    }}\n                    margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n                    tooltip={({ color, value, data }) => (\n                        <span\n                            className=\"plot-tooltip\"\n                            style={{ color: color === '#fff' && !darkMode ? '#222' : color }}\n                        >\n                            {data.displayName}\n                            <span className=\"plot-tooltip-bold\">{` ${data[metric]}`}</span>\n                        </span>\n                    )}\n                    identity=\"name\"\n                    value={metric}\n                    colors={[ ...[ 0.3, 0.4, 0.15 ].map((x) => interpolateMagma(1 - x)), '#fff' ]}\n                    padding={3}\n                    enableLabel={true}\n                    label={({ data }) => data.displayName}\n                    labelTextColor={'#222'}\n                    labelSkipRadius={!fullTree ? 6 : 10}\n                    animate={!playing}\n                    motionStiffness={50}\n                    motionDamping={12}\n                    onClick={this.handleNodeClick}\n                    defs={[\n                        {\n                            id: 'bubbleLines',\n                            type: 'patternLines',\n                            background: 'none',\n                            color: 'inherit',\n                            rotation: -45,\n                            lineWidth: 4,\n                            spacing: 5\n                        }\n                    ]}\n                    fill={[\n                        {\n                            match: (d) => d.path === currentNodePath,\n                            id: 'bubbleLines'\n                        }\n                    ]}\n                    currentNodePath={displayNodePath}\n                />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}