{"ast":null,"code":"var _jsxFileName = \"/Users/jonchristie/Desktop/2020data/src/components/DateSlider.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider';\nimport format from 'date-fns/format';\nimport { scaleTime } from 'd3-scale';\nimport { timeDay } from 'd3-time';\nimport { parseDate, isoDate } from '../utils/utils';\nimport i18n from '../data/i18n.yml';\n\nfunction formatTick(ms, lang) {\n  return format(new Date(ms), i18n.DATE_FORMAT_1[lang]);\n}\n\nexport default class DateSlider extends Component {\n  render() {\n    const {\n      date,\n      lang,\n      startDate,\n      endDate,\n      handleDateChange,\n      handleTempDateChange,\n      fullMap,\n      fullPlot,\n      plotDates\n    } = this.props;\n    let min = parseDate(startDate);\n    const max = parseDate(endDate);\n    min = new Date(min.getTime() + 1000 * 60 * (max.getTimezoneOffset() - min.getTimezoneOffset()));\n    const numberOfDays = (max - min) / (1000 * 3600 * 24);\n    const dateTicksInterval = Math.round(numberOfDays / (!fullMap ? 10 : 15));\n    const dateTicks = scaleTime().domain([min, max]).ticks( // hack to fix unwanted behavior (https://github.com/d3/d3/issues/2240)\n    timeDay.filter(function (d) {\n      return timeDay.count(0, d) % dateTicksInterval === 0;\n    })).map(d => +d);\n    let values = !fullPlot ? [date] : plotDates;\n    values = values.map(x => {\n      let d = parseDate(x);\n      d = new Date(d.getTime() + 1000 * 60 * (max.getTimezoneOffset() - d.getTimezoneOffset()));\n      return +d;\n    });\n    return /*#__PURE__*/React.createElement(Slider, {\n      className: \"date-slider\",\n      mode: 1,\n      step: 1000 * 60 * 60 * 24,\n      domain: [+min, +max],\n      onChange: time => {\n        if (!fullPlot) handleDateChange(isoDate(time[0], endDate).slice(0, 10));\n      },\n      onUpdate: handleTempDateChange,\n      values: values,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Rail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, ({\n      getRailProps\n    }) => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"date-slider-rail-outer\"\n    }, getRailProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date-slider-rail-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Handles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, ({\n      handles,\n      getHandleProps\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, handles.map((handle, index) => /*#__PURE__*/React.createElement(Fragment, {\n      key: `handle-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"date-slider-handle-outer\",\n      style: {\n        left: `${handle.percent}%`\n      }\n    }, getHandleProps(handle.id), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      role: \"slider\",\n      className: \"date-slider-handle-inner\" // eslint-disable-next-line\n      ,\n      \"aria-valuemin\": +min // eslint-disable-next-line\n      ,\n      \"aria-valuemax\": +max,\n      \"aria-valuenow\": handle.value,\n      style: {\n        left: `${handle.percent}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(Tracks, {\n      left: !fullPlot,\n      right: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, ({\n      tracks,\n      getTrackProps\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, tracks.map(({\n      id,\n      source,\n      target\n    }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      key: `track-${id}`,\n      className: \"date-slider-track\",\n      style: {\n        left: `${source.percent}%`,\n        width: `${target.percent - source.percent}%`\n      }\n    }, getTrackProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(Ticks, {\n      values: dateTicks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, ({\n      ticks\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, ticks.map((tick, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: `tick-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date-slider-tick\",\n      style: {\n        left: `${tick.percent}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date-slider-tick-text\",\n      style: {\n        marginLeft: `${-(100 / ticks.length) / 2}%`,\n        width: `${100 / ticks.length}%`,\n        left: `${tick.percent}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, formatTick(tick.value, lang)))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jonchristie/Desktop/2020data/src/components/DateSlider.js"],"names":["React","Component","Fragment","Slider","Rail","Handles","Tracks","Ticks","format","scaleTime","timeDay","parseDate","isoDate","i18n","formatTick","ms","lang","Date","DATE_FORMAT_1","DateSlider","render","date","startDate","endDate","handleDateChange","handleTempDateChange","fullMap","fullPlot","plotDates","props","min","max","getTime","getTimezoneOffset","numberOfDays","dateTicksInterval","Math","round","dateTicks","domain","ticks","filter","d","count","map","values","x","time","slice","getRailProps","handles","getHandleProps","handle","index","left","percent","id","value","tracks","getTrackProps","source","target","width","tick","marginLeft","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider'\nimport format from 'date-fns/format'\nimport { scaleTime } from 'd3-scale'\nimport { timeDay } from 'd3-time'\nimport { parseDate, isoDate } from '../utils/utils'\nimport i18n from '../data/i18n.yml'\n\nfunction formatTick(ms, lang) {\n    return format(new Date(ms), i18n.DATE_FORMAT_1[lang])\n}\n\nexport default class DateSlider extends Component {\n    render() {\n        const {\n            date,\n            lang,\n            startDate,\n            endDate,\n            handleDateChange,\n            handleTempDateChange,\n            fullMap,\n            fullPlot,\n            plotDates\n        } = this.props\n        let min = parseDate(startDate)\n        const max = parseDate(endDate)\n        min = new Date(min.getTime() + 1000 * 60 * (max.getTimezoneOffset() - min.getTimezoneOffset()))\n\n        const numberOfDays = (max - min) / (1000 * 3600 * 24)\n        const dateTicksInterval = Math.round(numberOfDays / (!fullMap ? 10 : 15))\n\n        const dateTicks = scaleTime()\n            .domain([ min, max ])\n            .ticks(\n                // hack to fix unwanted behavior (https://github.com/d3/d3/issues/2240)\n                timeDay.filter(function(d) {\n                    return timeDay.count(0, d) % dateTicksInterval === 0\n                })\n            )\n            .map((d) => +d)\n\n        let values = !fullPlot ? [ date ] : plotDates\n        values = values.map((x) => {\n            let d = parseDate(x)\n            d = new Date(d.getTime() + 1000 * 60 * (max.getTimezoneOffset() - d.getTimezoneOffset()))\n            return +d\n        })\n\n        return (\n            <Slider\n                className=\"date-slider\"\n                mode={1}\n                step={1000 * 60 * 60 * 24}\n                domain={[ +min, +max ]}\n                onChange={(time) => {\n                    if (!fullPlot) handleDateChange(isoDate(time[0], endDate).slice(0, 10))\n                }}\n                onUpdate={handleTempDateChange}\n                values={values}\n            >\n                <Rail>\n                    {({ getRailProps }) => (\n                        <Fragment>\n                            <div className=\"date-slider-rail-outer\" {...getRailProps()} />\n                            <div className=\"date-slider-rail-inner\" />\n                        </Fragment>\n                    )}\n                </Rail>\n                <Handles>\n                    {({ handles, getHandleProps }) => (\n                        <div>\n                            {handles.map((handle, index) => (\n                                <Fragment key={`handle-${index}`}>\n                                    <div\n                                        className=\"date-slider-handle-outer\"\n                                        style={{\n                                            left: `${handle.percent}%`\n                                        }}\n                                        {...getHandleProps(handle.id)}\n                                    />\n                                    <div\n                                        role=\"slider\"\n                                        className=\"date-slider-handle-inner\"\n                                        // eslint-disable-next-line\n                                        aria-valuemin={+min}\n                                        // eslint-disable-next-line\n                                        aria-valuemax={+max}\n                                        aria-valuenow={handle.value}\n                                        style={{\n                                            left: `${handle.percent}%`\n                                        }}\n                                    />\n                                </Fragment>\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks left={!fullPlot} right={false}>\n                    {({ tracks, getTrackProps }) => (\n                        <div>\n                            {tracks.map(({ id, source, target }) => (\n                                <div\n                                    key={`track-${id}`}\n                                    className=\"date-slider-track\"\n                                    style={{\n                                        left: `${source.percent}%`,\n                                        width: `${target.percent - source.percent}%`\n                                    }}\n                                    {...getTrackProps()}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n                <Ticks values={dateTicks}>\n                    {({ ticks }) => (\n                        <div>\n                            {ticks.map((tick, index) => (\n                                <div key={`tick-${index}`}>\n                                    <div\n                                        className=\"date-slider-tick\"\n                                        style={{\n                                            left: `${tick.percent}%`\n                                        }}\n                                    />\n                                    <div\n                                        className=\"date-slider-tick-text\"\n                                        style={{\n                                            marginLeft: `${-(100 / ticks.length) / 2}%`,\n                                            width: `${100 / ticks.length}%`,\n                                            left: `${tick.percent}%`\n                                        }}\n                                    >\n                                        {formatTick(tick.value, lang)}\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </Ticks>\n            </Slider>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}