{"ast":null,"code":"import _toConsumableArray from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jonchristie/Desktop/2020data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{ResponsiveBump}from'@nivo/bump';import{isMobile,isIPad13}from'react-device-detect';import*as str from'../utils/strings';var BumpPlot=/*#__PURE__*/function(_Component){_inherits(BumpPlot,_Component);var _super=_createSuper(BumpPlot);function BumpPlot(){_classCallCheck(this,BumpPlot);return _super.apply(this,arguments);}_createClass(BumpPlot,[{key:\"render\",value:function render(){var _this=this;var _this$props=this.props,currentRegion=_this$props.currentRegion,plotParameters=_this$props.plotParameters,plotDataAll=_this$props.plotDataAll,plotTheme=_this$props.plotTheme;if(plotParameters.type!=='bump')return/*#__PURE__*/React.createElement(\"div\",null);return/*#__PURE__*/React.createElement(ResponsiveBump,{data:plotDataAll.plotData,theme:plotTheme,margin:{top:10,right:100,bottom:20,left:50},colors:function colors(d){return d.color;},lineWidth:2,activeLineWidth:4,inactiveLineWidth:2,inactiveOpacity:0.15,pointSize:0,activePointSize:0,inactivePointSize:0,pointBorderWidth:3,activePointBorderWidth:3,enableGridX:false,enableGridY:false,axisRight:null,axisTop:null,axisBottom:null,axisLeft:{tickSize:5,tickPadding:5,tickRotation:0},onClick:function onClick(serie){if(isMobile||isIPad13)return;_this.props.regionToggle(currentRegion.length===1&&currentRegion[0]===str.GLOBAL_ZH?[serie.name]:[].concat(_toConsumableArray(currentRegion),[serie.name]));},tooltip:plotParameters.tooltip});}}]);return BumpPlot;}(Component);export{BumpPlot as default};","map":{"version":3,"sources":["/Users/jonchristie/Desktop/2020data/src/components/BumpPlot.js"],"names":["React","Component","ResponsiveBump","isMobile","isIPad13","str","BumpPlot","props","currentRegion","plotParameters","plotDataAll","plotTheme","type","plotData","top","right","bottom","left","d","color","tickSize","tickPadding","tickRotation","serie","regionToggle","length","GLOBAL_ZH","name","tooltip"],"mappings":"0vBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,cAAT,KAA+B,YAA/B,CACA,OAASC,QAAT,CAAmBC,QAAnB,KAAmC,qBAAnC,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,kBAArB,C,GAEqBC,CAAAA,Q,wPACR,gCAC6D,KAAKC,KADlE,CACGC,aADH,aACGA,aADH,CACkBC,cADlB,aACkBA,cADlB,CACkCC,WADlC,aACkCA,WADlC,CAC+CC,SAD/C,aAC+CA,SAD/C,CAGL,GAAIF,cAAc,CAACG,IAAf,GAAwB,MAA5B,CAAoC,mBAAO,+BAAP,CAEpC,mBACI,oBAAC,cAAD,EACI,IAAI,CAAEF,WAAW,CAACG,QADtB,CAEI,KAAK,CAAEF,SAFX,CAGI,MAAM,CAAE,CAAEG,GAAG,CAAE,EAAP,CAAWC,KAAK,CAAE,GAAlB,CAAuBC,MAAM,CAAE,EAA/B,CAAmCC,IAAI,CAAE,EAAzC,CAHZ,CAII,MAAM,CAAE,gBAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,KAAT,EAJZ,CAKI,SAAS,CAAE,CALf,CAMI,eAAe,CAAE,CANrB,CAOI,iBAAiB,CAAE,CAPvB,CAQI,eAAe,CAAE,IARrB,CASI,SAAS,CAAE,CATf,CAUI,eAAe,CAAE,CAVrB,CAWI,iBAAiB,CAAE,CAXvB,CAYI,gBAAgB,CAAE,CAZtB,CAaI,sBAAsB,CAAE,CAb5B,CAcI,WAAW,CAAE,KAdjB,CAeI,WAAW,CAAE,KAfjB,CAgBI,SAAS,CAAE,IAhBf,CAiBI,OAAO,CAAE,IAjBb,CAkBI,UAAU,CAAE,IAlBhB,CAmBI,QAAQ,CAAE,CACNC,QAAQ,CAAE,CADJ,CAENC,WAAW,CAAE,CAFP,CAGNC,YAAY,CAAE,CAHR,CAnBd,CAwBI,OAAO,CAAE,iBAACC,KAAD,CAAW,CAChB,GAAIpB,QAAQ,EAAIC,QAAhB,CAA0B,OAC1B,KAAI,CAACG,KAAL,CAAWiB,YAAX,CACIhB,aAAa,CAACiB,MAAd,GAAyB,CAAzB,EAA8BjB,aAAa,CAAC,CAAD,CAAb,GAAqBH,GAAG,CAACqB,SAAvD,CACM,CAAEH,KAAK,CAACI,IAAR,CADN,8BAEWnB,aAFX,GAE0Be,KAAK,CAACI,IAFhC,EADJ,EAKH,CA/BL,CAgCI,OAAO,CAAElB,cAAc,CAACmB,OAhC5B,EADJ,CAoCH,C,sBA1CiC3B,S,SAAjBK,Q","sourcesContent":["import React, { Component } from 'react'\nimport { ResponsiveBump } from '@nivo/bump'\nimport { isMobile, isIPad13 } from 'react-device-detect'\nimport * as str from '../utils/strings'\n\nexport default class BumpPlot extends Component {\n    render() {\n        const { currentRegion, plotParameters, plotDataAll, plotTheme } = this.props\n\n        if (plotParameters.type !== 'bump') return <div />\n\n        return (\n            <ResponsiveBump\n                data={plotDataAll.plotData}\n                theme={plotTheme}\n                margin={{ top: 10, right: 100, bottom: 20, left: 50 }}\n                colors={(d) => d.color}\n                lineWidth={2}\n                activeLineWidth={4}\n                inactiveLineWidth={2}\n                inactiveOpacity={0.15}\n                pointSize={0}\n                activePointSize={0}\n                inactivePointSize={0}\n                pointBorderWidth={3}\n                activePointBorderWidth={3}\n                enableGridX={false}\n                enableGridY={false}\n                axisRight={null}\n                axisTop={null}\n                axisBottom={null}\n                axisLeft={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0\n                }}\n                onClick={(serie) => {\n                    if (isMobile || isIPad13) return\n                    this.props.regionToggle(\n                        currentRegion.length === 1 && currentRegion[0] === str.GLOBAL_ZH\n                            ? [ serie.name ]\n                            : [ ...currentRegion, serie.name ]\n                    )\n                }}\n                tooltip={plotParameters.tooltip}\n            />\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}