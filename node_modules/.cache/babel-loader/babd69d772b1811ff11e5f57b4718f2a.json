{"ast":null,"code":"import _toConsumableArray from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jonchristie/Downloads/covid19-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{ResponsiveBubble}from'@nivo/circle-packing';import{interpolateMagma}from'd3-scale-chromatic';import{getDataFromRegion,generateTreeData}from'../utils/utils';import*as str from'../utils/strings';var BubblePlot=/*#__PURE__*/function(_Component){_inherits(BubblePlot,_Component);var _super=_createSuper(BubblePlot);function BubblePlot(){var _this;_classCallCheck(this,BubblePlot);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={plotData:null,currentNodePath:null};_this.handleNodeClick=function(node){var region=node.path===str.GLOBAL_ZH?[node.path]:node.path.split('.').reverse().slice(1);_this.props.regionToggle(region);};_this.bringTextsToTop=function(){setTimeout(function(){document.querySelectorAll('.bubble-plot-wrap text').forEach(function(elem){var parentElem=elem.parentNode;// bring texts to top\nelem.parentNode.parentNode.appendChild(parentElem);});},100);};return _this;}_createClass(BubblePlot,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.bringTextsToTop();}},{key:\"componentDidMount\",value:function componentDidMount(){this.bringTextsToTop();}},{key:\"render\",value:function render(){var _this$props=this.props,data=_this$props.data,metric=_this$props.metric,currentRegion=_this$props.currentRegion,date=_this$props.date,playing=_this$props.playing,lang=_this$props.lang,darkMode=_this$props.darkMode,fullTree=_this$props.fullTree;if(data==null)return/*#__PURE__*/React.createElement(\"div\",null);var plotData={name:str.GLOBAL_ZH,displayName:lang==='en'?str.GLOBAL_EN:str.GLOBAL_ZH,confirmedCount:data[str.GLOBAL_ZH].confirmedCount[date],deadCount:data[str.GLOBAL_ZH].deadCount[date],curedCount:data[str.GLOBAL_ZH].curedCount[date],children:generateTreeData(data,date,lang)};var currentNodePath=currentRegion[0]===str.GLOBAL_ZH?str.GLOBAL_ZH:[str.GLOBAL_ZH].concat(_toConsumableArray(currentRegion)).reverse().join('.');// TODO: Node does not exist when count is 0. Need to find the parent node that has non-zero count.\nvar currentData=getDataFromRegion(data,currentRegion);var count=currentData[metric][date];if(count==null||count===0||currentRegion[0]===str.CHINA_ZH&&currentRegion.length>3||currentRegion[0]===str.US_ZH&&currentRegion.length===3||currentRegion[0]===str.UK_ZH&&currentRegion.length>3||currentRegion[0]===str.ITALY_ZH&&currentRegion.length>2||currentRegion[0]===str.LATVIA_ZH&&currentRegion.length>2||currentRegion[0]===str.PHILIPPINES_ZH&&currentRegion.length>2||currentRegion[0]===str.SLOVENIA_ZH&&currentRegion.length>2)currentNodePath=[str.GLOBAL_ZH].concat(_toConsumableArray(currentRegion.slice(0,currentRegion.length-1))).reverse().join('.');var displayNodePath=Object.keys(currentData).length>4?currentNodePath:currentRegion[0]===str.GLOBAL_ZH?str.GLOBAL_ZH:[str.GLOBAL_ZH].concat(_toConsumableArray(currentRegion.slice(0,currentRegion.length-1))).reverse().join('.');if(currentRegion[0]===str.US_ZH&&currentRegion.length>1)displayNodePath=[str.GLOBAL_ZH,str.US_ZH].reverse().join('.');if(currentRegion[0]===str.UK_ZH&&currentRegion.length>2)displayNodePath=[str.GLOBAL_ZH].concat(_toConsumableArray(currentRegion.slice(0,2))).reverse().join('.');if(currentRegion[0]===str.CHINA_ZH&&currentRegion.length>2)displayNodePath=[str.GLOBAL_ZH].concat(_toConsumableArray(currentRegion.slice(0,2))).reverse().join('.');if(currentRegion[0]===str.ITALY_ZH&&currentRegion.length>1)displayNodePath=[str.GLOBAL_ZH,str.ITALY_ZH].reverse().join('.');if(currentRegion[0]===str.LATVIA_ZH&&currentRegion.length>1)displayNodePath=[str.GLOBAL_ZH,str.LATVIA_ZH].reverse().join('.');if(currentRegion[0]===str.PHILIPPINES_ZH&&currentRegion.length>1)displayNodePath=[str.GLOBAL_ZH,str.PHILIPPINES_ZH].reverse().join('.');if(currentRegion[0]===str.SLOVENIA_ZH&&currentRegion.length>1)displayNodePath=[str.GLOBAL_ZH,str.SLOVENIA_ZH].reverse().join('.');return/*#__PURE__*/React.createElement(\"div\",{className:\"bubble-plot-wrap\"},/*#__PURE__*/React.createElement(ResponsiveBubble,{ref:this.bubble,root:plotData,theme:{fontFamily:'Saira, sans-serif',fontSize:!fullTree?11:14,tooltip:{container:{background:darkMode?'var(--darkest-grey)':'white'}}},margin:{top:20,right:20,bottom:20,left:20},tooltip:function tooltip(_ref){var color=_ref.color,value=_ref.value,data=_ref.data;return/*#__PURE__*/React.createElement(\"span\",{className:\"plot-tooltip\",style:{color:color==='#fff'&&!darkMode?'#222':color}},data.displayName,/*#__PURE__*/React.createElement(\"span\",{className:\"plot-tooltip-bold\"},\" \".concat(data[metric])));},identity:\"name\",value:metric,colors:[].concat(_toConsumableArray([0.3,0.4,0.15].map(function(x){return interpolateMagma(1-x);})),['#fff']),padding:3,enableLabel:true,label:function label(_ref2){var data=_ref2.data;return data.displayName;},labelTextColor:'#222',labelSkipRadius:!fullTree?6:10,animate:!playing,motionStiffness:50,motionDamping:12,onClick:this.handleNodeClick,defs:[{id:'bubbleLines',type:'patternLines',background:'none',color:'inherit',rotation:-45,lineWidth:4,spacing:5}],fill:[{match:function match(d){return d.path===currentNodePath;},id:'bubbleLines'}],currentNodePath:displayNodePath}));}}]);return BubblePlot;}(Component);export{BubblePlot as default};","map":{"version":3,"sources":["/Users/jonchristie/Downloads/covid19-master/src/components/BubblePlot.js"],"names":["React","Component","ResponsiveBubble","interpolateMagma","getDataFromRegion","generateTreeData","str","BubblePlot","state","plotData","currentNodePath","handleNodeClick","node","region","path","GLOBAL_ZH","split","reverse","slice","props","regionToggle","bringTextsToTop","setTimeout","document","querySelectorAll","forEach","elem","parentElem","parentNode","appendChild","data","metric","currentRegion","date","playing","lang","darkMode","fullTree","name","displayName","GLOBAL_EN","confirmedCount","deadCount","curedCount","children","join","currentData","count","CHINA_ZH","length","US_ZH","UK_ZH","ITALY_ZH","LATVIA_ZH","PHILIPPINES_ZH","SLOVENIA_ZH","displayNodePath","Object","keys","bubble","fontFamily","fontSize","tooltip","container","background","top","right","bottom","left","color","value","map","x","id","type","rotation","lineWidth","spacing","match","d"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { ResponsiveBubble } from '@nivo/circle-packing'\nimport { interpolateMagma } from 'd3-scale-chromatic'\nimport { getDataFromRegion, generateTreeData } from '../utils/utils'\nimport * as str from '../utils/strings'\n\nexport default class BubblePlot extends Component {\n    state = {\n        plotData: null,\n        currentNodePath: null\n    }\n\n    // hack so that bubble plot can interact with other plots\n    handleNodeClick = (node) => {\n        const region = node.path === str.GLOBAL_ZH ? [ node.path ] : node.path.split('.').reverse().slice(1)\n        this.props.regionToggle(region)\n    }\n\n    bringTextsToTop = () => {\n        setTimeout(() => {\n            document.querySelectorAll('.bubble-plot-wrap text').forEach((elem) => {\n                let parentElem = elem.parentNode\n                // bring texts to top\n                elem.parentNode.parentNode.appendChild(parentElem)\n            })\n        }, 100)\n    }\n\n    componentDidUpdate() {\n        this.bringTextsToTop()\n    }\n\n    componentDidMount() {\n        this.bringTextsToTop()\n    }\n\n    render() {\n        const { data, metric, currentRegion, date, playing, lang, darkMode, fullTree } = this.props\n        if (data == null) return <div />\n        let plotData = {\n            name: str.GLOBAL_ZH,\n            displayName: lang === 'en' ? str.GLOBAL_EN : str.GLOBAL_ZH,\n            confirmedCount: data[str.GLOBAL_ZH].confirmedCount[date],\n            deadCount: data[str.GLOBAL_ZH].deadCount[date],\n            curedCount: data[str.GLOBAL_ZH].curedCount[date],\n            children: generateTreeData(data, date, lang)\n        }\n\n        let currentNodePath =\n            currentRegion[0] === str.GLOBAL_ZH ? str.GLOBAL_ZH : [ str.GLOBAL_ZH, ...currentRegion ].reverse().join('.')\n\n        // TODO: Node does not exist when count is 0. Need to find the parent node that has non-zero count.\n        const currentData = getDataFromRegion(data, currentRegion)\n        const count = currentData[metric][date]\n        if (\n            count == null ||\n            count === 0 ||\n            (currentRegion[0] === str.CHINA_ZH && currentRegion.length > 3) ||\n            (currentRegion[0] === str.US_ZH && currentRegion.length === 3) ||\n            (currentRegion[0] === str.UK_ZH && currentRegion.length > 3) ||\n            (currentRegion[0] === str.ITALY_ZH && currentRegion.length > 2) ||\n            (currentRegion[0] === str.LATVIA_ZH && currentRegion.length > 2) ||\n            (currentRegion[0] === str.PHILIPPINES_ZH && currentRegion.length > 2) ||\n            (currentRegion[0] === str.SLOVENIA_ZH && currentRegion.length > 2)\n        )\n            currentNodePath = [ str.GLOBAL_ZH, ...currentRegion.slice(0, currentRegion.length - 1) ].reverse().join('.')\n\n        let displayNodePath =\n            Object.keys(currentData).length > 4\n                ? currentNodePath\n                : currentRegion[0] === str.GLOBAL_ZH\n                  ? str.GLOBAL_ZH\n                  : [ str.GLOBAL_ZH, ...currentRegion.slice(0, currentRegion.length - 1) ].reverse().join('.')\n\n        if (currentRegion[0] === str.US_ZH && currentRegion.length > 1)\n            displayNodePath = [ str.GLOBAL_ZH, str.US_ZH ].reverse().join('.')\n\n        if (currentRegion[0] === str.UK_ZH && currentRegion.length > 2)\n            displayNodePath = [ str.GLOBAL_ZH, ...currentRegion.slice(0, 2) ].reverse().join('.')\n\n        if (currentRegion[0] === str.CHINA_ZH && currentRegion.length > 2)\n            displayNodePath = [ str.GLOBAL_ZH, ...currentRegion.slice(0, 2) ].reverse().join('.')\n\n        if (currentRegion[0] === str.ITALY_ZH && currentRegion.length > 1)\n            displayNodePath = [ str.GLOBAL_ZH, str.ITALY_ZH ].reverse().join('.')\n\n        if (currentRegion[0] === str.LATVIA_ZH && currentRegion.length > 1)\n            displayNodePath = [ str.GLOBAL_ZH, str.LATVIA_ZH ].reverse().join('.')\n\n        if (currentRegion[0] === str.PHILIPPINES_ZH && currentRegion.length > 1)\n            displayNodePath = [ str.GLOBAL_ZH, str.PHILIPPINES_ZH ].reverse().join('.')\n\n        if (currentRegion[0] === str.SLOVENIA_ZH && currentRegion.length > 1)\n            displayNodePath = [ str.GLOBAL_ZH, str.SLOVENIA_ZH ].reverse().join('.')\n\n        return (\n            <div className=\"bubble-plot-wrap\">\n                <ResponsiveBubble\n                    ref={this.bubble}\n                    root={plotData}\n                    theme={{\n                        fontFamily: 'Saira, sans-serif',\n                        fontSize: !fullTree ? 11 : 14,\n                        tooltip: {\n                            container: {\n                                background: darkMode ? 'var(--darkest-grey)' : 'white'\n                            }\n                        }\n                    }}\n                    margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n                    tooltip={({ color, value, data }) => (\n                        <span\n                            className=\"plot-tooltip\"\n                            style={{ color: color === '#fff' && !darkMode ? '#222' : color }}\n                        >\n                            {data.displayName}\n                            <span className=\"plot-tooltip-bold\">{` ${data[metric]}`}</span>\n                        </span>\n                    )}\n                    identity=\"name\"\n                    value={metric}\n                    colors={[ ...[ 0.3, 0.4, 0.15 ].map((x) => interpolateMagma(1 - x)), '#fff' ]}\n                    padding={3}\n                    enableLabel={true}\n                    label={({ data }) => data.displayName}\n                    labelTextColor={'#222'}\n                    labelSkipRadius={!fullTree ? 6 : 10}\n                    animate={!playing}\n                    motionStiffness={50}\n                    motionDamping={12}\n                    onClick={this.handleNodeClick}\n                    defs={[\n                        {\n                            id: 'bubbleLines',\n                            type: 'patternLines',\n                            background: 'none',\n                            color: 'inherit',\n                            rotation: -45,\n                            lineWidth: 4,\n                            spacing: 5\n                        }\n                    ]}\n                    fill={[\n                        {\n                            match: (d) => d.path === currentNodePath,\n                            id: 'bubbleLines'\n                        }\n                    ]}\n                    currentNodePath={displayNodePath}\n                />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}