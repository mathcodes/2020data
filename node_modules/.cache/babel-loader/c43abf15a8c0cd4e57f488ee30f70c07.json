{"ast":null,"code":"var _jsxFileName = \"/Users/jonchristie/Desktop/2020data/src/components/RawTable.js\";\nimport React from 'react';\nimport { useTable, useExpanded, useSortBy, useFilters } from 'react-table';\n\nfunction textFilter(rows, ids, filterValue) {\n  return rows.filter(r => ids.some(id => {\n    const value = r.values[id];\n    return String(value).toLowerCase().includes(String(filterValue).toLowerCase());\n  }));\n} // flatten filter so that the filter can match subrows\n// reference: https://github.com/uqix/reactkit-table/blob/master/src/filter/flatten.js\n\n\nfunction flatten(filter) {\n  return function (rows, ids, filterValue) {\n    const flatRows = treeToFlat(rows).map(r => ({ ...r,\n      // or useFilters would recursively filter subRows\n      subRows: [],\n      depth: 0,\n      xFlat: true\n    }));\n    return filter(flatRows, ids, filterValue);\n  };\n}\n\nfunction treeToFlat(rows) {\n  return [...rows, ...rows.map(r => treeToFlat(r.subRows || [])).reduce((pre, cur) => [...pre, ...cur], [])];\n}\n\nconst RegionFilter = placeholderText => ({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) => {\n  return /*#__PURE__*/React.createElement(\"input\", {\n    className: \"data-table-input\",\n    value: filterValue || '',\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: placeholderText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default function RawTable(props) {\n  const {\n    columns,\n    data,\n    initialState,\n    onRowClick,\n    filterPlaceholder\n  } = props;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data,\n    defaultColumn: {\n      Filter: RegionFilter(filterPlaceholder),\n      filter: flatten(textFilter)\n    },\n    initialState,\n    getResetExpandedDeps: false\n  }, useFilters, useSortBy, useExpanded);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-table-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, headerGroups[0].headers[1].render('Filter'), /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    className: \"data-table\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, headerGroups.map((headerGroup, i) => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), headerGroup.headers.map((column, j) => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(column.getSortByToggleProps()), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }), column.render('Header')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({\n      id: `table-${row.original.region}`\n    }, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }), row.cells.map((cell, cellIdx) => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        onClick: cellIdx > 0 ? () => onRowClick(row) : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 41\n        }\n      }), cell.render('Cell'));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, rows.length, \" regions\"));\n}","map":{"version":3,"sources":["/Users/jonchristie/Desktop/2020data/src/components/RawTable.js"],"names":["React","useTable","useExpanded","useSortBy","useFilters","textFilter","rows","ids","filterValue","filter","r","some","id","value","values","String","toLowerCase","includes","flatten","flatRows","treeToFlat","map","subRows","depth","xFlat","reduce","pre","cur","RegionFilter","placeholderText","column","preFilteredRows","setFilter","e","target","undefined","RawTable","props","columns","data","initialState","onRowClick","filterPlaceholder","getTableProps","getTableBodyProps","headerGroups","prepareRow","defaultColumn","Filter","getResetExpandedDeps","headers","render","headerGroup","i","getHeaderGroupProps","j","getHeaderProps","getSortByToggleProps","row","original","region","getRowProps","cells","cell","cellIdx","getCellProps","display","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTable, useExpanded, useSortBy, useFilters } from 'react-table'\n\nfunction textFilter(rows, ids, filterValue) {\n    return rows.filter((r) =>\n        ids.some((id) => {\n            const value = r.values[id]\n            return String(value).toLowerCase().includes(String(filterValue).toLowerCase())\n        })\n    )\n}\n\n// flatten filter so that the filter can match subrows\n// reference: https://github.com/uqix/reactkit-table/blob/master/src/filter/flatten.js\nfunction flatten(filter) {\n    return function(rows, ids, filterValue) {\n        const flatRows = treeToFlat(rows).map((r) => ({\n            ...r,\n            // or useFilters would recursively filter subRows\n            subRows: [],\n            depth: 0,\n            xFlat: true\n        }))\n        return filter(flatRows, ids, filterValue)\n    }\n}\n\nfunction treeToFlat(rows) {\n    return [ ...rows, ...rows.map((r) => treeToFlat(r.subRows || [])).reduce((pre, cur) => [ ...pre, ...cur ], []) ]\n}\n\nconst RegionFilter = (placeholderText) => ({ column: { filterValue, preFilteredRows, setFilter } }) => {\n    return (\n        <input\n            className=\"data-table-input\"\n            value={filterValue || ''}\n            onChange={(e) => {\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n            }}\n            placeholder={placeholderText}\n        />\n    )\n}\n\nexport default function RawTable(props) {\n    const { columns, data, initialState, onRowClick, filterPlaceholder } = props\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn: { Filter: RegionFilter(filterPlaceholder), filter: flatten(textFilter) },\n            initialState,\n            getResetExpandedDeps: false\n        },\n        useFilters,\n        useSortBy,\n        useExpanded\n    )\n\n    return (\n        <div className=\"data-table-wrap\">\n            {headerGroups[0].headers[1].render('Filter')}\n            <table className=\"data-table\" {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup, i) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column, j) => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map((row, i) => {\n                        prepareRow(row)\n                        return (\n                            <tr id={`table-${row.original.region}`} {...row.getRowProps()}>\n                                {row.cells.map((cell, cellIdx) => {\n                                    return (\n                                        <td\n                                            {...cell.getCellProps()}\n                                            onClick={cellIdx > 0 ? () => onRowClick(row) : null}\n                                        >\n                                            {cell.render('Cell')}\n                                        </td>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <div style={{ display: 'none' }}>{rows.length} regions</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}